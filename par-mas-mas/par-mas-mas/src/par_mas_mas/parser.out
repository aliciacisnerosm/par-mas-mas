Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    VD

Grammar

Rule 0     S' -> program
Rule 1     cte_f -> CTE_I DOT CTE_I
Rule 2     program -> PROGRAM ID punto_program COLON main
Rule 3     program -> PROGRAM ID punto_program COLON variables main
Rule 4     program -> PROGRAM ID punto_program COLON variables funciones main
Rule 5     program -> PROGRAM ID punto_program COLON funciones main
Rule 6     punto_program -> <empty>
Rule 7     main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL
Rule 8     main_aux -> estatutos_main_multiple
Rule 9     main_aux -> empty
Rule 10    variables -> VAR punto_variables_1 SEMICOLON
Rule 11    variables -> VAR punto_variables_1 variables_aux SEMICOLON
Rule 12    punto_variables_1 -> <empty>
Rule 13    variables_aux -> tipo COLON declaracion_inicial
Rule 14    variables_aux -> tipo COLON declaracion_inicial MORE variables_aux
Rule 15    tipo -> INT
Rule 16    tipo -> FLOAT
Rule 17    tipo -> CHAR
Rule 18    declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial
Rule 19    declaracion_inicial -> dec_varaux punto_dec_var_1
Rule 20    punto_dec_var_1 -> <empty>
Rule 21    dec_varaux -> ID
Rule 22    dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR
Rule 23    dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR
Rule 24    punto_dec_varaux_1 -> <empty>
Rule 25    dec_var -> dec_varaux COMMA dec_var
Rule 26    dec_var -> dec_varaux
Rule 27    dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada
Rule 28    dec_var_llamada -> m_exp punto_verify_dec_param
Rule 29    punto_mas_k -> <empty>
Rule 30    punto_verify_dec_param -> <empty>
Rule 31    funciones -> funciones_aux
Rule 32    funciones -> funciones_aux funciones
Rule 33    funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
Rule 34    funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
Rule 35    punto_return_value -> <empty>
Rule 36    not_variables -> variables count_vars
Rule 37    not_variables -> empty
Rule 38    not_params -> parametros count_params
Rule 39    not_params -> empty
Rule 40    punto_end_function_return -> <empty>
Rule 41    punto_id_func -> <empty>
Rule 42    parametros -> dec_var_param COMMA parametros
Rule 43    parametros -> dec_var_param
Rule 44    dec_var_param -> tipo ID punto_push_param
Rule 45    punto_push_param -> <empty>
Rule 46    count_params -> <empty>
Rule 47    count_vars -> <empty>
Rule 48    end_func -> <empty>
Rule 49    exp_or -> t_exp punto_pop_or t_exp_or_aux
Rule 50    exp_or -> t_exp punto_pop_or
Rule 51    punto_pop_or -> <empty>
Rule 52    t_exp_or_aux -> OR punto_push_or exp_or
Rule 53    punto_push_or -> <empty>
Rule 54    t_exp -> g_exp pop_and t_exp_aux
Rule 55    t_exp -> g_exp pop_and
Rule 56    pop_and -> <empty>
Rule 57    t_exp_aux -> AND punto_push_and t_exp
Rule 58    punto_push_and -> <empty>
Rule 59    g_exp -> m_exp
Rule 60    g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional
Rule 61    punto_relacionales -> <empty>
Rule 62    punto_pop_relacional -> <empty>
Rule 63    m_exp -> termino punto_mexp_pop
Rule 64    m_exp -> termino punto_mexp_pop m_exp_aux
Rule 65    punto_mexp_pop -> <empty>
Rule 66    m_exp_aux -> PLUS punto_m_exp_push m_exp
Rule 67    m_exp_aux -> MINUS punto_m_exp_push m_exp
Rule 68    punto_m_exp_push -> <empty>
Rule 69    termino -> factor punto_termino_pop
Rule 70    termino -> factor punto_termino_pop termino_aux
Rule 71    punto_termino_pop -> <empty>
Rule 72    termino_aux -> MULTIPLY punto_termino_aux termino
Rule 73    termino_aux -> DIVIDE punto_termino_aux termino
Rule 74    punto_termino_aux -> <empty>
Rule 75    factor -> cte
Rule 76    factor -> ID LEFT_PAR dec_var RIGHT_PAR
Rule 77    factor -> ID LEFT_PAR RIGHT_PAR
Rule 78    factor -> LEFT_PAR exp_or RIGHT_PAR
Rule 79    relacionales -> LESS_THAN
Rule 80    relacionales -> GREATER_THAN
Rule 81    relacionales -> DIFFERENT
Rule 82    relacionales -> EQUAL
Rule 83    relacionales -> GREATER_EQUAL
Rule 84    relacionales -> LESS_EQUAL
Rule 85    estatutos -> estatutos_main_aux
Rule 86    estatutos -> retorno SEMICOLON
Rule 87    estatutos_main -> asignacion SEMICOLON
Rule 88    estatutos_main -> llamada SEMICOLON
Rule 89    estatutos_main -> lectura SEMICOLON
Rule 90    estatutos_main -> escritura SEMICOLON
Rule 91    estatutos_main -> decision SEMICOLON
Rule 92    estatutos_main -> repeticion SEMICOLON
Rule 93    estatutos_main_multiple -> estatutos_main estatutos_main_multiple
Rule 94    estatutos_main_multiple -> estatutos_main
Rule 95    estatutos_main_aux -> estatutos_main estatutos
Rule 96    estatutos_main_aux -> estatutos_main
Rule 97    asignacion -> dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion
Rule 98    punto_asignacion_var -> <empty>
Rule 99    punto_igual -> <empty>
Rule 100   punto_asignacion -> <empty>
Rule 101   llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
Rule 102   llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
Rule 103   punto_verify_id -> <empty>
Rule 104   punto_verify_total_params -> <empty>
Rule 105   punto_end_llamada -> <empty>
Rule 106   punto_era -> <empty>
Rule 107   retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
Rule 108   punto_return -> <empty>
Rule 109   punto_read_stack -> <empty>
Rule 110   lectura -> READ LEFT_PAR lectura_var RIGHT_PAR
Rule 111   lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var
Rule 112   lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand
Rule 113   punto_push_dec_var -> <empty>
Rule 114   punto_add_read_operand -> <empty>
Rule 115   escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR
Rule 116   escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand
Rule 117   escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand
Rule 118   escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
Rule 119   escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
Rule 120   punto_escritura_push -> <empty>
Rule 121   punto_write_stack -> <empty>
Rule 122   punto_add_write_operand -> <empty>
Rule 123   decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
Rule 124   decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
Rule 125   punto_if_exp -> <empty>
Rule 126   punto_else -> <empty>
Rule 127   punto_end_if -> <empty>
Rule 128   repeticion -> condicional
Rule 129   repeticion -> no_condicional
Rule 130   no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
Rule 131   punto_for -> <empty>
Rule 132   punto_exp_for_inf -> <empty>
Rule 133   punto_exp_for_sup -> <empty>
Rule 134   punto_end_for -> <empty>
Rule 135   condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
Rule 136   punto_while -> <empty>
Rule 137   punto_validar_exp -> <empty>
Rule 138   punto_end_while -> <empty>
Rule 139   cte -> ID factor_push_operand
Rule 140   cte -> CTE_I factor_int_push
Rule 141   cte -> cte_f factor_float_push
Rule 142   cte -> CTE_CHAR factor_char_push
Rule 143   factor_push_operand -> <empty>
Rule 144   factor_float_push -> <empty>
Rule 145   factor_int_push -> <empty>
Rule 146   factor_char_push -> <empty>
Rule 147   empty -> <empty>

Terminals, with rules where they appear

AND                  : 57
CHAR                 : 17
COLON                : 2 3 4 5 13 14
COMMA                : 18 25 27 42 111 118 119
CTE_CHAR             : 142
CTE_I                : 1 1 22 23 23 140
DIFFERENT            : 81
DIVIDE               : 73
DO                   : 
DOT                  : 1
ELSE                 : 124
EQUAL                : 82
EQUALS               : 97 130
FLOAT                : 16
FOR                  : 130
FUNC                 : 33 34
GREATER_EQUAL        : 83
GREATER_THAN         : 80
ID                   : 2 3 4 5 21 22 23 33 34 44 76 77 101 102 139
IF                   : 123 124
INT                  : 15
LEFT_BR              : 22 23 23
LEFT_CURL            : 7 33 34 123 124 124 130 135
LEFT_PAR             : 7 33 34 76 77 78 101 102 107 110 115 123 124 130 135
LESS_EQUAL           : 84
LESS_THAN            : 79
MAIN                 : 7
MINUS                : 67
MORE                 : 14
MULTIPLY             : 72
OR                   : 52
PLUS                 : 66
PROGRAM              : 2 3 4 5
READ                 : 110
RETURN               : 107
RIGHT_BR             : 22 23 23
RIGHT_CURL           : 7 33 34 123 124 124 130 135
RIGHT_PAR            : 7 33 34 76 77 78 101 102 107 110 115 123 124 130 135
SEMICOLON            : 10 11 86 87 88 89 90 91 92
STR                  : 116 118
THEN                 : 123 124
TO                   : 130
VAR                  : 10 11
VD                   : 
VOID                 : 34
WHILE                : 135
WRITE                : 115
error                : 

Nonterminals, with rules where they appear

asignacion           : 87
condicional          : 128
count_params         : 38
count_vars           : 34 36
cte                  : 75
cte_f                : 141
dec_var              : 25 76
dec_var_llamada      : 27 102
dec_var_param        : 42 43
dec_varaux           : 18 19 25 26 97 111 112 130
decision             : 91
declaracion_inicial  : 13 14 18
empty                : 9 37 39
end_func             : 34
escritura            : 90
escritura_aux        : 115 118 119
estatutos            : 33 34 95 123 124 124 130 135
estatutos_main       : 93 94 95 96
estatutos_main_aux   : 85
estatutos_main_multiple : 8 93
exp_or               : 52 78 123 124 135
factor               : 69 70
factor_char_push     : 142
factor_float_push    : 141
factor_int_push      : 140
factor_push_operand  : 139
funciones            : 4 5 32
funciones_aux        : 31 32
g_exp                : 54 55
lectura              : 89
lectura_var          : 110 111
llamada              : 88
m_exp                : 27 28 59 60 60 66 67 97 107 117 119 130 130
m_exp_aux            : 64
main                 : 2 3 4 5
main_aux             : 7
no_condicional       : 129
not_params           : 33 34
not_variables        : 33 34
parametros           : 38 42
pop_and              : 54 55
program              : 0
punto_add_read_operand : 111 112
punto_add_write_operand : 116 117 118 119
punto_asignacion     : 97
punto_asignacion_var : 97
punto_dec_var_1      : 18 19
punto_dec_varaux_1   : 
punto_else           : 124
punto_end_for        : 130
punto_end_function_return : 33
punto_end_if         : 123 124
punto_end_llamada    : 101 102
punto_end_while      : 135
punto_era            : 101 102
punto_escritura_push : 116 117 118 119
punto_exp_for_inf    : 130
punto_exp_for_sup    : 130
punto_for            : 130
punto_id_func        : 33 34
punto_if_exp         : 123 124
punto_igual          : 97
punto_m_exp_push     : 66 67
punto_mas_k          : 27
punto_mexp_pop       : 63 64
punto_pop_or         : 49 50
punto_pop_relacional : 60
punto_program        : 2 3 4 5
punto_push_and       : 57
punto_push_dec_var   : 111 112
punto_push_or        : 52
punto_push_param     : 44
punto_read_stack     : 111 112
punto_relacionales   : 60
punto_return         : 107
punto_return_value   : 33
punto_termino_aux    : 72 73
punto_termino_pop    : 69 70
punto_validar_exp    : 135
punto_variables_1    : 10 11
punto_verify_dec_param : 27 28
punto_verify_id      : 101 102
punto_verify_total_params : 102
punto_while          : 135
punto_write_stack    : 116 117 118 119
relacionales         : 60
repeticion           : 92
retorno              : 86
t_exp                : 49 50 57
t_exp_aux            : 54
t_exp_or_aux         : 49
termino              : 63 64 72 73
termino_aux          : 70
tipo                 : 13 14 33 44
variables            : 3 4 36
variables_aux        : 11 14

Parsing method: LALR

state 0

    (0) S' -> . program
    (2) program -> . PROGRAM ID punto_program COLON main
    (3) program -> . PROGRAM ID punto_program COLON variables main
    (4) program -> . PROGRAM ID punto_program COLON variables funciones main
    (5) program -> . PROGRAM ID punto_program COLON funciones main

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (2) program -> PROGRAM . ID punto_program COLON main
    (3) program -> PROGRAM . ID punto_program COLON variables main
    (4) program -> PROGRAM . ID punto_program COLON variables funciones main
    (5) program -> PROGRAM . ID punto_program COLON funciones main

    ID              shift and go to state 3


state 3

    (2) program -> PROGRAM ID . punto_program COLON main
    (3) program -> PROGRAM ID . punto_program COLON variables main
    (4) program -> PROGRAM ID . punto_program COLON variables funciones main
    (5) program -> PROGRAM ID . punto_program COLON funciones main
    (6) punto_program -> .

    COLON           reduce using rule 6 (punto_program -> .)

    punto_program                  shift and go to state 4

state 4

    (2) program -> PROGRAM ID punto_program . COLON main
    (3) program -> PROGRAM ID punto_program . COLON variables main
    (4) program -> PROGRAM ID punto_program . COLON variables funciones main
    (5) program -> PROGRAM ID punto_program . COLON funciones main

    COLON           shift and go to state 5


state 5

    (2) program -> PROGRAM ID punto_program COLON . main
    (3) program -> PROGRAM ID punto_program COLON . variables main
    (4) program -> PROGRAM ID punto_program COLON . variables funciones main
    (5) program -> PROGRAM ID punto_program COLON . funciones main
    (7) main -> . MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL
    (10) variables -> . VAR punto_variables_1 SEMICOLON
    (11) variables -> . VAR punto_variables_1 variables_aux SEMICOLON
    (31) funciones -> . funciones_aux
    (32) funciones -> . funciones_aux funciones
    (33) funciones_aux -> . tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (34) funciones_aux -> . VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . CHAR

    MAIN            shift and go to state 9
    VAR             shift and go to state 10
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    main                           shift and go to state 6
    variables                      shift and go to state 7
    funciones                      shift and go to state 8
    funciones_aux                  shift and go to state 11
    tipo                           shift and go to state 12

state 6

    (2) program -> PROGRAM ID punto_program COLON main .

    $end            reduce using rule 2 (program -> PROGRAM ID punto_program COLON main .)


state 7

    (3) program -> PROGRAM ID punto_program COLON variables . main
    (4) program -> PROGRAM ID punto_program COLON variables . funciones main
    (7) main -> . MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL
    (31) funciones -> . funciones_aux
    (32) funciones -> . funciones_aux funciones
    (33) funciones_aux -> . tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (34) funciones_aux -> . VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . CHAR

    MAIN            shift and go to state 9
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    main                           shift and go to state 17
    funciones                      shift and go to state 18
    funciones_aux                  shift and go to state 11
    tipo                           shift and go to state 12

state 8

    (5) program -> PROGRAM ID punto_program COLON funciones . main
    (7) main -> . MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL

    MAIN            shift and go to state 9

    main                           shift and go to state 19

state 9

    (7) main -> MAIN . LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL

    LEFT_PAR        shift and go to state 20


state 10

    (10) variables -> VAR . punto_variables_1 SEMICOLON
    (11) variables -> VAR . punto_variables_1 variables_aux SEMICOLON
    (12) punto_variables_1 -> .

    SEMICOLON       reduce using rule 12 (punto_variables_1 -> .)
    INT             reduce using rule 12 (punto_variables_1 -> .)
    FLOAT           reduce using rule 12 (punto_variables_1 -> .)
    CHAR            reduce using rule 12 (punto_variables_1 -> .)

    punto_variables_1              shift and go to state 21

state 11

    (31) funciones -> funciones_aux .
    (32) funciones -> funciones_aux . funciones
    (31) funciones -> . funciones_aux
    (32) funciones -> . funciones_aux funciones
    (33) funciones_aux -> . tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (34) funciones_aux -> . VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . CHAR

    MAIN            reduce using rule 31 (funciones -> funciones_aux .)
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    funciones_aux                  shift and go to state 11
    funciones                      shift and go to state 22
    tipo                           shift and go to state 12

state 12

    (33) funciones_aux -> tipo . FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    FUNC            shift and go to state 23


state 13

    (34) funciones_aux -> VOID . FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    FUNC            shift and go to state 24


state 14

    (15) tipo -> INT .

    FUNC            reduce using rule 15 (tipo -> INT .)
    COLON           reduce using rule 15 (tipo -> INT .)
    ID              reduce using rule 15 (tipo -> INT .)


state 15

    (16) tipo -> FLOAT .

    FUNC            reduce using rule 16 (tipo -> FLOAT .)
    COLON           reduce using rule 16 (tipo -> FLOAT .)
    ID              reduce using rule 16 (tipo -> FLOAT .)


state 16

    (17) tipo -> CHAR .

    FUNC            reduce using rule 17 (tipo -> CHAR .)
    COLON           reduce using rule 17 (tipo -> CHAR .)
    ID              reduce using rule 17 (tipo -> CHAR .)


state 17

    (3) program -> PROGRAM ID punto_program COLON variables main .

    $end            reduce using rule 3 (program -> PROGRAM ID punto_program COLON variables main .)


state 18

    (4) program -> PROGRAM ID punto_program COLON variables funciones . main
    (7) main -> . MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL

    MAIN            shift and go to state 9

    main                           shift and go to state 25

state 19

    (5) program -> PROGRAM ID punto_program COLON funciones main .

    $end            reduce using rule 5 (program -> PROGRAM ID punto_program COLON funciones main .)


state 20

    (7) main -> MAIN LEFT_PAR . RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL

    RIGHT_PAR       shift and go to state 26


state 21

    (10) variables -> VAR punto_variables_1 . SEMICOLON
    (11) variables -> VAR punto_variables_1 . variables_aux SEMICOLON
    (13) variables_aux -> . tipo COLON declaracion_inicial
    (14) variables_aux -> . tipo COLON declaracion_inicial MORE variables_aux
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . CHAR

    SEMICOLON       shift and go to state 27
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    variables_aux                  shift and go to state 28
    tipo                           shift and go to state 29

state 22

    (32) funciones -> funciones_aux funciones .

    MAIN            reduce using rule 32 (funciones -> funciones_aux funciones .)


state 23

    (33) funciones_aux -> tipo FUNC . ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    ID              shift and go to state 30


state 24

    (34) funciones_aux -> VOID FUNC . ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    ID              shift and go to state 31


state 25

    (4) program -> PROGRAM ID punto_program COLON variables funciones main .

    $end            reduce using rule 4 (program -> PROGRAM ID punto_program COLON variables funciones main .)


state 26

    (7) main -> MAIN LEFT_PAR RIGHT_PAR . LEFT_CURL main_aux RIGHT_CURL

    LEFT_CURL       shift and go to state 32


state 27

    (10) variables -> VAR punto_variables_1 SEMICOLON .

    MAIN            reduce using rule 10 (variables -> VAR punto_variables_1 SEMICOLON .)
    VOID            reduce using rule 10 (variables -> VAR punto_variables_1 SEMICOLON .)
    INT             reduce using rule 10 (variables -> VAR punto_variables_1 SEMICOLON .)
    FLOAT           reduce using rule 10 (variables -> VAR punto_variables_1 SEMICOLON .)
    CHAR            reduce using rule 10 (variables -> VAR punto_variables_1 SEMICOLON .)
    RETURN          reduce using rule 10 (variables -> VAR punto_variables_1 SEMICOLON .)
    ID              reduce using rule 10 (variables -> VAR punto_variables_1 SEMICOLON .)
    READ            reduce using rule 10 (variables -> VAR punto_variables_1 SEMICOLON .)
    WRITE           reduce using rule 10 (variables -> VAR punto_variables_1 SEMICOLON .)
    IF              reduce using rule 10 (variables -> VAR punto_variables_1 SEMICOLON .)
    WHILE           reduce using rule 10 (variables -> VAR punto_variables_1 SEMICOLON .)
    FOR             reduce using rule 10 (variables -> VAR punto_variables_1 SEMICOLON .)


state 28

    (11) variables -> VAR punto_variables_1 variables_aux . SEMICOLON

    SEMICOLON       shift and go to state 33


state 29

    (13) variables_aux -> tipo . COLON declaracion_inicial
    (14) variables_aux -> tipo . COLON declaracion_inicial MORE variables_aux

    COLON           shift and go to state 34


state 30

    (33) funciones_aux -> tipo FUNC ID . punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (41) punto_id_func -> .

    LEFT_PAR        reduce using rule 41 (punto_id_func -> .)

    punto_id_func                  shift and go to state 35

state 31

    (34) funciones_aux -> VOID FUNC ID . punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (41) punto_id_func -> .

    LEFT_PAR        reduce using rule 41 (punto_id_func -> .)

    punto_id_func                  shift and go to state 36

state 32

    (7) main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL . main_aux RIGHT_CURL
    (8) main_aux -> . estatutos_main_multiple
    (9) main_aux -> . empty
    (93) estatutos_main_multiple -> . estatutos_main estatutos_main_multiple
    (94) estatutos_main_multiple -> . estatutos_main
    (147) empty -> .
    (87) estatutos_main -> . asignacion SEMICOLON
    (88) estatutos_main -> . llamada SEMICOLON
    (89) estatutos_main -> . lectura SEMICOLON
    (90) estatutos_main -> . escritura SEMICOLON
    (91) estatutos_main -> . decision SEMICOLON
    (92) estatutos_main -> . repeticion SEMICOLON
    (97) asignacion -> . dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion
    (101) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (102) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (110) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (115) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (123) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (128) repeticion -> . condicional
    (129) repeticion -> . no_condicional
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR
    (135) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (130) no_condicional -> . FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RIGHT_CURL      reduce using rule 147 (empty -> .)
    ID              shift and go to state 48
    READ            shift and go to state 49
    WRITE           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 54
    FOR             shift and go to state 55

    main_aux                       shift and go to state 37
    estatutos_main_multiple        shift and go to state 38
    empty                          shift and go to state 39
    estatutos_main                 shift and go to state 40
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    lectura                        shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    repeticion                     shift and go to state 46
    dec_varaux                     shift and go to state 47
    condicional                    shift and go to state 52
    no_condicional                 shift and go to state 53

state 33

    (11) variables -> VAR punto_variables_1 variables_aux SEMICOLON .

    MAIN            reduce using rule 11 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    VOID            reduce using rule 11 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    INT             reduce using rule 11 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    FLOAT           reduce using rule 11 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    CHAR            reduce using rule 11 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    RETURN          reduce using rule 11 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    ID              reduce using rule 11 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    READ            reduce using rule 11 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    WRITE           reduce using rule 11 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    IF              reduce using rule 11 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    WHILE           reduce using rule 11 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    FOR             reduce using rule 11 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)


state 34

    (13) variables_aux -> tipo COLON . declaracion_inicial
    (14) variables_aux -> tipo COLON . declaracion_inicial MORE variables_aux
    (18) declaracion_inicial -> . dec_varaux punto_dec_var_1 COMMA declaracion_inicial
    (19) declaracion_inicial -> . dec_varaux punto_dec_var_1
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR

    ID              shift and go to state 58

    declaracion_inicial            shift and go to state 56
    dec_varaux                     shift and go to state 57

state 35

    (33) funciones_aux -> tipo FUNC ID punto_id_func . punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (35) punto_return_value -> .

    LEFT_PAR        reduce using rule 35 (punto_return_value -> .)

    punto_return_value             shift and go to state 59

state 36

    (34) funciones_aux -> VOID FUNC ID punto_id_func . LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    LEFT_PAR        shift and go to state 60


state 37

    (7) main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux . RIGHT_CURL

    RIGHT_CURL      shift and go to state 61


state 38

    (8) main_aux -> estatutos_main_multiple .

    RIGHT_CURL      reduce using rule 8 (main_aux -> estatutos_main_multiple .)


state 39

    (9) main_aux -> empty .

    RIGHT_CURL      reduce using rule 9 (main_aux -> empty .)


state 40

    (93) estatutos_main_multiple -> estatutos_main . estatutos_main_multiple
    (94) estatutos_main_multiple -> estatutos_main .
    (93) estatutos_main_multiple -> . estatutos_main estatutos_main_multiple
    (94) estatutos_main_multiple -> . estatutos_main
    (87) estatutos_main -> . asignacion SEMICOLON
    (88) estatutos_main -> . llamada SEMICOLON
    (89) estatutos_main -> . lectura SEMICOLON
    (90) estatutos_main -> . escritura SEMICOLON
    (91) estatutos_main -> . decision SEMICOLON
    (92) estatutos_main -> . repeticion SEMICOLON
    (97) asignacion -> . dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion
    (101) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (102) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (110) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (115) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (123) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (128) repeticion -> . condicional
    (129) repeticion -> . no_condicional
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR
    (135) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (130) no_condicional -> . FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RIGHT_CURL      reduce using rule 94 (estatutos_main_multiple -> estatutos_main .)
    ID              shift and go to state 48
    READ            shift and go to state 49
    WRITE           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 54
    FOR             shift and go to state 55

    estatutos_main                 shift and go to state 40
    estatutos_main_multiple        shift and go to state 62
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    lectura                        shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    repeticion                     shift and go to state 46
    dec_varaux                     shift and go to state 47
    condicional                    shift and go to state 52
    no_condicional                 shift and go to state 53

state 41

    (87) estatutos_main -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 63


state 42

    (88) estatutos_main -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 64


state 43

    (89) estatutos_main -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 65


state 44

    (90) estatutos_main -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 66


state 45

    (91) estatutos_main -> decision . SEMICOLON

    SEMICOLON       shift and go to state 67


state 46

    (92) estatutos_main -> repeticion . SEMICOLON

    SEMICOLON       shift and go to state 68


state 47

    (97) asignacion -> dec_varaux . punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion
    (98) punto_asignacion_var -> .

    EQUALS          reduce using rule 98 (punto_asignacion_var -> .)

    punto_asignacion_var           shift and go to state 69

state 48

    (101) llamada -> ID . punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (102) llamada -> ID . punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (21) dec_varaux -> ID .
    (22) dec_varaux -> ID . LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> ID . LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR
    (103) punto_verify_id -> .

    EQUALS          reduce using rule 21 (dec_varaux -> ID .)
    LEFT_BR         shift and go to state 71
    LEFT_PAR        reduce using rule 103 (punto_verify_id -> .)

    punto_verify_id                shift and go to state 70

state 49

    (110) lectura -> READ . LEFT_PAR lectura_var RIGHT_PAR

    LEFT_PAR        shift and go to state 72


state 50

    (115) escritura -> WRITE . LEFT_PAR escritura_aux RIGHT_PAR

    LEFT_PAR        shift and go to state 73


state 51

    (123) decision -> IF . LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> IF . LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if

    LEFT_PAR        shift and go to state 74


state 52

    (128) repeticion -> condicional .

    SEMICOLON       reduce using rule 128 (repeticion -> condicional .)


state 53

    (129) repeticion -> no_condicional .

    SEMICOLON       reduce using rule 129 (repeticion -> no_condicional .)


state 54

    (135) condicional -> WHILE . punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (136) punto_while -> .

    LEFT_PAR        reduce using rule 136 (punto_while -> .)

    punto_while                    shift and go to state 75

state 55

    (130) no_condicional -> FOR . LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    LEFT_PAR        shift and go to state 76


state 56

    (13) variables_aux -> tipo COLON declaracion_inicial .
    (14) variables_aux -> tipo COLON declaracion_inicial . MORE variables_aux

    SEMICOLON       reduce using rule 13 (variables_aux -> tipo COLON declaracion_inicial .)
    MORE            shift and go to state 77


state 57

    (18) declaracion_inicial -> dec_varaux . punto_dec_var_1 COMMA declaracion_inicial
    (19) declaracion_inicial -> dec_varaux . punto_dec_var_1
    (20) punto_dec_var_1 -> .

    COMMA           reduce using rule 20 (punto_dec_var_1 -> .)
    MORE            reduce using rule 20 (punto_dec_var_1 -> .)
    SEMICOLON       reduce using rule 20 (punto_dec_var_1 -> .)

    punto_dec_var_1                shift and go to state 78

state 58

    (21) dec_varaux -> ID .
    (22) dec_varaux -> ID . LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> ID . LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR

    COMMA           reduce using rule 21 (dec_varaux -> ID .)
    MORE            reduce using rule 21 (dec_varaux -> ID .)
    SEMICOLON       reduce using rule 21 (dec_varaux -> ID .)
    EQUALS          reduce using rule 21 (dec_varaux -> ID .)
    RIGHT_PAR       reduce using rule 21 (dec_varaux -> ID .)
    LEFT_BR         shift and go to state 71


state 59

    (33) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value . LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    LEFT_PAR        shift and go to state 79


state 60

    (34) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR . not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (38) not_params -> . parametros count_params
    (39) not_params -> . empty
    (42) parametros -> . dec_var_param COMMA parametros
    (43) parametros -> . dec_var_param
    (147) empty -> .
    (44) dec_var_param -> . tipo ID punto_push_param
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . CHAR

    RIGHT_PAR       reduce using rule 147 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    not_params                     shift and go to state 80
    parametros                     shift and go to state 81
    empty                          shift and go to state 82
    dec_var_param                  shift and go to state 83
    tipo                           shift and go to state 84

state 61

    (7) main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL .

    $end            reduce using rule 7 (main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL .)


state 62

    (93) estatutos_main_multiple -> estatutos_main estatutos_main_multiple .

    RIGHT_CURL      reduce using rule 93 (estatutos_main_multiple -> estatutos_main estatutos_main_multiple .)


state 63

    (87) estatutos_main -> asignacion SEMICOLON .

    ID              reduce using rule 87 (estatutos_main -> asignacion SEMICOLON .)
    READ            reduce using rule 87 (estatutos_main -> asignacion SEMICOLON .)
    WRITE           reduce using rule 87 (estatutos_main -> asignacion SEMICOLON .)
    IF              reduce using rule 87 (estatutos_main -> asignacion SEMICOLON .)
    WHILE           reduce using rule 87 (estatutos_main -> asignacion SEMICOLON .)
    FOR             reduce using rule 87 (estatutos_main -> asignacion SEMICOLON .)
    RIGHT_CURL      reduce using rule 87 (estatutos_main -> asignacion SEMICOLON .)
    RETURN          reduce using rule 87 (estatutos_main -> asignacion SEMICOLON .)


state 64

    (88) estatutos_main -> llamada SEMICOLON .

    ID              reduce using rule 88 (estatutos_main -> llamada SEMICOLON .)
    READ            reduce using rule 88 (estatutos_main -> llamada SEMICOLON .)
    WRITE           reduce using rule 88 (estatutos_main -> llamada SEMICOLON .)
    IF              reduce using rule 88 (estatutos_main -> llamada SEMICOLON .)
    WHILE           reduce using rule 88 (estatutos_main -> llamada SEMICOLON .)
    FOR             reduce using rule 88 (estatutos_main -> llamada SEMICOLON .)
    RIGHT_CURL      reduce using rule 88 (estatutos_main -> llamada SEMICOLON .)
    RETURN          reduce using rule 88 (estatutos_main -> llamada SEMICOLON .)


state 65

    (89) estatutos_main -> lectura SEMICOLON .

    ID              reduce using rule 89 (estatutos_main -> lectura SEMICOLON .)
    READ            reduce using rule 89 (estatutos_main -> lectura SEMICOLON .)
    WRITE           reduce using rule 89 (estatutos_main -> lectura SEMICOLON .)
    IF              reduce using rule 89 (estatutos_main -> lectura SEMICOLON .)
    WHILE           reduce using rule 89 (estatutos_main -> lectura SEMICOLON .)
    FOR             reduce using rule 89 (estatutos_main -> lectura SEMICOLON .)
    RIGHT_CURL      reduce using rule 89 (estatutos_main -> lectura SEMICOLON .)
    RETURN          reduce using rule 89 (estatutos_main -> lectura SEMICOLON .)


state 66

    (90) estatutos_main -> escritura SEMICOLON .

    ID              reduce using rule 90 (estatutos_main -> escritura SEMICOLON .)
    READ            reduce using rule 90 (estatutos_main -> escritura SEMICOLON .)
    WRITE           reduce using rule 90 (estatutos_main -> escritura SEMICOLON .)
    IF              reduce using rule 90 (estatutos_main -> escritura SEMICOLON .)
    WHILE           reduce using rule 90 (estatutos_main -> escritura SEMICOLON .)
    FOR             reduce using rule 90 (estatutos_main -> escritura SEMICOLON .)
    RIGHT_CURL      reduce using rule 90 (estatutos_main -> escritura SEMICOLON .)
    RETURN          reduce using rule 90 (estatutos_main -> escritura SEMICOLON .)


state 67

    (91) estatutos_main -> decision SEMICOLON .

    ID              reduce using rule 91 (estatutos_main -> decision SEMICOLON .)
    READ            reduce using rule 91 (estatutos_main -> decision SEMICOLON .)
    WRITE           reduce using rule 91 (estatutos_main -> decision SEMICOLON .)
    IF              reduce using rule 91 (estatutos_main -> decision SEMICOLON .)
    WHILE           reduce using rule 91 (estatutos_main -> decision SEMICOLON .)
    FOR             reduce using rule 91 (estatutos_main -> decision SEMICOLON .)
    RIGHT_CURL      reduce using rule 91 (estatutos_main -> decision SEMICOLON .)
    RETURN          reduce using rule 91 (estatutos_main -> decision SEMICOLON .)


state 68

    (92) estatutos_main -> repeticion SEMICOLON .

    ID              reduce using rule 92 (estatutos_main -> repeticion SEMICOLON .)
    READ            reduce using rule 92 (estatutos_main -> repeticion SEMICOLON .)
    WRITE           reduce using rule 92 (estatutos_main -> repeticion SEMICOLON .)
    IF              reduce using rule 92 (estatutos_main -> repeticion SEMICOLON .)
    WHILE           reduce using rule 92 (estatutos_main -> repeticion SEMICOLON .)
    FOR             reduce using rule 92 (estatutos_main -> repeticion SEMICOLON .)
    RIGHT_CURL      reduce using rule 92 (estatutos_main -> repeticion SEMICOLON .)
    RETURN          reduce using rule 92 (estatutos_main -> repeticion SEMICOLON .)


state 69

    (97) asignacion -> dec_varaux punto_asignacion_var . EQUALS punto_igual m_exp punto_asignacion

    EQUALS          shift and go to state 85


state 70

    (101) llamada -> ID punto_verify_id . LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (102) llamada -> ID punto_verify_id . LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada

    LEFT_PAR        shift and go to state 86


state 71

    (22) dec_varaux -> ID LEFT_BR . CTE_I RIGHT_BR
    (23) dec_varaux -> ID LEFT_BR . CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR

    CTE_I           shift and go to state 87


state 72

    (110) lectura -> READ LEFT_PAR . lectura_var RIGHT_PAR
    (111) lectura_var -> . punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var
    (112) lectura_var -> . punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand
    (109) punto_read_stack -> .

    ID              reduce using rule 109 (punto_read_stack -> .)

    lectura_var                    shift and go to state 88
    punto_read_stack               shift and go to state 89

state 73

    (115) escritura -> WRITE LEFT_PAR . escritura_aux RIGHT_PAR
    (116) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand
    (117) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand
    (118) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (119) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (121) punto_write_stack -> .

    STR             reduce using rule 121 (punto_write_stack -> .)
    ID              reduce using rule 121 (punto_write_stack -> .)
    LEFT_PAR        reduce using rule 121 (punto_write_stack -> .)
    CTE_I           reduce using rule 121 (punto_write_stack -> .)
    CTE_CHAR        reduce using rule 121 (punto_write_stack -> .)

    escritura_aux                  shift and go to state 90
    punto_write_stack              shift and go to state 91

state 74

    (123) decision -> IF LEFT_PAR . exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> IF LEFT_PAR . exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (49) exp_or -> . t_exp punto_pop_or t_exp_or_aux
    (50) exp_or -> . t_exp punto_pop_or
    (54) t_exp -> . g_exp pop_and t_exp_aux
    (55) t_exp -> . g_exp pop_and
    (59) g_exp -> . m_exp
    (60) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    exp_or                         shift and go to state 93
    t_exp                          shift and go to state 94
    g_exp                          shift and go to state 95
    m_exp                          shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 75

    (135) condicional -> WHILE punto_while . LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while

    LEFT_PAR        shift and go to state 104


state 76

    (130) no_condicional -> FOR LEFT_PAR . dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR

    ID              shift and go to state 58

    dec_varaux                     shift and go to state 105

state 77

    (14) variables_aux -> tipo COLON declaracion_inicial MORE . variables_aux
    (13) variables_aux -> . tipo COLON declaracion_inicial
    (14) variables_aux -> . tipo COLON declaracion_inicial MORE variables_aux
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    tipo                           shift and go to state 29
    variables_aux                  shift and go to state 106

state 78

    (18) declaracion_inicial -> dec_varaux punto_dec_var_1 . COMMA declaracion_inicial
    (19) declaracion_inicial -> dec_varaux punto_dec_var_1 .

    COMMA           shift and go to state 107
    MORE            reduce using rule 19 (declaracion_inicial -> dec_varaux punto_dec_var_1 .)
    SEMICOLON       reduce using rule 19 (declaracion_inicial -> dec_varaux punto_dec_var_1 .)


state 79

    (33) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR . not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (38) not_params -> . parametros count_params
    (39) not_params -> . empty
    (42) parametros -> . dec_var_param COMMA parametros
    (43) parametros -> . dec_var_param
    (147) empty -> .
    (44) dec_var_param -> . tipo ID punto_push_param
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . CHAR

    RIGHT_PAR       reduce using rule 147 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    tipo                           shift and go to state 84
    not_params                     shift and go to state 108
    parametros                     shift and go to state 81
    empty                          shift and go to state 82
    dec_var_param                  shift and go to state 83

state 80

    (34) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params . RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    RIGHT_PAR       shift and go to state 109


state 81

    (38) not_params -> parametros . count_params
    (46) count_params -> .

    RIGHT_PAR       reduce using rule 46 (count_params -> .)

    count_params                   shift and go to state 110

state 82

    (39) not_params -> empty .

    RIGHT_PAR       reduce using rule 39 (not_params -> empty .)


state 83

    (42) parametros -> dec_var_param . COMMA parametros
    (43) parametros -> dec_var_param .

    COMMA           shift and go to state 111
    RIGHT_PAR       reduce using rule 43 (parametros -> dec_var_param .)


state 84

    (44) dec_var_param -> tipo . ID punto_push_param

    ID              shift and go to state 112


state 85

    (97) asignacion -> dec_varaux punto_asignacion_var EQUALS . punto_igual m_exp punto_asignacion
    (99) punto_igual -> .

    ID              reduce using rule 99 (punto_igual -> .)
    LEFT_PAR        reduce using rule 99 (punto_igual -> .)
    CTE_I           reduce using rule 99 (punto_igual -> .)
    CTE_CHAR        reduce using rule 99 (punto_igual -> .)

    punto_igual                    shift and go to state 113

state 86

    (101) llamada -> ID punto_verify_id LEFT_PAR . punto_era RIGHT_PAR punto_end_llamada
    (102) llamada -> ID punto_verify_id LEFT_PAR . punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (106) punto_era -> .

    RIGHT_PAR       reduce using rule 106 (punto_era -> .)
    ID              reduce using rule 106 (punto_era -> .)
    LEFT_PAR        reduce using rule 106 (punto_era -> .)
    CTE_I           reduce using rule 106 (punto_era -> .)
    CTE_CHAR        reduce using rule 106 (punto_era -> .)

    punto_era                      shift and go to state 114

state 87

    (22) dec_varaux -> ID LEFT_BR CTE_I . RIGHT_BR
    (23) dec_varaux -> ID LEFT_BR CTE_I . RIGHT_BR LEFT_BR CTE_I RIGHT_BR

    RIGHT_BR        shift and go to state 115


state 88

    (110) lectura -> READ LEFT_PAR lectura_var . RIGHT_PAR

    RIGHT_PAR       shift and go to state 116


state 89

    (111) lectura_var -> punto_read_stack . dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var
    (112) lectura_var -> punto_read_stack . dec_varaux punto_push_dec_var punto_add_read_operand
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR

    ID              shift and go to state 58

    dec_varaux                     shift and go to state 117

state 90

    (115) escritura -> WRITE LEFT_PAR escritura_aux . RIGHT_PAR

    RIGHT_PAR       shift and go to state 118


state 91

    (116) escritura_aux -> punto_write_stack . STR punto_escritura_push punto_add_write_operand
    (117) escritura_aux -> punto_write_stack . m_exp punto_escritura_push punto_add_write_operand
    (118) escritura_aux -> punto_write_stack . STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (119) escritura_aux -> punto_write_stack . m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    STR             shift and go to state 119
    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    m_exp                          shift and go to state 120
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 92

    (78) factor -> LEFT_PAR . exp_or RIGHT_PAR
    (49) exp_or -> . t_exp punto_pop_or t_exp_or_aux
    (50) exp_or -> . t_exp punto_pop_or
    (54) t_exp -> . g_exp pop_and t_exp_aux
    (55) t_exp -> . g_exp pop_and
    (59) g_exp -> . m_exp
    (60) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    exp_or                         shift and go to state 121
    t_exp                          shift and go to state 94
    g_exp                          shift and go to state 95
    m_exp                          shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 93

    (123) decision -> IF LEFT_PAR exp_or . RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> IF LEFT_PAR exp_or . RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if

    RIGHT_PAR       shift and go to state 122


state 94

    (49) exp_or -> t_exp . punto_pop_or t_exp_or_aux
    (50) exp_or -> t_exp . punto_pop_or
    (51) punto_pop_or -> .

    OR              reduce using rule 51 (punto_pop_or -> .)
    RIGHT_PAR       reduce using rule 51 (punto_pop_or -> .)

    punto_pop_or                   shift and go to state 123

state 95

    (54) t_exp -> g_exp . pop_and t_exp_aux
    (55) t_exp -> g_exp . pop_and
    (56) pop_and -> .

    AND             reduce using rule 56 (pop_and -> .)
    OR              reduce using rule 56 (pop_and -> .)
    RIGHT_PAR       reduce using rule 56 (pop_and -> .)

    pop_and                        shift and go to state 124

state 96

    (59) g_exp -> m_exp .
    (60) g_exp -> m_exp . relacionales punto_relacionales m_exp punto_pop_relacional
    (79) relacionales -> . LESS_THAN
    (80) relacionales -> . GREATER_THAN
    (81) relacionales -> . DIFFERENT
    (82) relacionales -> . EQUAL
    (83) relacionales -> . GREATER_EQUAL
    (84) relacionales -> . LESS_EQUAL

    AND             reduce using rule 59 (g_exp -> m_exp .)
    OR              reduce using rule 59 (g_exp -> m_exp .)
    RIGHT_PAR       reduce using rule 59 (g_exp -> m_exp .)
    LESS_THAN       shift and go to state 126
    GREATER_THAN    shift and go to state 127
    DIFFERENT       shift and go to state 128
    EQUAL           shift and go to state 129
    GREATER_EQUAL   shift and go to state 130
    LESS_EQUAL      shift and go to state 131

    relacionales                   shift and go to state 125

state 97

    (63) m_exp -> termino . punto_mexp_pop
    (64) m_exp -> termino . punto_mexp_pop m_exp_aux
    (65) punto_mexp_pop -> .

    PLUS            reduce using rule 65 (punto_mexp_pop -> .)
    MINUS           reduce using rule 65 (punto_mexp_pop -> .)
    LESS_THAN       reduce using rule 65 (punto_mexp_pop -> .)
    GREATER_THAN    reduce using rule 65 (punto_mexp_pop -> .)
    DIFFERENT       reduce using rule 65 (punto_mexp_pop -> .)
    EQUAL           reduce using rule 65 (punto_mexp_pop -> .)
    GREATER_EQUAL   reduce using rule 65 (punto_mexp_pop -> .)
    LESS_EQUAL      reduce using rule 65 (punto_mexp_pop -> .)
    AND             reduce using rule 65 (punto_mexp_pop -> .)
    OR              reduce using rule 65 (punto_mexp_pop -> .)
    RIGHT_PAR       reduce using rule 65 (punto_mexp_pop -> .)
    COMMA           reduce using rule 65 (punto_mexp_pop -> .)
    SEMICOLON       reduce using rule 65 (punto_mexp_pop -> .)
    TO              reduce using rule 65 (punto_mexp_pop -> .)

    punto_mexp_pop                 shift and go to state 132

state 98

    (69) termino -> factor . punto_termino_pop
    (70) termino -> factor . punto_termino_pop termino_aux
    (71) punto_termino_pop -> .

    MULTIPLY        reduce using rule 71 (punto_termino_pop -> .)
    DIVIDE          reduce using rule 71 (punto_termino_pop -> .)
    PLUS            reduce using rule 71 (punto_termino_pop -> .)
    MINUS           reduce using rule 71 (punto_termino_pop -> .)
    LESS_THAN       reduce using rule 71 (punto_termino_pop -> .)
    GREATER_THAN    reduce using rule 71 (punto_termino_pop -> .)
    DIFFERENT       reduce using rule 71 (punto_termino_pop -> .)
    EQUAL           reduce using rule 71 (punto_termino_pop -> .)
    GREATER_EQUAL   reduce using rule 71 (punto_termino_pop -> .)
    LESS_EQUAL      reduce using rule 71 (punto_termino_pop -> .)
    AND             reduce using rule 71 (punto_termino_pop -> .)
    OR              reduce using rule 71 (punto_termino_pop -> .)
    RIGHT_PAR       reduce using rule 71 (punto_termino_pop -> .)
    COMMA           reduce using rule 71 (punto_termino_pop -> .)
    SEMICOLON       reduce using rule 71 (punto_termino_pop -> .)
    TO              reduce using rule 71 (punto_termino_pop -> .)

    punto_termino_pop              shift and go to state 133

state 99

    (75) factor -> cte .

    MULTIPLY        reduce using rule 75 (factor -> cte .)
    DIVIDE          reduce using rule 75 (factor -> cte .)
    PLUS            reduce using rule 75 (factor -> cte .)
    MINUS           reduce using rule 75 (factor -> cte .)
    LESS_THAN       reduce using rule 75 (factor -> cte .)
    GREATER_THAN    reduce using rule 75 (factor -> cte .)
    DIFFERENT       reduce using rule 75 (factor -> cte .)
    EQUAL           reduce using rule 75 (factor -> cte .)
    GREATER_EQUAL   reduce using rule 75 (factor -> cte .)
    LESS_EQUAL      reduce using rule 75 (factor -> cte .)
    AND             reduce using rule 75 (factor -> cte .)
    OR              reduce using rule 75 (factor -> cte .)
    RIGHT_PAR       reduce using rule 75 (factor -> cte .)
    COMMA           reduce using rule 75 (factor -> cte .)
    SEMICOLON       reduce using rule 75 (factor -> cte .)
    TO              reduce using rule 75 (factor -> cte .)


state 100

    (76) factor -> ID . LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> ID . LEFT_PAR RIGHT_PAR
    (139) cte -> ID . factor_push_operand
    (143) factor_push_operand -> .

    LEFT_PAR        shift and go to state 134
    MULTIPLY        reduce using rule 143 (factor_push_operand -> .)
    DIVIDE          reduce using rule 143 (factor_push_operand -> .)
    PLUS            reduce using rule 143 (factor_push_operand -> .)
    MINUS           reduce using rule 143 (factor_push_operand -> .)
    LESS_THAN       reduce using rule 143 (factor_push_operand -> .)
    GREATER_THAN    reduce using rule 143 (factor_push_operand -> .)
    DIFFERENT       reduce using rule 143 (factor_push_operand -> .)
    EQUAL           reduce using rule 143 (factor_push_operand -> .)
    GREATER_EQUAL   reduce using rule 143 (factor_push_operand -> .)
    LESS_EQUAL      reduce using rule 143 (factor_push_operand -> .)
    AND             reduce using rule 143 (factor_push_operand -> .)
    OR              reduce using rule 143 (factor_push_operand -> .)
    RIGHT_PAR       reduce using rule 143 (factor_push_operand -> .)
    COMMA           reduce using rule 143 (factor_push_operand -> .)
    SEMICOLON       reduce using rule 143 (factor_push_operand -> .)
    TO              reduce using rule 143 (factor_push_operand -> .)

    factor_push_operand            shift and go to state 135

state 101

    (140) cte -> CTE_I . factor_int_push
    (1) cte_f -> CTE_I . DOT CTE_I
    (145) factor_int_push -> .

    DOT             shift and go to state 137
    MULTIPLY        reduce using rule 145 (factor_int_push -> .)
    DIVIDE          reduce using rule 145 (factor_int_push -> .)
    PLUS            reduce using rule 145 (factor_int_push -> .)
    MINUS           reduce using rule 145 (factor_int_push -> .)
    LESS_THAN       reduce using rule 145 (factor_int_push -> .)
    GREATER_THAN    reduce using rule 145 (factor_int_push -> .)
    DIFFERENT       reduce using rule 145 (factor_int_push -> .)
    EQUAL           reduce using rule 145 (factor_int_push -> .)
    GREATER_EQUAL   reduce using rule 145 (factor_int_push -> .)
    LESS_EQUAL      reduce using rule 145 (factor_int_push -> .)
    AND             reduce using rule 145 (factor_int_push -> .)
    OR              reduce using rule 145 (factor_int_push -> .)
    RIGHT_PAR       reduce using rule 145 (factor_int_push -> .)
    COMMA           reduce using rule 145 (factor_int_push -> .)
    SEMICOLON       reduce using rule 145 (factor_int_push -> .)
    TO              reduce using rule 145 (factor_int_push -> .)

    factor_int_push                shift and go to state 136

state 102

    (141) cte -> cte_f . factor_float_push
    (144) factor_float_push -> .

    MULTIPLY        reduce using rule 144 (factor_float_push -> .)
    DIVIDE          reduce using rule 144 (factor_float_push -> .)
    PLUS            reduce using rule 144 (factor_float_push -> .)
    MINUS           reduce using rule 144 (factor_float_push -> .)
    LESS_THAN       reduce using rule 144 (factor_float_push -> .)
    GREATER_THAN    reduce using rule 144 (factor_float_push -> .)
    DIFFERENT       reduce using rule 144 (factor_float_push -> .)
    EQUAL           reduce using rule 144 (factor_float_push -> .)
    GREATER_EQUAL   reduce using rule 144 (factor_float_push -> .)
    LESS_EQUAL      reduce using rule 144 (factor_float_push -> .)
    AND             reduce using rule 144 (factor_float_push -> .)
    OR              reduce using rule 144 (factor_float_push -> .)
    RIGHT_PAR       reduce using rule 144 (factor_float_push -> .)
    COMMA           reduce using rule 144 (factor_float_push -> .)
    SEMICOLON       reduce using rule 144 (factor_float_push -> .)
    TO              reduce using rule 144 (factor_float_push -> .)

    factor_float_push              shift and go to state 138

state 103

    (142) cte -> CTE_CHAR . factor_char_push
    (146) factor_char_push -> .

    MULTIPLY        reduce using rule 146 (factor_char_push -> .)
    DIVIDE          reduce using rule 146 (factor_char_push -> .)
    PLUS            reduce using rule 146 (factor_char_push -> .)
    MINUS           reduce using rule 146 (factor_char_push -> .)
    LESS_THAN       reduce using rule 146 (factor_char_push -> .)
    GREATER_THAN    reduce using rule 146 (factor_char_push -> .)
    DIFFERENT       reduce using rule 146 (factor_char_push -> .)
    EQUAL           reduce using rule 146 (factor_char_push -> .)
    GREATER_EQUAL   reduce using rule 146 (factor_char_push -> .)
    LESS_EQUAL      reduce using rule 146 (factor_char_push -> .)
    AND             reduce using rule 146 (factor_char_push -> .)
    OR              reduce using rule 146 (factor_char_push -> .)
    RIGHT_PAR       reduce using rule 146 (factor_char_push -> .)
    COMMA           reduce using rule 146 (factor_char_push -> .)
    SEMICOLON       reduce using rule 146 (factor_char_push -> .)
    TO              reduce using rule 146 (factor_char_push -> .)

    factor_char_push               shift and go to state 139

state 104

    (135) condicional -> WHILE punto_while LEFT_PAR . exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (49) exp_or -> . t_exp punto_pop_or t_exp_or_aux
    (50) exp_or -> . t_exp punto_pop_or
    (54) t_exp -> . g_exp pop_and t_exp_aux
    (55) t_exp -> . g_exp pop_and
    (59) g_exp -> . m_exp
    (60) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    exp_or                         shift and go to state 140
    t_exp                          shift and go to state 94
    g_exp                          shift and go to state 95
    m_exp                          shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 105

    (130) no_condicional -> FOR LEFT_PAR dec_varaux . punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (131) punto_for -> .

    EQUALS          reduce using rule 131 (punto_for -> .)

    punto_for                      shift and go to state 141

state 106

    (14) variables_aux -> tipo COLON declaracion_inicial MORE variables_aux .

    SEMICOLON       reduce using rule 14 (variables_aux -> tipo COLON declaracion_inicial MORE variables_aux .)


state 107

    (18) declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA . declaracion_inicial
    (18) declaracion_inicial -> . dec_varaux punto_dec_var_1 COMMA declaracion_inicial
    (19) declaracion_inicial -> . dec_varaux punto_dec_var_1
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR

    ID              shift and go to state 58

    dec_varaux                     shift and go to state 57
    declaracion_inicial            shift and go to state 142

state 108

    (33) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params . RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    RIGHT_PAR       shift and go to state 143


state 109

    (34) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR . LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    LEFT_CURL       shift and go to state 144


state 110

    (38) not_params -> parametros count_params .

    RIGHT_PAR       reduce using rule 38 (not_params -> parametros count_params .)


state 111

    (42) parametros -> dec_var_param COMMA . parametros
    (42) parametros -> . dec_var_param COMMA parametros
    (43) parametros -> . dec_var_param
    (44) dec_var_param -> . tipo ID punto_push_param
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    dec_var_param                  shift and go to state 83
    parametros                     shift and go to state 145
    tipo                           shift and go to state 84

state 112

    (44) dec_var_param -> tipo ID . punto_push_param
    (45) punto_push_param -> .

    COMMA           reduce using rule 45 (punto_push_param -> .)
    RIGHT_PAR       reduce using rule 45 (punto_push_param -> .)

    punto_push_param               shift and go to state 146

state 113

    (97) asignacion -> dec_varaux punto_asignacion_var EQUALS punto_igual . m_exp punto_asignacion
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    m_exp                          shift and go to state 147
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 114

    (101) llamada -> ID punto_verify_id LEFT_PAR punto_era . RIGHT_PAR punto_end_llamada
    (102) llamada -> ID punto_verify_id LEFT_PAR punto_era . dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (27) dec_var_llamada -> . m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada
    (28) dec_var_llamada -> . m_exp punto_verify_dec_param
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    RIGHT_PAR       shift and go to state 148
    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    dec_var_llamada                shift and go to state 149
    m_exp                          shift and go to state 150
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 115

    (22) dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR .
    (23) dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR . LEFT_BR CTE_I RIGHT_BR

    EQUALS          reduce using rule 22 (dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR .)
    COMMA           reduce using rule 22 (dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR .)
    MORE            reduce using rule 22 (dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR .)
    SEMICOLON       reduce using rule 22 (dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR .)
    RIGHT_PAR       reduce using rule 22 (dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR .)
    LEFT_BR         shift and go to state 151


state 116

    (110) lectura -> READ LEFT_PAR lectura_var RIGHT_PAR .

    SEMICOLON       reduce using rule 110 (lectura -> READ LEFT_PAR lectura_var RIGHT_PAR .)


state 117

    (111) lectura_var -> punto_read_stack dec_varaux . punto_push_dec_var punto_add_read_operand COMMA lectura_var
    (112) lectura_var -> punto_read_stack dec_varaux . punto_push_dec_var punto_add_read_operand
    (113) punto_push_dec_var -> .

    COMMA           reduce using rule 113 (punto_push_dec_var -> .)
    RIGHT_PAR       reduce using rule 113 (punto_push_dec_var -> .)

    punto_push_dec_var             shift and go to state 152

state 118

    (115) escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR .

    SEMICOLON       reduce using rule 115 (escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR .)


state 119

    (116) escritura_aux -> punto_write_stack STR . punto_escritura_push punto_add_write_operand
    (118) escritura_aux -> punto_write_stack STR . punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (120) punto_escritura_push -> .

    COMMA           reduce using rule 120 (punto_escritura_push -> .)
    RIGHT_PAR       reduce using rule 120 (punto_escritura_push -> .)

    punto_escritura_push           shift and go to state 153

state 120

    (117) escritura_aux -> punto_write_stack m_exp . punto_escritura_push punto_add_write_operand
    (119) escritura_aux -> punto_write_stack m_exp . punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (120) punto_escritura_push -> .

    COMMA           reduce using rule 120 (punto_escritura_push -> .)
    RIGHT_PAR       reduce using rule 120 (punto_escritura_push -> .)

    punto_escritura_push           shift and go to state 154

state 121

    (78) factor -> LEFT_PAR exp_or . RIGHT_PAR

    RIGHT_PAR       shift and go to state 155


state 122

    (123) decision -> IF LEFT_PAR exp_or RIGHT_PAR . punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> IF LEFT_PAR exp_or RIGHT_PAR . punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (125) punto_if_exp -> .

    THEN            reduce using rule 125 (punto_if_exp -> .)

    punto_if_exp                   shift and go to state 156

state 123

    (49) exp_or -> t_exp punto_pop_or . t_exp_or_aux
    (50) exp_or -> t_exp punto_pop_or .
    (52) t_exp_or_aux -> . OR punto_push_or exp_or

    RIGHT_PAR       reduce using rule 50 (exp_or -> t_exp punto_pop_or .)
    OR              shift and go to state 158

    t_exp_or_aux                   shift and go to state 157

state 124

    (54) t_exp -> g_exp pop_and . t_exp_aux
    (55) t_exp -> g_exp pop_and .
    (57) t_exp_aux -> . AND punto_push_and t_exp

    OR              reduce using rule 55 (t_exp -> g_exp pop_and .)
    RIGHT_PAR       reduce using rule 55 (t_exp -> g_exp pop_and .)
    AND             shift and go to state 160

    t_exp_aux                      shift and go to state 159

state 125

    (60) g_exp -> m_exp relacionales . punto_relacionales m_exp punto_pop_relacional
    (61) punto_relacionales -> .

    ID              reduce using rule 61 (punto_relacionales -> .)
    LEFT_PAR        reduce using rule 61 (punto_relacionales -> .)
    CTE_I           reduce using rule 61 (punto_relacionales -> .)
    CTE_CHAR        reduce using rule 61 (punto_relacionales -> .)

    punto_relacionales             shift and go to state 161

state 126

    (79) relacionales -> LESS_THAN .

    ID              reduce using rule 79 (relacionales -> LESS_THAN .)
    LEFT_PAR        reduce using rule 79 (relacionales -> LESS_THAN .)
    CTE_I           reduce using rule 79 (relacionales -> LESS_THAN .)
    CTE_CHAR        reduce using rule 79 (relacionales -> LESS_THAN .)


state 127

    (80) relacionales -> GREATER_THAN .

    ID              reduce using rule 80 (relacionales -> GREATER_THAN .)
    LEFT_PAR        reduce using rule 80 (relacionales -> GREATER_THAN .)
    CTE_I           reduce using rule 80 (relacionales -> GREATER_THAN .)
    CTE_CHAR        reduce using rule 80 (relacionales -> GREATER_THAN .)


state 128

    (81) relacionales -> DIFFERENT .

    ID              reduce using rule 81 (relacionales -> DIFFERENT .)
    LEFT_PAR        reduce using rule 81 (relacionales -> DIFFERENT .)
    CTE_I           reduce using rule 81 (relacionales -> DIFFERENT .)
    CTE_CHAR        reduce using rule 81 (relacionales -> DIFFERENT .)


state 129

    (82) relacionales -> EQUAL .

    ID              reduce using rule 82 (relacionales -> EQUAL .)
    LEFT_PAR        reduce using rule 82 (relacionales -> EQUAL .)
    CTE_I           reduce using rule 82 (relacionales -> EQUAL .)
    CTE_CHAR        reduce using rule 82 (relacionales -> EQUAL .)


state 130

    (83) relacionales -> GREATER_EQUAL .

    ID              reduce using rule 83 (relacionales -> GREATER_EQUAL .)
    LEFT_PAR        reduce using rule 83 (relacionales -> GREATER_EQUAL .)
    CTE_I           reduce using rule 83 (relacionales -> GREATER_EQUAL .)
    CTE_CHAR        reduce using rule 83 (relacionales -> GREATER_EQUAL .)


state 131

    (84) relacionales -> LESS_EQUAL .

    ID              reduce using rule 84 (relacionales -> LESS_EQUAL .)
    LEFT_PAR        reduce using rule 84 (relacionales -> LESS_EQUAL .)
    CTE_I           reduce using rule 84 (relacionales -> LESS_EQUAL .)
    CTE_CHAR        reduce using rule 84 (relacionales -> LESS_EQUAL .)


state 132

    (63) m_exp -> termino punto_mexp_pop .
    (64) m_exp -> termino punto_mexp_pop . m_exp_aux
    (66) m_exp_aux -> . PLUS punto_m_exp_push m_exp
    (67) m_exp_aux -> . MINUS punto_m_exp_push m_exp

    LESS_THAN       reduce using rule 63 (m_exp -> termino punto_mexp_pop .)
    GREATER_THAN    reduce using rule 63 (m_exp -> termino punto_mexp_pop .)
    DIFFERENT       reduce using rule 63 (m_exp -> termino punto_mexp_pop .)
    EQUAL           reduce using rule 63 (m_exp -> termino punto_mexp_pop .)
    GREATER_EQUAL   reduce using rule 63 (m_exp -> termino punto_mexp_pop .)
    LESS_EQUAL      reduce using rule 63 (m_exp -> termino punto_mexp_pop .)
    AND             reduce using rule 63 (m_exp -> termino punto_mexp_pop .)
    OR              reduce using rule 63 (m_exp -> termino punto_mexp_pop .)
    RIGHT_PAR       reduce using rule 63 (m_exp -> termino punto_mexp_pop .)
    COMMA           reduce using rule 63 (m_exp -> termino punto_mexp_pop .)
    SEMICOLON       reduce using rule 63 (m_exp -> termino punto_mexp_pop .)
    TO              reduce using rule 63 (m_exp -> termino punto_mexp_pop .)
    PLUS            shift and go to state 163
    MINUS           shift and go to state 164

    m_exp_aux                      shift and go to state 162

state 133

    (69) termino -> factor punto_termino_pop .
    (70) termino -> factor punto_termino_pop . termino_aux
    (72) termino_aux -> . MULTIPLY punto_termino_aux termino
    (73) termino_aux -> . DIVIDE punto_termino_aux termino

    PLUS            reduce using rule 69 (termino -> factor punto_termino_pop .)
    MINUS           reduce using rule 69 (termino -> factor punto_termino_pop .)
    LESS_THAN       reduce using rule 69 (termino -> factor punto_termino_pop .)
    GREATER_THAN    reduce using rule 69 (termino -> factor punto_termino_pop .)
    DIFFERENT       reduce using rule 69 (termino -> factor punto_termino_pop .)
    EQUAL           reduce using rule 69 (termino -> factor punto_termino_pop .)
    GREATER_EQUAL   reduce using rule 69 (termino -> factor punto_termino_pop .)
    LESS_EQUAL      reduce using rule 69 (termino -> factor punto_termino_pop .)
    AND             reduce using rule 69 (termino -> factor punto_termino_pop .)
    OR              reduce using rule 69 (termino -> factor punto_termino_pop .)
    RIGHT_PAR       reduce using rule 69 (termino -> factor punto_termino_pop .)
    COMMA           reduce using rule 69 (termino -> factor punto_termino_pop .)
    SEMICOLON       reduce using rule 69 (termino -> factor punto_termino_pop .)
    TO              reduce using rule 69 (termino -> factor punto_termino_pop .)
    MULTIPLY        shift and go to state 166
    DIVIDE          shift and go to state 167

    termino_aux                    shift and go to state 165

state 134

    (76) factor -> ID LEFT_PAR . dec_var RIGHT_PAR
    (77) factor -> ID LEFT_PAR . RIGHT_PAR
    (25) dec_var -> . dec_varaux COMMA dec_var
    (26) dec_var -> . dec_varaux
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR

    RIGHT_PAR       shift and go to state 169
    ID              shift and go to state 58

    dec_var                        shift and go to state 168
    dec_varaux                     shift and go to state 170

state 135

    (139) cte -> ID factor_push_operand .

    MULTIPLY        reduce using rule 139 (cte -> ID factor_push_operand .)
    DIVIDE          reduce using rule 139 (cte -> ID factor_push_operand .)
    PLUS            reduce using rule 139 (cte -> ID factor_push_operand .)
    MINUS           reduce using rule 139 (cte -> ID factor_push_operand .)
    LESS_THAN       reduce using rule 139 (cte -> ID factor_push_operand .)
    GREATER_THAN    reduce using rule 139 (cte -> ID factor_push_operand .)
    DIFFERENT       reduce using rule 139 (cte -> ID factor_push_operand .)
    EQUAL           reduce using rule 139 (cte -> ID factor_push_operand .)
    GREATER_EQUAL   reduce using rule 139 (cte -> ID factor_push_operand .)
    LESS_EQUAL      reduce using rule 139 (cte -> ID factor_push_operand .)
    AND             reduce using rule 139 (cte -> ID factor_push_operand .)
    OR              reduce using rule 139 (cte -> ID factor_push_operand .)
    RIGHT_PAR       reduce using rule 139 (cte -> ID factor_push_operand .)
    COMMA           reduce using rule 139 (cte -> ID factor_push_operand .)
    SEMICOLON       reduce using rule 139 (cte -> ID factor_push_operand .)
    TO              reduce using rule 139 (cte -> ID factor_push_operand .)


state 136

    (140) cte -> CTE_I factor_int_push .

    MULTIPLY        reduce using rule 140 (cte -> CTE_I factor_int_push .)
    DIVIDE          reduce using rule 140 (cte -> CTE_I factor_int_push .)
    PLUS            reduce using rule 140 (cte -> CTE_I factor_int_push .)
    MINUS           reduce using rule 140 (cte -> CTE_I factor_int_push .)
    LESS_THAN       reduce using rule 140 (cte -> CTE_I factor_int_push .)
    GREATER_THAN    reduce using rule 140 (cte -> CTE_I factor_int_push .)
    DIFFERENT       reduce using rule 140 (cte -> CTE_I factor_int_push .)
    EQUAL           reduce using rule 140 (cte -> CTE_I factor_int_push .)
    GREATER_EQUAL   reduce using rule 140 (cte -> CTE_I factor_int_push .)
    LESS_EQUAL      reduce using rule 140 (cte -> CTE_I factor_int_push .)
    AND             reduce using rule 140 (cte -> CTE_I factor_int_push .)
    OR              reduce using rule 140 (cte -> CTE_I factor_int_push .)
    RIGHT_PAR       reduce using rule 140 (cte -> CTE_I factor_int_push .)
    COMMA           reduce using rule 140 (cte -> CTE_I factor_int_push .)
    SEMICOLON       reduce using rule 140 (cte -> CTE_I factor_int_push .)
    TO              reduce using rule 140 (cte -> CTE_I factor_int_push .)


state 137

    (1) cte_f -> CTE_I DOT . CTE_I

    CTE_I           shift and go to state 171


state 138

    (141) cte -> cte_f factor_float_push .

    MULTIPLY        reduce using rule 141 (cte -> cte_f factor_float_push .)
    DIVIDE          reduce using rule 141 (cte -> cte_f factor_float_push .)
    PLUS            reduce using rule 141 (cte -> cte_f factor_float_push .)
    MINUS           reduce using rule 141 (cte -> cte_f factor_float_push .)
    LESS_THAN       reduce using rule 141 (cte -> cte_f factor_float_push .)
    GREATER_THAN    reduce using rule 141 (cte -> cte_f factor_float_push .)
    DIFFERENT       reduce using rule 141 (cte -> cte_f factor_float_push .)
    EQUAL           reduce using rule 141 (cte -> cte_f factor_float_push .)
    GREATER_EQUAL   reduce using rule 141 (cte -> cte_f factor_float_push .)
    LESS_EQUAL      reduce using rule 141 (cte -> cte_f factor_float_push .)
    AND             reduce using rule 141 (cte -> cte_f factor_float_push .)
    OR              reduce using rule 141 (cte -> cte_f factor_float_push .)
    RIGHT_PAR       reduce using rule 141 (cte -> cte_f factor_float_push .)
    COMMA           reduce using rule 141 (cte -> cte_f factor_float_push .)
    SEMICOLON       reduce using rule 141 (cte -> cte_f factor_float_push .)
    TO              reduce using rule 141 (cte -> cte_f factor_float_push .)


state 139

    (142) cte -> CTE_CHAR factor_char_push .

    MULTIPLY        reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    DIVIDE          reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    PLUS            reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    MINUS           reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    LESS_THAN       reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    GREATER_THAN    reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    DIFFERENT       reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    EQUAL           reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    GREATER_EQUAL   reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    LESS_EQUAL      reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    AND             reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    OR              reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    RIGHT_PAR       reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    COMMA           reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    SEMICOLON       reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)
    TO              reduce using rule 142 (cte -> CTE_CHAR factor_char_push .)


state 140

    (135) condicional -> WHILE punto_while LEFT_PAR exp_or . RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while

    RIGHT_PAR       shift and go to state 172


state 141

    (130) no_condicional -> FOR LEFT_PAR dec_varaux punto_for . EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    EQUALS          shift and go to state 173


state 142

    (18) declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial .

    MORE            reduce using rule 18 (declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial .)
    SEMICOLON       reduce using rule 18 (declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial .)


state 143

    (33) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR . LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    LEFT_CURL       shift and go to state 174


state 144

    (34) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL . not_variables count_vars estatutos RIGHT_CURL end_func
    (36) not_variables -> . variables count_vars
    (37) not_variables -> . empty
    (10) variables -> . VAR punto_variables_1 SEMICOLON
    (11) variables -> . VAR punto_variables_1 variables_aux SEMICOLON
    (147) empty -> .

    VAR             shift and go to state 10
    RETURN          reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    WRITE           reduce using rule 147 (empty -> .)
    IF              reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)

    not_variables                  shift and go to state 175
    variables                      shift and go to state 176
    empty                          shift and go to state 177

state 145

    (42) parametros -> dec_var_param COMMA parametros .

    RIGHT_PAR       reduce using rule 42 (parametros -> dec_var_param COMMA parametros .)


state 146

    (44) dec_var_param -> tipo ID punto_push_param .

    COMMA           reduce using rule 44 (dec_var_param -> tipo ID punto_push_param .)
    RIGHT_PAR       reduce using rule 44 (dec_var_param -> tipo ID punto_push_param .)


state 147

    (97) asignacion -> dec_varaux punto_asignacion_var EQUALS punto_igual m_exp . punto_asignacion
    (100) punto_asignacion -> .

    SEMICOLON       reduce using rule 100 (punto_asignacion -> .)

    punto_asignacion               shift and go to state 178

state 148

    (101) llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR . punto_end_llamada
    (105) punto_end_llamada -> .

    SEMICOLON       reduce using rule 105 (punto_end_llamada -> .)

    punto_end_llamada              shift and go to state 179

state 149

    (102) llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada . RIGHT_PAR punto_verify_total_params punto_end_llamada

    RIGHT_PAR       shift and go to state 180


state 150

    (27) dec_var_llamada -> m_exp . punto_verify_dec_param COMMA punto_mas_k dec_var_llamada
    (28) dec_var_llamada -> m_exp . punto_verify_dec_param
    (30) punto_verify_dec_param -> .

    COMMA           reduce using rule 30 (punto_verify_dec_param -> .)
    RIGHT_PAR       reduce using rule 30 (punto_verify_dec_param -> .)

    punto_verify_dec_param         shift and go to state 181

state 151

    (23) dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR . CTE_I RIGHT_BR

    CTE_I           shift and go to state 182


state 152

    (111) lectura_var -> punto_read_stack dec_varaux punto_push_dec_var . punto_add_read_operand COMMA lectura_var
    (112) lectura_var -> punto_read_stack dec_varaux punto_push_dec_var . punto_add_read_operand
    (114) punto_add_read_operand -> .

    COMMA           reduce using rule 114 (punto_add_read_operand -> .)
    RIGHT_PAR       reduce using rule 114 (punto_add_read_operand -> .)

    punto_add_read_operand         shift and go to state 183

state 153

    (116) escritura_aux -> punto_write_stack STR punto_escritura_push . punto_add_write_operand
    (118) escritura_aux -> punto_write_stack STR punto_escritura_push . punto_add_write_operand COMMA escritura_aux
    (122) punto_add_write_operand -> .

    COMMA           reduce using rule 122 (punto_add_write_operand -> .)
    RIGHT_PAR       reduce using rule 122 (punto_add_write_operand -> .)

    punto_add_write_operand        shift and go to state 184

state 154

    (117) escritura_aux -> punto_write_stack m_exp punto_escritura_push . punto_add_write_operand
    (119) escritura_aux -> punto_write_stack m_exp punto_escritura_push . punto_add_write_operand COMMA escritura_aux
    (122) punto_add_write_operand -> .

    COMMA           reduce using rule 122 (punto_add_write_operand -> .)
    RIGHT_PAR       reduce using rule 122 (punto_add_write_operand -> .)

    punto_add_write_operand        shift and go to state 185

state 155

    (78) factor -> LEFT_PAR exp_or RIGHT_PAR .

    MULTIPLY        reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    DIVIDE          reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    PLUS            reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    MINUS           reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    LESS_THAN       reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    GREATER_THAN    reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    DIFFERENT       reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    EQUAL           reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    GREATER_EQUAL   reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    LESS_EQUAL      reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    AND             reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    OR              reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    RIGHT_PAR       reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    COMMA           reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    SEMICOLON       reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)
    TO              reduce using rule 78 (factor -> LEFT_PAR exp_or RIGHT_PAR .)


state 156

    (123) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp . THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp . THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if

    THEN            shift and go to state 186


state 157

    (49) exp_or -> t_exp punto_pop_or t_exp_or_aux .

    RIGHT_PAR       reduce using rule 49 (exp_or -> t_exp punto_pop_or t_exp_or_aux .)


state 158

    (52) t_exp_or_aux -> OR . punto_push_or exp_or
    (53) punto_push_or -> .

    ID              reduce using rule 53 (punto_push_or -> .)
    LEFT_PAR        reduce using rule 53 (punto_push_or -> .)
    CTE_I           reduce using rule 53 (punto_push_or -> .)
    CTE_CHAR        reduce using rule 53 (punto_push_or -> .)

    punto_push_or                  shift and go to state 187

state 159

    (54) t_exp -> g_exp pop_and t_exp_aux .

    OR              reduce using rule 54 (t_exp -> g_exp pop_and t_exp_aux .)
    RIGHT_PAR       reduce using rule 54 (t_exp -> g_exp pop_and t_exp_aux .)


state 160

    (57) t_exp_aux -> AND . punto_push_and t_exp
    (58) punto_push_and -> .

    ID              reduce using rule 58 (punto_push_and -> .)
    LEFT_PAR        reduce using rule 58 (punto_push_and -> .)
    CTE_I           reduce using rule 58 (punto_push_and -> .)
    CTE_CHAR        reduce using rule 58 (punto_push_and -> .)

    punto_push_and                 shift and go to state 188

state 161

    (60) g_exp -> m_exp relacionales punto_relacionales . m_exp punto_pop_relacional
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    m_exp                          shift and go to state 189
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 162

    (64) m_exp -> termino punto_mexp_pop m_exp_aux .

    LESS_THAN       reduce using rule 64 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    GREATER_THAN    reduce using rule 64 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    DIFFERENT       reduce using rule 64 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    EQUAL           reduce using rule 64 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    GREATER_EQUAL   reduce using rule 64 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    LESS_EQUAL      reduce using rule 64 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    AND             reduce using rule 64 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    OR              reduce using rule 64 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    RIGHT_PAR       reduce using rule 64 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    COMMA           reduce using rule 64 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    SEMICOLON       reduce using rule 64 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    TO              reduce using rule 64 (m_exp -> termino punto_mexp_pop m_exp_aux .)


state 163

    (66) m_exp_aux -> PLUS . punto_m_exp_push m_exp
    (68) punto_m_exp_push -> .

    ID              reduce using rule 68 (punto_m_exp_push -> .)
    LEFT_PAR        reduce using rule 68 (punto_m_exp_push -> .)
    CTE_I           reduce using rule 68 (punto_m_exp_push -> .)
    CTE_CHAR        reduce using rule 68 (punto_m_exp_push -> .)

    punto_m_exp_push               shift and go to state 190

state 164

    (67) m_exp_aux -> MINUS . punto_m_exp_push m_exp
    (68) punto_m_exp_push -> .

    ID              reduce using rule 68 (punto_m_exp_push -> .)
    LEFT_PAR        reduce using rule 68 (punto_m_exp_push -> .)
    CTE_I           reduce using rule 68 (punto_m_exp_push -> .)
    CTE_CHAR        reduce using rule 68 (punto_m_exp_push -> .)

    punto_m_exp_push               shift and go to state 191

state 165

    (70) termino -> factor punto_termino_pop termino_aux .

    PLUS            reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)
    MINUS           reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)
    LESS_THAN       reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)
    GREATER_THAN    reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)
    DIFFERENT       reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)
    EQUAL           reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)
    GREATER_EQUAL   reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)
    LESS_EQUAL      reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)
    AND             reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)
    OR              reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)
    RIGHT_PAR       reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)
    COMMA           reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)
    SEMICOLON       reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)
    TO              reduce using rule 70 (termino -> factor punto_termino_pop termino_aux .)


state 166

    (72) termino_aux -> MULTIPLY . punto_termino_aux termino
    (74) punto_termino_aux -> .

    ID              reduce using rule 74 (punto_termino_aux -> .)
    LEFT_PAR        reduce using rule 74 (punto_termino_aux -> .)
    CTE_I           reduce using rule 74 (punto_termino_aux -> .)
    CTE_CHAR        reduce using rule 74 (punto_termino_aux -> .)

    punto_termino_aux              shift and go to state 192

state 167

    (73) termino_aux -> DIVIDE . punto_termino_aux termino
    (74) punto_termino_aux -> .

    ID              reduce using rule 74 (punto_termino_aux -> .)
    LEFT_PAR        reduce using rule 74 (punto_termino_aux -> .)
    CTE_I           reduce using rule 74 (punto_termino_aux -> .)
    CTE_CHAR        reduce using rule 74 (punto_termino_aux -> .)

    punto_termino_aux              shift and go to state 193

state 168

    (76) factor -> ID LEFT_PAR dec_var . RIGHT_PAR

    RIGHT_PAR       shift and go to state 194


state 169

    (77) factor -> ID LEFT_PAR RIGHT_PAR .

    MULTIPLY        reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    DIVIDE          reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    PLUS            reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    MINUS           reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    LESS_THAN       reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    GREATER_THAN    reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    DIFFERENT       reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    EQUAL           reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    GREATER_EQUAL   reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    LESS_EQUAL      reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    AND             reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    OR              reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    RIGHT_PAR       reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    COMMA           reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    SEMICOLON       reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)
    TO              reduce using rule 77 (factor -> ID LEFT_PAR RIGHT_PAR .)


state 170

    (25) dec_var -> dec_varaux . COMMA dec_var
    (26) dec_var -> dec_varaux .

    COMMA           shift and go to state 195
    RIGHT_PAR       reduce using rule 26 (dec_var -> dec_varaux .)


state 171

    (1) cte_f -> CTE_I DOT CTE_I .

    MULTIPLY        reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    DIVIDE          reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    PLUS            reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    MINUS           reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    LESS_THAN       reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    GREATER_THAN    reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    DIFFERENT       reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    EQUAL           reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    GREATER_EQUAL   reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    LESS_EQUAL      reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    AND             reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    OR              reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    RIGHT_PAR       reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    COMMA           reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    SEMICOLON       reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    TO              reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)


state 172

    (135) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR . punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (137) punto_validar_exp -> .

    LEFT_CURL       reduce using rule 137 (punto_validar_exp -> .)

    punto_validar_exp              shift and go to state 196

state 173

    (130) no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS . m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    m_exp                          shift and go to state 197
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 174

    (33) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL . not_variables estatutos RIGHT_CURL punto_end_function_return
    (36) not_variables -> . variables count_vars
    (37) not_variables -> . empty
    (10) variables -> . VAR punto_variables_1 SEMICOLON
    (11) variables -> . VAR punto_variables_1 variables_aux SEMICOLON
    (147) empty -> .

    VAR             shift and go to state 10
    RETURN          reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    WRITE           reduce using rule 147 (empty -> .)
    IF              reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)

    not_variables                  shift and go to state 198
    variables                      shift and go to state 176
    empty                          shift and go to state 177

state 175

    (34) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables . count_vars estatutos RIGHT_CURL end_func
    (47) count_vars -> .

    RETURN          reduce using rule 47 (count_vars -> .)
    ID              reduce using rule 47 (count_vars -> .)
    READ            reduce using rule 47 (count_vars -> .)
    WRITE           reduce using rule 47 (count_vars -> .)
    IF              reduce using rule 47 (count_vars -> .)
    WHILE           reduce using rule 47 (count_vars -> .)
    FOR             reduce using rule 47 (count_vars -> .)

    count_vars                     shift and go to state 199

state 176

    (36) not_variables -> variables . count_vars
    (47) count_vars -> .

    RETURN          reduce using rule 47 (count_vars -> .)
    ID              reduce using rule 47 (count_vars -> .)
    READ            reduce using rule 47 (count_vars -> .)
    WRITE           reduce using rule 47 (count_vars -> .)
    IF              reduce using rule 47 (count_vars -> .)
    WHILE           reduce using rule 47 (count_vars -> .)
    FOR             reduce using rule 47 (count_vars -> .)

    count_vars                     shift and go to state 200

state 177

    (37) not_variables -> empty .

    RETURN          reduce using rule 37 (not_variables -> empty .)
    ID              reduce using rule 37 (not_variables -> empty .)
    READ            reduce using rule 37 (not_variables -> empty .)
    WRITE           reduce using rule 37 (not_variables -> empty .)
    IF              reduce using rule 37 (not_variables -> empty .)
    WHILE           reduce using rule 37 (not_variables -> empty .)
    FOR             reduce using rule 37 (not_variables -> empty .)


state 178

    (97) asignacion -> dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion .

    SEMICOLON       reduce using rule 97 (asignacion -> dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion .)


state 179

    (101) llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .

    SEMICOLON       reduce using rule 101 (llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)


state 180

    (102) llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR . punto_verify_total_params punto_end_llamada
    (104) punto_verify_total_params -> .

    SEMICOLON       reduce using rule 104 (punto_verify_total_params -> .)

    punto_verify_total_params      shift and go to state 201

state 181

    (27) dec_var_llamada -> m_exp punto_verify_dec_param . COMMA punto_mas_k dec_var_llamada
    (28) dec_var_llamada -> m_exp punto_verify_dec_param .

    COMMA           shift and go to state 202
    RIGHT_PAR       reduce using rule 28 (dec_var_llamada -> m_exp punto_verify_dec_param .)


state 182

    (23) dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I . RIGHT_BR

    RIGHT_BR        shift and go to state 203


state 183

    (111) lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand . COMMA lectura_var
    (112) lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand .

    COMMA           shift and go to state 204
    RIGHT_PAR       reduce using rule 112 (lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand .)


state 184

    (116) escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand .
    (118) escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand . COMMA escritura_aux

    RIGHT_PAR       reduce using rule 116 (escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand .)
    COMMA           shift and go to state 205


state 185

    (117) escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand .
    (119) escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand . COMMA escritura_aux

    RIGHT_PAR       reduce using rule 117 (escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand .)
    COMMA           shift and go to state 206


state 186

    (123) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN . LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN . LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if

    LEFT_CURL       shift and go to state 207


state 187

    (52) t_exp_or_aux -> OR punto_push_or . exp_or
    (49) exp_or -> . t_exp punto_pop_or t_exp_or_aux
    (50) exp_or -> . t_exp punto_pop_or
    (54) t_exp -> . g_exp pop_and t_exp_aux
    (55) t_exp -> . g_exp pop_and
    (59) g_exp -> . m_exp
    (60) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    exp_or                         shift and go to state 208
    t_exp                          shift and go to state 94
    g_exp                          shift and go to state 95
    m_exp                          shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 188

    (57) t_exp_aux -> AND punto_push_and . t_exp
    (54) t_exp -> . g_exp pop_and t_exp_aux
    (55) t_exp -> . g_exp pop_and
    (59) g_exp -> . m_exp
    (60) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    t_exp                          shift and go to state 209
    g_exp                          shift and go to state 95
    m_exp                          shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 189

    (60) g_exp -> m_exp relacionales punto_relacionales m_exp . punto_pop_relacional
    (62) punto_pop_relacional -> .

    AND             reduce using rule 62 (punto_pop_relacional -> .)
    OR              reduce using rule 62 (punto_pop_relacional -> .)
    RIGHT_PAR       reduce using rule 62 (punto_pop_relacional -> .)

    punto_pop_relacional           shift and go to state 210

state 190

    (66) m_exp_aux -> PLUS punto_m_exp_push . m_exp
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    m_exp                          shift and go to state 211
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 191

    (67) m_exp_aux -> MINUS punto_m_exp_push . m_exp
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    m_exp                          shift and go to state 212
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 192

    (72) termino_aux -> MULTIPLY punto_termino_aux . termino
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    termino                        shift and go to state 213
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 193

    (73) termino_aux -> DIVIDE punto_termino_aux . termino
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    termino                        shift and go to state 214
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 194

    (76) factor -> ID LEFT_PAR dec_var RIGHT_PAR .

    MULTIPLY        reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    DIVIDE          reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    PLUS            reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    MINUS           reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    LESS_THAN       reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    GREATER_THAN    reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    DIFFERENT       reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    EQUAL           reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    GREATER_EQUAL   reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    LESS_EQUAL      reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    AND             reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    OR              reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    RIGHT_PAR       reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    COMMA           reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    SEMICOLON       reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)
    TO              reduce using rule 76 (factor -> ID LEFT_PAR dec_var RIGHT_PAR .)


state 195

    (25) dec_var -> dec_varaux COMMA . dec_var
    (25) dec_var -> . dec_varaux COMMA dec_var
    (26) dec_var -> . dec_varaux
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR

    ID              shift and go to state 58

    dec_varaux                     shift and go to state 170
    dec_var                        shift and go to state 215

state 196

    (135) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp . LEFT_CURL estatutos RIGHT_CURL punto_end_while

    LEFT_CURL       shift and go to state 216


state 197

    (130) no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp . punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (132) punto_exp_for_inf -> .

    TO              reduce using rule 132 (punto_exp_for_inf -> .)

    punto_exp_for_inf              shift and go to state 217

state 198

    (33) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables . estatutos RIGHT_CURL punto_end_function_return
    (85) estatutos -> . estatutos_main_aux
    (86) estatutos -> . retorno SEMICOLON
    (95) estatutos_main_aux -> . estatutos_main estatutos
    (96) estatutos_main_aux -> . estatutos_main
    (107) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (87) estatutos_main -> . asignacion SEMICOLON
    (88) estatutos_main -> . llamada SEMICOLON
    (89) estatutos_main -> . lectura SEMICOLON
    (90) estatutos_main -> . escritura SEMICOLON
    (91) estatutos_main -> . decision SEMICOLON
    (92) estatutos_main -> . repeticion SEMICOLON
    (97) asignacion -> . dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion
    (101) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (102) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (110) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (115) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (123) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (128) repeticion -> . condicional
    (129) repeticion -> . no_condicional
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR
    (135) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (130) no_condicional -> . FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 222
    ID              shift and go to state 48
    READ            shift and go to state 49
    WRITE           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 54
    FOR             shift and go to state 55

    estatutos                      shift and go to state 218
    estatutos_main_aux             shift and go to state 219
    retorno                        shift and go to state 220
    estatutos_main                 shift and go to state 221
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    lectura                        shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    repeticion                     shift and go to state 46
    dec_varaux                     shift and go to state 47
    condicional                    shift and go to state 52
    no_condicional                 shift and go to state 53

state 199

    (34) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars . estatutos RIGHT_CURL end_func
    (85) estatutos -> . estatutos_main_aux
    (86) estatutos -> . retorno SEMICOLON
    (95) estatutos_main_aux -> . estatutos_main estatutos
    (96) estatutos_main_aux -> . estatutos_main
    (107) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (87) estatutos_main -> . asignacion SEMICOLON
    (88) estatutos_main -> . llamada SEMICOLON
    (89) estatutos_main -> . lectura SEMICOLON
    (90) estatutos_main -> . escritura SEMICOLON
    (91) estatutos_main -> . decision SEMICOLON
    (92) estatutos_main -> . repeticion SEMICOLON
    (97) asignacion -> . dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion
    (101) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (102) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (110) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (115) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (123) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (128) repeticion -> . condicional
    (129) repeticion -> . no_condicional
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR
    (135) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (130) no_condicional -> . FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 222
    ID              shift and go to state 48
    READ            shift and go to state 49
    WRITE           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 54
    FOR             shift and go to state 55

    estatutos                      shift and go to state 223
    estatutos_main_aux             shift and go to state 219
    retorno                        shift and go to state 220
    estatutos_main                 shift and go to state 221
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    lectura                        shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    repeticion                     shift and go to state 46
    dec_varaux                     shift and go to state 47
    condicional                    shift and go to state 52
    no_condicional                 shift and go to state 53

state 200

    (36) not_variables -> variables count_vars .

    RETURN          reduce using rule 36 (not_variables -> variables count_vars .)
    ID              reduce using rule 36 (not_variables -> variables count_vars .)
    READ            reduce using rule 36 (not_variables -> variables count_vars .)
    WRITE           reduce using rule 36 (not_variables -> variables count_vars .)
    IF              reduce using rule 36 (not_variables -> variables count_vars .)
    WHILE           reduce using rule 36 (not_variables -> variables count_vars .)
    FOR             reduce using rule 36 (not_variables -> variables count_vars .)


state 201

    (102) llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params . punto_end_llamada
    (105) punto_end_llamada -> .

    SEMICOLON       reduce using rule 105 (punto_end_llamada -> .)

    punto_end_llamada              shift and go to state 224

state 202

    (27) dec_var_llamada -> m_exp punto_verify_dec_param COMMA . punto_mas_k dec_var_llamada
    (29) punto_mas_k -> .

    ID              reduce using rule 29 (punto_mas_k -> .)
    LEFT_PAR        reduce using rule 29 (punto_mas_k -> .)
    CTE_I           reduce using rule 29 (punto_mas_k -> .)
    CTE_CHAR        reduce using rule 29 (punto_mas_k -> .)

    punto_mas_k                    shift and go to state 225

state 203

    (23) dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR .

    EQUALS          reduce using rule 23 (dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR .)
    COMMA           reduce using rule 23 (dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR .)
    MORE            reduce using rule 23 (dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR .)
    SEMICOLON       reduce using rule 23 (dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR .)
    RIGHT_PAR       reduce using rule 23 (dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR .)


state 204

    (111) lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA . lectura_var
    (111) lectura_var -> . punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var
    (112) lectura_var -> . punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand
    (109) punto_read_stack -> .

    ID              reduce using rule 109 (punto_read_stack -> .)

    punto_read_stack               shift and go to state 89
    lectura_var                    shift and go to state 226

state 205

    (118) escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA . escritura_aux
    (116) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand
    (117) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand
    (118) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (119) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (121) punto_write_stack -> .

    STR             reduce using rule 121 (punto_write_stack -> .)
    ID              reduce using rule 121 (punto_write_stack -> .)
    LEFT_PAR        reduce using rule 121 (punto_write_stack -> .)
    CTE_I           reduce using rule 121 (punto_write_stack -> .)
    CTE_CHAR        reduce using rule 121 (punto_write_stack -> .)

    punto_write_stack              shift and go to state 91
    escritura_aux                  shift and go to state 227

state 206

    (119) escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA . escritura_aux
    (116) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand
    (117) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand
    (118) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (119) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (121) punto_write_stack -> .

    STR             reduce using rule 121 (punto_write_stack -> .)
    ID              reduce using rule 121 (punto_write_stack -> .)
    LEFT_PAR        reduce using rule 121 (punto_write_stack -> .)
    CTE_I           reduce using rule 121 (punto_write_stack -> .)
    CTE_CHAR        reduce using rule 121 (punto_write_stack -> .)

    punto_write_stack              shift and go to state 91
    escritura_aux                  shift and go to state 228

state 207

    (123) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL . estatutos RIGHT_CURL punto_end_if
    (124) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL . estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (85) estatutos -> . estatutos_main_aux
    (86) estatutos -> . retorno SEMICOLON
    (95) estatutos_main_aux -> . estatutos_main estatutos
    (96) estatutos_main_aux -> . estatutos_main
    (107) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (87) estatutos_main -> . asignacion SEMICOLON
    (88) estatutos_main -> . llamada SEMICOLON
    (89) estatutos_main -> . lectura SEMICOLON
    (90) estatutos_main -> . escritura SEMICOLON
    (91) estatutos_main -> . decision SEMICOLON
    (92) estatutos_main -> . repeticion SEMICOLON
    (97) asignacion -> . dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion
    (101) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (102) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (110) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (115) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (123) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (128) repeticion -> . condicional
    (129) repeticion -> . no_condicional
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR
    (135) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (130) no_condicional -> . FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 222
    ID              shift and go to state 48
    READ            shift and go to state 49
    WRITE           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 54
    FOR             shift and go to state 55

    estatutos                      shift and go to state 229
    estatutos_main_aux             shift and go to state 219
    retorno                        shift and go to state 220
    estatutos_main                 shift and go to state 221
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    lectura                        shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    repeticion                     shift and go to state 46
    dec_varaux                     shift and go to state 47
    condicional                    shift and go to state 52
    no_condicional                 shift and go to state 53

state 208

    (52) t_exp_or_aux -> OR punto_push_or exp_or .

    RIGHT_PAR       reduce using rule 52 (t_exp_or_aux -> OR punto_push_or exp_or .)


state 209

    (57) t_exp_aux -> AND punto_push_and t_exp .

    OR              reduce using rule 57 (t_exp_aux -> AND punto_push_and t_exp .)
    RIGHT_PAR       reduce using rule 57 (t_exp_aux -> AND punto_push_and t_exp .)


state 210

    (60) g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional .

    AND             reduce using rule 60 (g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional .)
    OR              reduce using rule 60 (g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional .)
    RIGHT_PAR       reduce using rule 60 (g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional .)


state 211

    (66) m_exp_aux -> PLUS punto_m_exp_push m_exp .

    LESS_THAN       reduce using rule 66 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    GREATER_THAN    reduce using rule 66 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    DIFFERENT       reduce using rule 66 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    EQUAL           reduce using rule 66 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    GREATER_EQUAL   reduce using rule 66 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    LESS_EQUAL      reduce using rule 66 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    AND             reduce using rule 66 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    OR              reduce using rule 66 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    RIGHT_PAR       reduce using rule 66 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    COMMA           reduce using rule 66 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    SEMICOLON       reduce using rule 66 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    TO              reduce using rule 66 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)


state 212

    (67) m_exp_aux -> MINUS punto_m_exp_push m_exp .

    LESS_THAN       reduce using rule 67 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    GREATER_THAN    reduce using rule 67 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    DIFFERENT       reduce using rule 67 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    EQUAL           reduce using rule 67 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    GREATER_EQUAL   reduce using rule 67 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    LESS_EQUAL      reduce using rule 67 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    AND             reduce using rule 67 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    OR              reduce using rule 67 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    RIGHT_PAR       reduce using rule 67 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    COMMA           reduce using rule 67 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    SEMICOLON       reduce using rule 67 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    TO              reduce using rule 67 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)


state 213

    (72) termino_aux -> MULTIPLY punto_termino_aux termino .

    PLUS            reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    MINUS           reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    LESS_THAN       reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    GREATER_THAN    reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    DIFFERENT       reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    EQUAL           reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    GREATER_EQUAL   reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    LESS_EQUAL      reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    AND             reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    OR              reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    RIGHT_PAR       reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    COMMA           reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    SEMICOLON       reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    TO              reduce using rule 72 (termino_aux -> MULTIPLY punto_termino_aux termino .)


state 214

    (73) termino_aux -> DIVIDE punto_termino_aux termino .

    PLUS            reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)
    MINUS           reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)
    LESS_THAN       reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)
    GREATER_THAN    reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)
    DIFFERENT       reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)
    EQUAL           reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)
    GREATER_EQUAL   reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)
    LESS_EQUAL      reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)
    AND             reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)
    OR              reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)
    RIGHT_PAR       reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)
    COMMA           reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)
    SEMICOLON       reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)
    TO              reduce using rule 73 (termino_aux -> DIVIDE punto_termino_aux termino .)


state 215

    (25) dec_var -> dec_varaux COMMA dec_var .

    RIGHT_PAR       reduce using rule 25 (dec_var -> dec_varaux COMMA dec_var .)


state 216

    (135) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL . estatutos RIGHT_CURL punto_end_while
    (85) estatutos -> . estatutos_main_aux
    (86) estatutos -> . retorno SEMICOLON
    (95) estatutos_main_aux -> . estatutos_main estatutos
    (96) estatutos_main_aux -> . estatutos_main
    (107) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (87) estatutos_main -> . asignacion SEMICOLON
    (88) estatutos_main -> . llamada SEMICOLON
    (89) estatutos_main -> . lectura SEMICOLON
    (90) estatutos_main -> . escritura SEMICOLON
    (91) estatutos_main -> . decision SEMICOLON
    (92) estatutos_main -> . repeticion SEMICOLON
    (97) asignacion -> . dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion
    (101) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (102) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (110) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (115) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (123) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (128) repeticion -> . condicional
    (129) repeticion -> . no_condicional
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR
    (135) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (130) no_condicional -> . FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 222
    ID              shift and go to state 48
    READ            shift and go to state 49
    WRITE           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 54
    FOR             shift and go to state 55

    estatutos                      shift and go to state 230
    estatutos_main_aux             shift and go to state 219
    retorno                        shift and go to state 220
    estatutos_main                 shift and go to state 221
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    lectura                        shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    repeticion                     shift and go to state 46
    dec_varaux                     shift and go to state 47
    condicional                    shift and go to state 52
    no_condicional                 shift and go to state 53

state 217

    (130) no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf . TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    TO              shift and go to state 231


state 218

    (33) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos . RIGHT_CURL punto_end_function_return

    RIGHT_CURL      shift and go to state 232


state 219

    (85) estatutos -> estatutos_main_aux .

    RIGHT_CURL      reduce using rule 85 (estatutos -> estatutos_main_aux .)


state 220

    (86) estatutos -> retorno . SEMICOLON

    SEMICOLON       shift and go to state 233


state 221

    (95) estatutos_main_aux -> estatutos_main . estatutos
    (96) estatutos_main_aux -> estatutos_main .
    (85) estatutos -> . estatutos_main_aux
    (86) estatutos -> . retorno SEMICOLON
    (95) estatutos_main_aux -> . estatutos_main estatutos
    (96) estatutos_main_aux -> . estatutos_main
    (107) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (87) estatutos_main -> . asignacion SEMICOLON
    (88) estatutos_main -> . llamada SEMICOLON
    (89) estatutos_main -> . lectura SEMICOLON
    (90) estatutos_main -> . escritura SEMICOLON
    (91) estatutos_main -> . decision SEMICOLON
    (92) estatutos_main -> . repeticion SEMICOLON
    (97) asignacion -> . dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion
    (101) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (102) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (110) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (115) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (123) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (128) repeticion -> . condicional
    (129) repeticion -> . no_condicional
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR
    (135) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (130) no_condicional -> . FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RIGHT_CURL      reduce using rule 96 (estatutos_main_aux -> estatutos_main .)
    RETURN          shift and go to state 222
    ID              shift and go to state 48
    READ            shift and go to state 49
    WRITE           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 54
    FOR             shift and go to state 55

    estatutos_main                 shift and go to state 221
    estatutos                      shift and go to state 234
    estatutos_main_aux             shift and go to state 219
    retorno                        shift and go to state 220
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    lectura                        shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    repeticion                     shift and go to state 46
    dec_varaux                     shift and go to state 47
    condicional                    shift and go to state 52
    no_condicional                 shift and go to state 53

state 222

    (107) retorno -> RETURN . LEFT_PAR m_exp RIGHT_PAR punto_return

    LEFT_PAR        shift and go to state 235


state 223

    (34) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos . RIGHT_CURL end_func

    RIGHT_CURL      shift and go to state 236


state 224

    (102) llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada .

    SEMICOLON       reduce using rule 102 (llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada .)


state 225

    (27) dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k . dec_var_llamada
    (27) dec_var_llamada -> . m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada
    (28) dec_var_llamada -> . m_exp punto_verify_dec_param
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    m_exp                          shift and go to state 150
    dec_var_llamada                shift and go to state 237
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 226

    (111) lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var .

    RIGHT_PAR       reduce using rule 111 (lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var .)


state 227

    (118) escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux .

    RIGHT_PAR       reduce using rule 118 (escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux .)


state 228

    (119) escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux .

    RIGHT_PAR       reduce using rule 119 (escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux .)


state 229

    (123) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos . RIGHT_CURL punto_end_if
    (124) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos . RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if

    RIGHT_CURL      shift and go to state 238


state 230

    (135) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos . RIGHT_CURL punto_end_while

    RIGHT_CURL      shift and go to state 239


state 231

    (130) no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO . m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    m_exp                          shift and go to state 240
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 232

    (33) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL . punto_end_function_return
    (40) punto_end_function_return -> .

    VOID            reduce using rule 40 (punto_end_function_return -> .)
    INT             reduce using rule 40 (punto_end_function_return -> .)
    FLOAT           reduce using rule 40 (punto_end_function_return -> .)
    CHAR            reduce using rule 40 (punto_end_function_return -> .)
    MAIN            reduce using rule 40 (punto_end_function_return -> .)

    punto_end_function_return      shift and go to state 241

state 233

    (86) estatutos -> retorno SEMICOLON .

    RIGHT_CURL      reduce using rule 86 (estatutos -> retorno SEMICOLON .)


state 234

    (95) estatutos_main_aux -> estatutos_main estatutos .

    RIGHT_CURL      reduce using rule 95 (estatutos_main_aux -> estatutos_main estatutos .)


state 235

    (107) retorno -> RETURN LEFT_PAR . m_exp RIGHT_PAR punto_return
    (63) m_exp -> . termino punto_mexp_pop
    (64) m_exp -> . termino punto_mexp_pop m_exp_aux
    (69) termino -> . factor punto_termino_pop
    (70) termino -> . factor punto_termino_pop termino_aux
    (75) factor -> . cte
    (76) factor -> . ID LEFT_PAR dec_var RIGHT_PAR
    (77) factor -> . ID LEFT_PAR RIGHT_PAR
    (78) factor -> . LEFT_PAR exp_or RIGHT_PAR
    (139) cte -> . ID factor_push_operand
    (140) cte -> . CTE_I factor_int_push
    (141) cte -> . cte_f factor_float_push
    (142) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    ID              shift and go to state 100
    LEFT_PAR        shift and go to state 92
    CTE_I           shift and go to state 101
    CTE_CHAR        shift and go to state 103

    m_exp                          shift and go to state 242
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    cte                            shift and go to state 99
    cte_f                          shift and go to state 102

state 236

    (34) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL . end_func
    (48) end_func -> .

    VOID            reduce using rule 48 (end_func -> .)
    INT             reduce using rule 48 (end_func -> .)
    FLOAT           reduce using rule 48 (end_func -> .)
    CHAR            reduce using rule 48 (end_func -> .)
    MAIN            reduce using rule 48 (end_func -> .)

    end_func                       shift and go to state 243

state 237

    (27) dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada .

    RIGHT_PAR       reduce using rule 27 (dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada .)


state 238

    (123) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL . punto_end_if
    (124) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL . ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (127) punto_end_if -> .

    ELSE            shift and go to state 245
    SEMICOLON       reduce using rule 127 (punto_end_if -> .)

    punto_end_if                   shift and go to state 244

state 239

    (135) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL . punto_end_while
    (138) punto_end_while -> .

    SEMICOLON       reduce using rule 138 (punto_end_while -> .)

    punto_end_while                shift and go to state 246

state 240

    (130) no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp . punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (133) punto_exp_for_sup -> .

    RIGHT_PAR       reduce using rule 133 (punto_exp_for_sup -> .)

    punto_exp_for_sup              shift and go to state 247

state 241

    (33) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .

    VOID            reduce using rule 33 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)
    INT             reduce using rule 33 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)
    FLOAT           reduce using rule 33 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)
    CHAR            reduce using rule 33 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)
    MAIN            reduce using rule 33 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)


state 242

    (107) retorno -> RETURN LEFT_PAR m_exp . RIGHT_PAR punto_return

    RIGHT_PAR       shift and go to state 248


state 243

    (34) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .

    VOID            reduce using rule 34 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)
    INT             reduce using rule 34 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)
    FLOAT           reduce using rule 34 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)
    CHAR            reduce using rule 34 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)
    MAIN            reduce using rule 34 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)


state 244

    (123) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if .

    SEMICOLON       reduce using rule 123 (decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if .)


state 245

    (124) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE . punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (126) punto_else -> .

    LEFT_CURL       reduce using rule 126 (punto_else -> .)

    punto_else                     shift and go to state 249

state 246

    (135) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while .

    SEMICOLON       reduce using rule 135 (condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while .)


state 247

    (130) no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup . RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RIGHT_PAR       shift and go to state 250


state 248

    (107) retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR . punto_return
    (108) punto_return -> .

    SEMICOLON       reduce using rule 108 (punto_return -> .)

    punto_return                   shift and go to state 251

state 249

    (124) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else . LEFT_CURL estatutos RIGHT_CURL punto_end_if

    LEFT_CURL       shift and go to state 252


state 250

    (130) no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR . LEFT_CURL estatutos RIGHT_CURL punto_end_for

    LEFT_CURL       shift and go to state 253


state 251

    (107) retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR punto_return .

    SEMICOLON       reduce using rule 107 (retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR punto_return .)


state 252

    (124) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL . estatutos RIGHT_CURL punto_end_if
    (85) estatutos -> . estatutos_main_aux
    (86) estatutos -> . retorno SEMICOLON
    (95) estatutos_main_aux -> . estatutos_main estatutos
    (96) estatutos_main_aux -> . estatutos_main
    (107) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (87) estatutos_main -> . asignacion SEMICOLON
    (88) estatutos_main -> . llamada SEMICOLON
    (89) estatutos_main -> . lectura SEMICOLON
    (90) estatutos_main -> . escritura SEMICOLON
    (91) estatutos_main -> . decision SEMICOLON
    (92) estatutos_main -> . repeticion SEMICOLON
    (97) asignacion -> . dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion
    (101) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (102) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (110) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (115) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (123) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (128) repeticion -> . condicional
    (129) repeticion -> . no_condicional
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR
    (135) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (130) no_condicional -> . FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 222
    ID              shift and go to state 48
    READ            shift and go to state 49
    WRITE           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 54
    FOR             shift and go to state 55

    estatutos                      shift and go to state 254
    estatutos_main_aux             shift and go to state 219
    retorno                        shift and go to state 220
    estatutos_main                 shift and go to state 221
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    lectura                        shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    repeticion                     shift and go to state 46
    dec_varaux                     shift and go to state 47
    condicional                    shift and go to state 52
    no_condicional                 shift and go to state 53

state 253

    (130) no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL . estatutos RIGHT_CURL punto_end_for
    (85) estatutos -> . estatutos_main_aux
    (86) estatutos -> . retorno SEMICOLON
    (95) estatutos_main_aux -> . estatutos_main estatutos
    (96) estatutos_main_aux -> . estatutos_main
    (107) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (87) estatutos_main -> . asignacion SEMICOLON
    (88) estatutos_main -> . llamada SEMICOLON
    (89) estatutos_main -> . lectura SEMICOLON
    (90) estatutos_main -> . escritura SEMICOLON
    (91) estatutos_main -> . decision SEMICOLON
    (92) estatutos_main -> . repeticion SEMICOLON
    (97) asignacion -> . dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion
    (101) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (102) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (110) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (115) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (123) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (124) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (128) repeticion -> . condicional
    (129) repeticion -> . no_condicional
    (21) dec_varaux -> . ID
    (22) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR
    (23) dec_varaux -> . ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR
    (135) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (130) no_condicional -> . FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 222
    ID              shift and go to state 48
    READ            shift and go to state 49
    WRITE           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 54
    FOR             shift and go to state 55

    dec_varaux                     shift and go to state 47
    estatutos                      shift and go to state 255
    estatutos_main_aux             shift and go to state 219
    retorno                        shift and go to state 220
    estatutos_main                 shift and go to state 221
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    lectura                        shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    repeticion                     shift and go to state 46
    condicional                    shift and go to state 52
    no_condicional                 shift and go to state 53

state 254

    (124) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos . RIGHT_CURL punto_end_if

    RIGHT_CURL      shift and go to state 256


state 255

    (130) no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos . RIGHT_CURL punto_end_for

    RIGHT_CURL      shift and go to state 257


state 256

    (124) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL . punto_end_if
    (127) punto_end_if -> .

    SEMICOLON       reduce using rule 127 (punto_end_if -> .)

    punto_end_if                   shift and go to state 258

state 257

    (130) no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL . punto_end_for
    (134) punto_end_for -> .

    SEMICOLON       reduce using rule 134 (punto_end_for -> .)

    punto_end_for                  shift and go to state 259

state 258

    (124) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if .

    SEMICOLON       reduce using rule 124 (decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if .)


state 259

    (130) no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for .

    SEMICOLON       reduce using rule 130 (no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for .)

