
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND CHAR COLON COMMA CTE_CHAR CTE_I DIFFERENT DIVIDE DO DOT ELSE EQUAL EQUALS FLOAT FOR FUNC GREATER_EQUAL GREATER_THAN ID IF INT LEFT_BR LEFT_CURL LEFT_PAR LESS_EQUAL LESS_THAN MAIN MINUS MORE MULTIPLY OR PLUS PROGRAM READ RETURN RIGHT_BR RIGHT_CURL RIGHT_PAR SEMICOLON STR THEN TO VAR VD VOID WHILE WRITE\n\tcte_f : CTE_I DOT CTE_I\n\t\n\t\n\tprogram : PROGRAM ID punto_program COLON main\n\t\t\t\t\t| PROGRAM ID punto_program COLON variables main\n\t\t\t\t\t| PROGRAM ID punto_program COLON variables funciones main\n\t\t\t\t\t| PROGRAM ID punto_program COLON funciones main  \n\t\n\tpunto_program : \n\t\n\tmain : MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL\n\n\t\n\tmain_aux : estatutos_main_multiple\n\t\t\t\t\t | empty\n\t\n\tvariables : VAR punto_variables_1 SEMICOLON\n\t\t\t\t\t\t| VAR punto_variables_1 variables_aux SEMICOLON\n\t\n\tpunto_variables_1 :\n\t\n\tvariables_aux : tipo COLON declaracion_inicial\n\t\t\t\t\t\t\t\t| tipo COLON declaracion_inicial MORE variables_aux\n\t\n\ttipo : INT\n\t\t\t| FLOAT\n\t\t\t| CHAR\n\t\n\tdeclaracion_inicial : dec_varaux punto_dec_var_1 COMMA declaracion_inicial\n\t\t\t\t\t\t\t\t\t\t\t| dec_varaux punto_dec_var_1\n\t\n\tpunto_dec_var_1 :\n\t\n\tdec_varaux : ID \n\t\t\t\t\t\t\t| ID LEFT_BR CTE_I RIGHT_BR \n\t\t\t\t\t\t\t| ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR\n\t\n\tpunto_dec_varaux_1 :\n\n\t\n\tdec_var : dec_varaux COMMA dec_var\n\t\t\t\t\t| dec_varaux\n\t\n\tfunciones : funciones_aux\n\t\t\t\t\t\t| funciones_aux funciones\n\t\n\t\n\t\tfunciones_aux : tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return\n\t\t\t\t\t\t\t\t | VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func\n\t\n\tpunto_return_value :\n\n\t\n\tnot_variables : variables count_vars\n\t\t\t\t\t\t\t\t| empty\n\t\n\tnot_params : parametros count_params\n\t\t\t\t\t\t | empty\n\t\n\t\tpunto_end_function_return :\n\t\n\tpunto_id_func :\n\t\n\tparametros : dec_var_param COMMA parametros\n\t\t\t\t\t\t\t| dec_var_param\n\n\t\n\tdec_var_param : tipo ID punto_push_param\n\t\n\tpunto_push_param :\n\t\n\tcount_params :\n\t\n\tcount_vars :\n\t\n\tend_func :\n\t\n\t\texp_or : t_exp punto_pop_or t_exp_or_aux\n\t\t\t\t\t| t_exp punto_pop_or\n\t\n\t\tpunto_pop_or :\n\t\n\t\n\tt_exp_or_aux : OR punto_push_or exp_or\n\t\n\tpunto_push_or :\n\t\n\tt_exp : g_exp pop_and t_exp_aux\n\t\t\t\t| g_exp pop_and\n\n\t\n\tpop_and :\n\t\n\t\n\tt_exp_aux : AND punto_push_and t_exp\n\n\t\n\tpunto_push_and :\n\t\n\t\tg_exp : m_exp\n\t\t\t\t\t| m_exp relacionales punto_relacionales m_exp punto_pop_relacional\n\t\n\tpunto_relacionales :\n\t\n\tpunto_pop_relacional :\n\t\n\tm_exp : termino punto_mexp_pop\n\t\t\t\t| termino punto_mexp_pop m_exp_aux\n\t\n\tpunto_mexp_pop :\n\t\n\tm_exp_aux : PLUS punto_m_exp_push m_exp\n\t\t\t\t\t\t| MINUS punto_m_exp_push m_exp\n\n\t\n\tpunto_m_exp_push :\n\t\n\ttermino : factor punto_termino_pop\n\t\t\t\t\t| factor punto_termino_pop termino_aux\n\t\n\tpunto_termino_pop :\n\t\n  termino_aux : MULTIPLY punto_termino_aux termino\n              | DIVIDE punto_termino_aux termino\n  \n\tpunto_termino_aux :\n\t\n\tfactor : cte\n\t\t\t\t\t| ID LEFT_PAR dec_var RIGHT_PAR\n\t\t\t\t\t| ID LEFT_PAR RIGHT_PAR\n\t\t\t\t\t| LEFT_PAR exp_or RIGHT_PAR\n\t\n\trelacionales : LESS_THAN\n\t\t\t\t\t\t\t\t\t| GREATER_THAN\n\t\t\t\t\t\t\t\t\t| DIFFERENT\n\t\t\t\t\t\t\t\t\t| EQUAL\n\t\t\t\t\t\t\t\t\t| GREATER_EQUAL\n\t\t\t\t\t\t\t\t\t| LESS_EQUAL\n\t\n\testatutos : estatutos_main_aux \n\t\t\t\t\t\t| retorno SEMICOLON \n\n\t\n\testatutos_main : asignacion SEMICOLON\n\t\t\t\t\t\t\t\t\t| llamada SEMICOLON\n\t\t\t\t\t\t\t\t\t| lectura SEMICOLON\n\t\t\t\t\t\t\t\t\t| escritura SEMICOLON\n\t\t\t\t\t\t\t\t\t| decision SEMICOLON\n\t\t\t\t\t\t\t\t\t| repeticion SEMICOLON\n\t\n\testatutos_main_multiple : estatutos_main estatutos_main_multiple\n\t\t\t\t\t\t\t\t\t\t| estatutos_main\n\t\n\testatutos_main_aux : estatutos_main estatutos\n\t\t\t\t\t\t\t\t\t\t\t| estatutos_main\n\n\t\n\tasignacion : dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion\n\n\t\n\tpunto_asignacion_var : \n\t\n\tpunto_igual :\n\t\n\tpunto_asignacion : \n\n\t\n\t\tllamada : VD ID LEFT_PAR RIGHT_PAR\n\t\t\t\t\t\t| VD ID LEFT_PAR dec_var RIGHT_PAR\n\t\n\t\tretorno : RETURN LEFT_PAR m_exp RIGHT_PAR punto_return\n\t\n\tpunto_return :\n\t\n\t\n\tpunto_read_stack : \n\t\n\tlectura : READ LEFT_PAR lectura_var RIGHT_PAR\n\t\n\tlectura_var : punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var\n\t\t\t\t\t| punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand\n\t\n\tpunto_push_dec_var :\n\t\n\t\tpunto_add_read_operand : \n\t\n\tescritura : WRITE LEFT_PAR escritura_aux RIGHT_PAR\n\t\n\tescritura_aux : punto_write_stack STR punto_escritura_push punto_add_write_operand\n\t\t\t\t\t\t\t\t| punto_write_stack m_exp punto_escritura_push punto_add_write_operand\n\t\t\t\t\t\t\t\t| punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux \n\t\t\t\t\t\t\t\t| punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux\n\t\n\tpunto_escritura_push : \n\n\t\n\tpunto_write_stack :\n\t\n\tpunto_add_write_operand : \n\t\n\tdecision : IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if \n\t\t\t\t\t\t| IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if\n\t\n\tpunto_if_exp :\n\t\n\tpunto_else :\n\t\n\tpunto_end_if :\n\t\n\trepeticion : condicional\n\t\t\t\t\t\t\t| no_condicional\n\t\n\tno_condicional : FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for\n\t\n\tpunto_for :\n\t\n\tpunto_exp_for_inf :\n\t\n\tpunto_exp_for_sup :\n\t\n\tpunto_end_for :\n\t\n\tcondicional : WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while\n\t\n\tpunto_while :\n\t\n\tpunto_validar_exp :\n\t\n\tpunto_end_while :\n\t\n\tcte : ID factor_push_operand\n\t\t\t| CTE_I factor_int_push\n\t\t\t| cte_f factor_float_push\n\t\t\t| CTE_CHAR factor_char_push\n\t\n\tfactor_push_operand :\n\t\n\tfactor_float_push :\n\t\n\tfactor_int_push :\n\t\n\tfactor_char_push :\n\t\n\tempty : \n\t'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,17,19,25,61,],[0,-2,-3,-5,-4,-7,]),'ID':([2,14,15,16,23,24,27,32,33,34,40,48,63,64,65,66,67,68,72,73,74,76,84,85,86,89,91,92,104,107,113,127,128,129,130,131,132,133,136,146,151,159,161,162,164,165,167,168,173,174,175,176,177,185,186,188,189,190,191,195,196,197,199,200,201,202,210,215,223,227,243,244,],[3,-15,-16,-17,30,31,-10,49,-11,49,49,70,-83,-84,-85,-86,-87,-88,-101,-113,100,49,112,-95,49,49,100,100,100,49,100,-57,-75,-76,-77,-78,-79,-80,49,-139,49,-49,-54,100,-64,-64,-70,-70,100,-139,-43,-43,-33,100,100,100,100,100,100,49,49,-32,-101,-113,-113,49,49,49,100,100,49,49,]),'COLON':([3,4,14,15,16,29,],[-6,5,-15,-16,-17,34,]),'MAIN':([5,7,8,11,18,22,27,33,224,228,232,234,],[9,9,9,-27,9,-28,-10,-11,-36,-44,-29,-30,]),'VAR':([5,146,174,],[10,10,10,]),'VOID':([5,7,11,27,33,224,228,232,234,],[13,13,13,-10,-11,-36,-44,-29,-30,]),'INT':([5,7,10,11,21,27,33,60,77,79,111,224,228,232,234,],[14,14,-12,14,14,-10,-11,14,14,14,14,-36,-44,-29,-30,]),'FLOAT':([5,7,10,11,21,27,33,60,77,79,111,224,228,232,234,],[15,15,-12,15,15,-10,-11,15,15,15,15,-36,-44,-29,-30,]),'CHAR':([5,7,10,11,21,27,33,60,77,79,111,224,228,232,234,],[16,16,-12,16,16,-10,-11,16,16,16,16,-36,-44,-29,-30,]),'LEFT_PAR':([9,30,31,35,36,50,51,52,55,56,59,70,73,74,75,85,91,92,100,104,113,127,128,129,130,131,132,133,159,161,162,164,165,167,168,173,185,186,188,189,190,191,200,201,216,223,227,],[20,-37,-37,-31,60,72,73,74,-128,76,79,86,-113,92,104,-95,92,92,136,92,92,-57,-75,-76,-77,-78,-79,-80,-49,-54,92,-64,-64,-70,-70,92,92,92,92,92,92,92,-113,-113,227,92,92,]),'SEMICOLON':([10,21,28,41,42,43,44,45,46,49,53,54,57,58,78,97,98,99,100,101,102,103,106,114,117,118,120,134,135,137,138,140,141,144,149,150,156,163,166,170,171,178,192,198,206,207,208,209,214,229,230,235,237,239,242,247,248,249,250,],[-12,27,33,63,64,65,66,67,68,-21,-120,-121,-13,-20,-19,-61,-67,-71,-135,-137,-136,-138,-14,-97,-22,-102,-107,-59,-65,-131,-132,-133,-134,-18,-96,-98,-74,-60,-66,-73,-1,-93,-72,-23,-62,-63,-68,-69,225,-119,-130,-115,-127,-100,-99,-119,-126,-116,-122,]),'FUNC':([12,13,14,15,16,],[23,24,-15,-16,-17,]),'RIGHT_PAR':([20,49,60,79,80,81,82,83,86,88,90,93,94,95,96,97,98,99,100,101,102,103,108,110,112,115,116,117,119,121,122,123,125,126,134,135,136,137,138,140,141,142,147,148,153,154,155,156,158,160,163,166,169,170,171,179,181,182,183,187,192,198,203,204,205,206,207,208,209,218,219,220,231,233,238,],[26,-21,-139,-139,109,-42,-35,-39,114,118,120,124,-47,-52,-55,-61,-67,-71,-135,-137,-136,-138,145,-34,-41,150,-26,-22,-105,-112,-112,156,-46,-51,-59,-65,170,-131,-132,-133,-134,172,-38,-40,-106,-114,-114,-74,-45,-50,-60,-66,192,-73,-1,-25,-104,-108,-109,-58,-72,-23,-48,-53,-56,-62,-63,-68,-69,-103,-110,-111,-125,239,241,]),'LEFT_CURL':([26,109,145,172,184,193,236,240,241,],[32,146,174,-129,202,210,-118,243,244,]),'RETURN':([27,33,63,64,65,66,67,68,146,174,175,176,177,195,196,197,202,210,215,243,244,],[-10,-11,-83,-84,-85,-86,-87,-88,-139,-139,-43,-43,-33,216,216,-32,216,216,216,216,216,]),'VD':([27,32,33,40,63,64,65,66,67,68,146,174,175,176,177,195,196,197,202,210,215,243,244,],[-10,48,-11,48,-83,-84,-85,-86,-87,-88,-139,-139,-43,-43,-33,48,48,-32,48,48,48,48,48,]),'READ':([27,32,33,40,63,64,65,66,67,68,146,174,175,176,177,195,196,197,202,210,215,243,244,],[-10,50,-11,50,-83,-84,-85,-86,-87,-88,-139,-139,-43,-43,-33,50,50,-32,50,50,50,50,50,]),'WRITE':([27,32,33,40,63,64,65,66,67,68,146,174,175,176,177,195,196,197,202,210,215,243,244,],[-10,51,-11,51,-83,-84,-85,-86,-87,-88,-139,-139,-43,-43,-33,51,51,-32,51,51,51,51,51,]),'IF':([27,32,33,40,63,64,65,66,67,68,146,174,175,176,177,195,196,197,202,210,215,243,244,],[-10,52,-11,52,-83,-84,-85,-86,-87,-88,-139,-139,-43,-43,-33,52,52,-32,52,52,52,52,52,]),'WHILE':([27,32,33,40,63,64,65,66,67,68,146,174,175,176,177,195,196,197,202,210,215,243,244,],[-10,55,-11,55,-83,-84,-85,-86,-87,-88,-139,-139,-43,-43,-33,55,55,-32,55,55,55,55,55,]),'FOR':([27,32,33,40,63,64,65,66,67,68,146,174,175,176,177,195,196,197,202,210,215,243,244,],[-10,56,-11,56,-83,-84,-85,-86,-87,-88,-139,-139,-43,-43,-33,56,56,-32,56,56,56,56,56,]),'RIGHT_CURL':([32,37,38,39,40,62,63,64,65,66,67,68,212,213,215,217,221,222,225,226,245,246,],[-139,61,-8,-9,-90,-89,-83,-84,-85,-86,-87,-88,224,-81,-92,228,229,230,-82,-91,247,248,]),'EQUALS':([47,49,69,105,117,143,198,],[-94,-21,85,-123,-22,173,-23,]),'COMMA':([49,58,78,83,97,98,99,100,101,102,103,112,116,117,119,121,122,134,135,137,138,140,141,148,153,154,155,156,163,166,170,171,181,182,183,192,198,206,207,208,209,],[-21,-20,107,111,-61,-67,-71,-135,-137,-136,-138,-41,151,-22,-105,-112,-112,-59,-65,-131,-132,-133,-134,-40,-106,-114,-114,-74,-60,-66,-73,-1,199,200,201,-72,-23,-62,-63,-68,-69,]),'MORE':([49,57,58,78,117,144,198,],[-21,77,-20,-19,-22,-18,-23,]),'LEFT_BR':([49,117,],[71,152,]),'CTE_I':([71,73,74,85,91,92,104,113,127,128,129,130,131,132,133,139,152,159,161,162,164,165,167,168,173,185,186,188,189,190,191,200,201,223,227,],[87,-113,101,-95,101,101,101,101,-57,-75,-76,-77,-78,-79,-80,171,180,-49,-54,101,-64,-64,-70,-70,101,101,101,101,101,101,101,-113,-113,101,101,]),'STR':([73,91,200,201,],[-113,121,-113,-113,]),'CTE_CHAR':([73,74,85,91,92,104,113,127,128,129,130,131,132,133,159,161,162,164,165,167,168,173,185,186,188,189,190,191,200,201,223,227,],[-113,103,-95,103,103,103,103,-57,-75,-76,-77,-78,-79,-80,-49,-54,103,-64,-64,-70,-70,103,103,103,103,103,103,103,-113,-113,103,103,]),'RIGHT_BR':([87,180,],[117,198,]),'OR':([94,95,96,97,98,99,100,101,102,103,125,126,134,135,137,138,140,141,156,160,163,166,170,171,187,192,204,205,206,207,208,209,],[-47,-52,-55,-61,-67,-71,-135,-137,-136,-138,159,-51,-59,-65,-131,-132,-133,-134,-74,-50,-60,-66,-73,-1,-58,-72,-53,-56,-62,-63,-68,-69,]),'AND':([95,96,97,98,99,100,101,102,103,126,134,135,137,138,140,141,156,163,166,170,171,187,192,205,206,207,208,209,],[-52,-55,-61,-67,-71,-135,-137,-136,-138,161,-59,-65,-131,-132,-133,-134,-74,-60,-66,-73,-1,-58,-72,-56,-62,-63,-68,-69,]),'LESS_THAN':([96,97,98,99,100,101,102,103,134,135,137,138,140,141,156,163,166,170,171,192,206,207,208,209,],[128,-61,-67,-71,-135,-137,-136,-138,-59,-65,-131,-132,-133,-134,-74,-60,-66,-73,-1,-72,-62,-63,-68,-69,]),'GREATER_THAN':([96,97,98,99,100,101,102,103,134,135,137,138,140,141,156,163,166,170,171,192,206,207,208,209,],[129,-61,-67,-71,-135,-137,-136,-138,-59,-65,-131,-132,-133,-134,-74,-60,-66,-73,-1,-72,-62,-63,-68,-69,]),'DIFFERENT':([96,97,98,99,100,101,102,103,134,135,137,138,140,141,156,163,166,170,171,192,206,207,208,209,],[130,-61,-67,-71,-135,-137,-136,-138,-59,-65,-131,-132,-133,-134,-74,-60,-66,-73,-1,-72,-62,-63,-68,-69,]),'EQUAL':([96,97,98,99,100,101,102,103,134,135,137,138,140,141,156,163,166,170,171,192,206,207,208,209,],[131,-61,-67,-71,-135,-137,-136,-138,-59,-65,-131,-132,-133,-134,-74,-60,-66,-73,-1,-72,-62,-63,-68,-69,]),'GREATER_EQUAL':([96,97,98,99,100,101,102,103,134,135,137,138,140,141,156,163,166,170,171,192,206,207,208,209,],[132,-61,-67,-71,-135,-137,-136,-138,-59,-65,-131,-132,-133,-134,-74,-60,-66,-73,-1,-72,-62,-63,-68,-69,]),'LESS_EQUAL':([96,97,98,99,100,101,102,103,134,135,137,138,140,141,156,163,166,170,171,192,206,207,208,209,],[133,-61,-67,-71,-135,-137,-136,-138,-59,-65,-131,-132,-133,-134,-74,-60,-66,-73,-1,-72,-62,-63,-68,-69,]),'PLUS':([97,98,99,100,101,102,103,134,135,137,138,140,141,156,166,170,171,192,208,209,],[-61,-67,-71,-135,-137,-136,-138,164,-65,-131,-132,-133,-134,-74,-66,-73,-1,-72,-68,-69,]),'MINUS':([97,98,99,100,101,102,103,134,135,137,138,140,141,156,166,170,171,192,208,209,],[-61,-67,-71,-135,-137,-136,-138,165,-65,-131,-132,-133,-134,-74,-66,-73,-1,-72,-68,-69,]),'TO':([97,98,99,100,101,102,103,134,135,137,138,140,141,156,163,166,170,171,192,194,206,207,208,209,211,],[-61,-67,-71,-135,-137,-136,-138,-59,-65,-131,-132,-133,-134,-74,-60,-66,-73,-1,-72,-124,-62,-63,-68,-69,223,]),'MULTIPLY':([98,99,100,101,102,103,135,137,138,140,141,156,170,171,192,],[-67,-71,-135,-137,-136,-138,167,-131,-132,-133,-134,-74,-73,-1,-72,]),'DIVIDE':([98,99,100,101,102,103,135,137,138,140,141,156,170,171,192,],[-67,-71,-135,-137,-136,-138,168,-131,-132,-133,-134,-74,-73,-1,-72,]),'DOT':([101,],[139,]),'THEN':([124,157,],[-117,184,]),'ELSE':([229,],[236,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'punto_program':([3,],[4,]),'main':([5,7,8,18,],[6,17,19,25,]),'variables':([5,146,174,],[7,176,176,]),'funciones':([5,7,11,],[8,18,22,]),'funciones_aux':([5,7,11,],[11,11,11,]),'tipo':([5,7,11,21,60,77,79,111,],[12,12,12,29,84,29,84,84,]),'punto_variables_1':([10,],[21,]),'variables_aux':([21,77,],[28,106,]),'punto_id_func':([30,31,],[35,36,]),'main_aux':([32,],[37,]),'estatutos_main_multiple':([32,40,],[38,62,]),'empty':([32,60,79,146,174,],[39,82,82,177,177,]),'estatutos_main':([32,40,195,196,202,210,215,243,244,],[40,40,215,215,215,215,215,215,215,]),'asignacion':([32,40,195,196,202,210,215,243,244,],[41,41,41,41,41,41,41,41,41,]),'llamada':([32,40,195,196,202,210,215,243,244,],[42,42,42,42,42,42,42,42,42,]),'lectura':([32,40,195,196,202,210,215,243,244,],[43,43,43,43,43,43,43,43,43,]),'escritura':([32,40,195,196,202,210,215,243,244,],[44,44,44,44,44,44,44,44,44,]),'decision':([32,40,195,196,202,210,215,243,244,],[45,45,45,45,45,45,45,45,45,]),'repeticion':([32,40,195,196,202,210,215,243,244,],[46,46,46,46,46,46,46,46,46,]),'dec_varaux':([32,34,40,76,86,89,107,136,151,195,196,202,210,215,243,244,],[47,58,47,105,116,119,58,116,116,47,47,47,47,47,47,47,]),'condicional':([32,40,195,196,202,210,215,243,244,],[53,53,53,53,53,53,53,53,53,]),'no_condicional':([32,40,195,196,202,210,215,243,244,],[54,54,54,54,54,54,54,54,54,]),'declaracion_inicial':([34,107,],[57,144,]),'punto_return_value':([35,],[59,]),'punto_asignacion_var':([47,],[69,]),'punto_while':([55,],[75,]),'punto_dec_var_1':([58,],[78,]),'not_params':([60,79,],[80,108,]),'parametros':([60,79,111,],[81,81,147,]),'dec_var_param':([60,79,111,],[83,83,83,]),'lectura_var':([72,199,],[88,218,]),'punto_read_stack':([72,199,],[89,89,]),'escritura_aux':([73,200,201,],[90,219,220,]),'punto_write_stack':([73,200,201,],[91,91,91,]),'exp_or':([74,92,104,185,],[93,123,142,203,]),'t_exp':([74,92,104,185,186,],[94,94,94,94,204,]),'g_exp':([74,92,104,185,186,],[95,95,95,95,95,]),'m_exp':([74,91,92,104,113,162,173,185,186,188,189,223,227,],[96,122,96,96,149,187,194,96,96,206,207,231,233,]),'termino':([74,91,92,104,113,162,173,185,186,188,189,190,191,223,227,],[97,97,97,97,97,97,97,97,97,97,97,208,209,97,97,]),'factor':([74,91,92,104,113,162,173,185,186,188,189,190,191,223,227,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'cte':([74,91,92,104,113,162,173,185,186,188,189,190,191,223,227,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'cte_f':([74,91,92,104,113,162,173,185,186,188,189,190,191,223,227,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'count_params':([81,],[110,]),'punto_igual':([85,],[113,]),'dec_var':([86,136,151,],[115,169,179,]),'punto_pop_or':([94,],[125,]),'pop_and':([95,],[126,]),'relacionales':([96,],[127,]),'punto_mexp_pop':([97,],[134,]),'punto_termino_pop':([98,],[135,]),'factor_push_operand':([100,],[137,]),'factor_int_push':([101,],[138,]),'factor_float_push':([102,],[140,]),'factor_char_push':([103,],[141,]),'punto_for':([105,],[143,]),'punto_push_param':([112,],[148,]),'punto_push_dec_var':([119,],[153,]),'punto_escritura_push':([121,122,],[154,155,]),'punto_if_exp':([124,],[157,]),'t_exp_or_aux':([125,],[158,]),'t_exp_aux':([126,],[160,]),'punto_relacionales':([127,],[162,]),'m_exp_aux':([134,],[163,]),'termino_aux':([135,],[166,]),'not_variables':([146,174,],[175,195,]),'punto_asignacion':([149,],[178,]),'punto_add_read_operand':([153,],[181,]),'punto_add_write_operand':([154,155,],[182,183,]),'punto_push_or':([159,],[185,]),'punto_push_and':([161,],[186,]),'punto_m_exp_push':([164,165,],[188,189,]),'punto_termino_aux':([167,168,],[190,191,]),'punto_validar_exp':([172,],[193,]),'count_vars':([175,176,],[196,197,]),'punto_pop_relacional':([187,],[205,]),'punto_exp_for_inf':([194,],[211,]),'estatutos':([195,196,202,210,215,243,244,],[212,217,221,222,226,245,246,]),'estatutos_main_aux':([195,196,202,210,215,243,244,],[213,213,213,213,213,213,213,]),'retorno':([195,196,202,210,215,243,244,],[214,214,214,214,214,214,214,]),'punto_end_function_return':([224,],[232,]),'end_func':([228,],[234,]),'punto_end_if':([229,247,],[235,249,]),'punto_end_while':([230,],[237,]),'punto_exp_for_sup':([231,],[238,]),'punto_else':([236,],[240,]),'punto_return':([239,],[242,]),'punto_end_for':([248,],[250,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('cte_f -> CTE_I DOT CTE_I','cte_f',3,'p_cte_f','lexer.py',118),
  ('program -> PROGRAM ID punto_program COLON main','program',5,'p_program','lexer.py',130),
  ('program -> PROGRAM ID punto_program COLON variables main','program',6,'p_program','lexer.py',131),
  ('program -> PROGRAM ID punto_program COLON variables funciones main','program',7,'p_program','lexer.py',132),
  ('program -> PROGRAM ID punto_program COLON funciones main','program',6,'p_program','lexer.py',133),
  ('punto_program -> <empty>','punto_program',0,'p_punto_program','lexer.py',138),
  ('main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL','main',6,'p_main','lexer.py',152),
  ('main_aux -> estatutos_main_multiple','main_aux',1,'p_main_aux','lexer.py',158),
  ('main_aux -> empty','main_aux',1,'p_main_aux','lexer.py',159),
  ('variables -> VAR punto_variables_1 SEMICOLON','variables',3,'p_variables','lexer.py',164),
  ('variables -> VAR punto_variables_1 variables_aux SEMICOLON','variables',4,'p_variables','lexer.py',165),
  ('punto_variables_1 -> <empty>','punto_variables_1',0,'p_punto_variables_1','lexer.py',170),
  ('variables_aux -> tipo COLON declaracion_inicial','variables_aux',3,'p_variables_aux','lexer.py',176),
  ('variables_aux -> tipo COLON declaracion_inicial MORE variables_aux','variables_aux',5,'p_variables_aux','lexer.py',177),
  ('tipo -> INT','tipo',1,'p_tipo','lexer.py',182),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lexer.py',183),
  ('tipo -> CHAR','tipo',1,'p_tipo','lexer.py',184),
  ('declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial','declaracion_inicial',4,'p_declaracion_inicial','lexer.py',199),
  ('declaracion_inicial -> dec_varaux punto_dec_var_1','declaracion_inicial',2,'p_declaracion_inicial','lexer.py',200),
  ('punto_dec_var_1 -> <empty>','punto_dec_var_1',0,'p_punto_dec_var_1','lexer.py',205),
  ('dec_varaux -> ID','dec_varaux',1,'p_dec_varaux','lexer.py',215),
  ('dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR','dec_varaux',4,'p_dec_varaux','lexer.py',216),
  ('dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR','dec_varaux',7,'p_dec_varaux','lexer.py',217),
  ('punto_dec_varaux_1 -> <empty>','punto_dec_varaux_1',0,'p_punto_dec_varaux_1','lexer.py',226),
  ('dec_var -> dec_varaux COMMA dec_var','dec_var',3,'p_dec_var','lexer.py',232),
  ('dec_var -> dec_varaux','dec_var',1,'p_dec_var','lexer.py',233),
  ('funciones -> funciones_aux','funciones',1,'p_funciones','lexer.py',238),
  ('funciones -> funciones_aux funciones','funciones',2,'p_funciones','lexer.py',239),
  ('funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return','funciones_aux',13,'p_funciones_aux','lexer.py',246),
  ('funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func','funciones_aux',13,'p_funciones_aux','lexer.py',247),
  ('punto_return_value -> <empty>','punto_return_value',0,'p_punto_return_value','lexer.py',251),
  ('not_variables -> variables count_vars','not_variables',2,'p_not_variables','lexer.py',259),
  ('not_variables -> empty','not_variables',1,'p_not_variables','lexer.py',260),
  ('not_params -> parametros count_params','not_params',2,'p_not_params','lexer.py',265),
  ('not_params -> empty','not_params',1,'p_not_params','lexer.py',266),
  ('punto_end_function_return -> <empty>','punto_end_function_return',0,'p_punto_end_function_return','lexer.py',271),
  ('punto_id_func -> <empty>','punto_id_func',0,'p_punto_id_func','lexer.py',286),
  ('parametros -> dec_var_param COMMA parametros','parametros',3,'p_parametros','lexer.py',303),
  ('parametros -> dec_var_param','parametros',1,'p_parametros','lexer.py',304),
  ('dec_var_param -> tipo ID punto_push_param','dec_var_param',3,'p_dec_var_param','lexer.py',310),
  ('punto_push_param -> <empty>','punto_push_param',0,'p_punto_push_param','lexer.py',315),
  ('count_params -> <empty>','count_params',0,'p_count_params','lexer.py',335),
  ('count_vars -> <empty>','count_vars',0,'p_count_vars','lexer.py',342),
  ('end_func -> <empty>','end_func',0,'p_end_func','lexer.py',350),
  ('exp_or -> t_exp punto_pop_or t_exp_or_aux','exp_or',3,'p_exp_or','lexer.py',363),
  ('exp_or -> t_exp punto_pop_or','exp_or',2,'p_exp_or','lexer.py',364),
  ('punto_pop_or -> <empty>','punto_pop_or',0,'p_punto_pop_or','lexer.py',368),
  ('t_exp_or_aux -> OR punto_push_or exp_or','t_exp_or_aux',3,'p_t_exp_or_aux','lexer.py',411),
  ('punto_push_or -> <empty>','punto_push_or',0,'p_punto_push_or','lexer.py',416),
  ('t_exp -> g_exp pop_and t_exp_aux','t_exp',3,'p_t_exp','lexer.py',424),
  ('t_exp -> g_exp pop_and','t_exp',2,'p_t_exp','lexer.py',425),
  ('pop_and -> <empty>','pop_and',0,'p_pop_and','lexer.py',430),
  ('t_exp_aux -> AND punto_push_and t_exp','t_exp_aux',3,'p_t_exp_aux','lexer.py',473),
  ('punto_push_and -> <empty>','punto_push_and',0,'p_punto_push_and','lexer.py',478),
  ('g_exp -> m_exp','g_exp',1,'p_g_exp','lexer.py',485),
  ('g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional','g_exp',5,'p_g_exp','lexer.py',486),
  ('punto_relacionales -> <empty>','punto_relacionales',0,'p_punto_relacionales','lexer.py',490),
  ('punto_pop_relacional -> <empty>','punto_pop_relacional',0,'p_punto_pop_relacional','lexer.py',499),
  ('m_exp -> termino punto_mexp_pop','m_exp',2,'p_m_exp','lexer.py',542),
  ('m_exp -> termino punto_mexp_pop m_exp_aux','m_exp',3,'p_m_exp','lexer.py',543),
  ('punto_mexp_pop -> <empty>','punto_mexp_pop',0,'p_punto_mexp_pop','lexer.py',550),
  ('m_exp_aux -> PLUS punto_m_exp_push m_exp','m_exp_aux',3,'p_m_exp_aux','lexer.py',596),
  ('m_exp_aux -> MINUS punto_m_exp_push m_exp','m_exp_aux',3,'p_m_exp_aux','lexer.py',597),
  ('punto_m_exp_push -> <empty>','punto_m_exp_push',0,'p_punto_m_exp_push','lexer.py',602),
  ('termino -> factor punto_termino_pop','termino',2,'p_termino','lexer.py',612),
  ('termino -> factor punto_termino_pop termino_aux','termino',3,'p_termino','lexer.py',613),
  ('punto_termino_pop -> <empty>','punto_termino_pop',0,'p_punto_termino_pop','lexer.py',619),
  ('termino_aux -> MULTIPLY punto_termino_aux termino','termino_aux',3,'p_termino_aux','lexer.py',664),
  ('termino_aux -> DIVIDE punto_termino_aux termino','termino_aux',3,'p_termino_aux','lexer.py',665),
  ('punto_termino_aux -> <empty>','punto_termino_aux',0,'p_punto_termino_aux','lexer.py',670),
  ('factor -> cte','factor',1,'p_factor','lexer.py',679),
  ('factor -> ID LEFT_PAR dec_var RIGHT_PAR','factor',4,'p_factor','lexer.py',680),
  ('factor -> ID LEFT_PAR RIGHT_PAR','factor',3,'p_factor','lexer.py',681),
  ('factor -> LEFT_PAR exp_or RIGHT_PAR','factor',3,'p_factor','lexer.py',682),
  ('relacionales -> LESS_THAN','relacionales',1,'p_relacionales','lexer.py',689),
  ('relacionales -> GREATER_THAN','relacionales',1,'p_relacionales','lexer.py',690),
  ('relacionales -> DIFFERENT','relacionales',1,'p_relacionales','lexer.py',691),
  ('relacionales -> EQUAL','relacionales',1,'p_relacionales','lexer.py',692),
  ('relacionales -> GREATER_EQUAL','relacionales',1,'p_relacionales','lexer.py',693),
  ('relacionales -> LESS_EQUAL','relacionales',1,'p_relacionales','lexer.py',694),
  ('estatutos -> estatutos_main_aux','estatutos',1,'p_estatutos','lexer.py',701),
  ('estatutos -> retorno SEMICOLON','estatutos',2,'p_estatutos','lexer.py',702),
  ('estatutos_main -> asignacion SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',708),
  ('estatutos_main -> llamada SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',709),
  ('estatutos_main -> lectura SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',710),
  ('estatutos_main -> escritura SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',711),
  ('estatutos_main -> decision SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',712),
  ('estatutos_main -> repeticion SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',713),
  ('estatutos_main_multiple -> estatutos_main estatutos_main_multiple','estatutos_main_multiple',2,'p_estatutos_main_multiple','lexer.py',718),
  ('estatutos_main_multiple -> estatutos_main','estatutos_main_multiple',1,'p_estatutos_main_multiple','lexer.py',719),
  ('estatutos_main_aux -> estatutos_main estatutos','estatutos_main_aux',2,'p_estatutos_main_aux','lexer.py',724),
  ('estatutos_main_aux -> estatutos_main','estatutos_main_aux',1,'p_estatutos_main_aux','lexer.py',725),
  ('asignacion -> dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion','asignacion',6,'p_asignacion','lexer.py',731),
  ('punto_asignacion_var -> <empty>','punto_asignacion_var',0,'p_punto_asignacion_var','lexer.py',737),
  ('punto_igual -> <empty>','punto_igual',0,'p_punto_igual','lexer.py',752),
  ('punto_asignacion -> <empty>','punto_asignacion',0,'p_punto_asignacion','lexer.py',759),
  ('llamada -> VD ID LEFT_PAR RIGHT_PAR','llamada',4,'p_llamada','lexer.py',786),
  ('llamada -> VD ID LEFT_PAR dec_var RIGHT_PAR','llamada',5,'p_llamada','lexer.py',787),
  ('retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR punto_return','retorno',5,'p_retorno','lexer.py',792),
  ('punto_return -> <empty>','punto_return',0,'p_punto_return','lexer.py',796),
  ('punto_read_stack -> <empty>','punto_read_stack',0,'p_punto_read_stack','lexer.py',808),
  ('lectura -> READ LEFT_PAR lectura_var RIGHT_PAR','lectura',4,'p_lectura','lexer.py',817),
  ('lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var','lectura_var',6,'p_lectura_var','lexer.py',822),
  ('lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand','lectura_var',4,'p_lectura_var','lexer.py',823),
  ('punto_push_dec_var -> <empty>','punto_push_dec_var',0,'p_punto_push_dec_var','lexer.py',829),
  ('punto_add_read_operand -> <empty>','punto_add_read_operand',0,'p_punto_add_read_operand','lexer.py',846),
  ('escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR','escritura',4,'p_escritura','lexer.py',862),
  ('escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand','escritura_aux',4,'p_escritura_aux','lexer.py',867),
  ('escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand','escritura_aux',4,'p_escritura_aux','lexer.py',868),
  ('escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux','escritura_aux',6,'p_escritura_aux','lexer.py',869),
  ('escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux','escritura_aux',6,'p_escritura_aux','lexer.py',870),
  ('punto_escritura_push -> <empty>','punto_escritura_push',0,'p_punto_escritura_push','lexer.py',874),
  ('punto_write_stack -> <empty>','punto_write_stack',0,'p_punto_write_stack','lexer.py',887),
  ('punto_add_write_operand -> <empty>','punto_add_write_operand',0,'p_punto_add_write_operand','lexer.py',894),
  ('decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if','decision',10,'p_decision','lexer.py',906),
  ('decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if','decision',15,'p_decision','lexer.py',907),
  ('punto_if_exp -> <empty>','punto_if_exp',0,'p_punto_if_exp','lexer.py',911),
  ('punto_else -> <empty>','punto_else',0,'p_punto_else','lexer.py',928),
  ('punto_end_if -> <empty>','punto_end_if',0,'p_punto_end_if','lexer.py',941),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','lexer.py',949),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','lexer.py',950),
  ('no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for','no_condicional',15,'p_no_condicional','lexer.py',955),
  ('punto_for -> <empty>','punto_for',0,'p_punto_for','lexer.py',960),
  ('punto_exp_for_inf -> <empty>','punto_exp_for_inf',0,'p_punto_exp_for_inf','lexer.py',975),
  ('punto_exp_for_sup -> <empty>','punto_exp_for_sup',0,'p_punto_exp_for_sup','lexer.py',995),
  ('punto_end_for -> <empty>','punto_end_for',0,'p_punto_end_for','lexer.py',1020),
  ('condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while','condicional',10,'p_condicional','lexer.py',1040),
  ('punto_while -> <empty>','punto_while',0,'p_punto_while','lexer.py',1045),
  ('punto_validar_exp -> <empty>','punto_validar_exp',0,'p_punto_validar_exp','lexer.py',1053),
  ('punto_end_while -> <empty>','punto_end_while',0,'p_punto_end_while','lexer.py',1070),
  ('cte -> ID factor_push_operand','cte',2,'p_cte','lexer.py',1086),
  ('cte -> CTE_I factor_int_push','cte',2,'p_cte','lexer.py',1087),
  ('cte -> cte_f factor_float_push','cte',2,'p_cte','lexer.py',1088),
  ('cte -> CTE_CHAR factor_char_push','cte',2,'p_cte','lexer.py',1089),
  ('factor_push_operand -> <empty>','factor_push_operand',0,'p_factor_push_operand','lexer.py',1095),
  ('factor_float_push -> <empty>','factor_float_push',0,'p_factor_float_push','lexer.py',1114),
  ('factor_int_push -> <empty>','factor_int_push',0,'p_factor_int_push','lexer.py',1127),
  ('factor_char_push -> <empty>','factor_char_push',0,'p_factor_char_push','lexer.py',1142),
  ('empty -> <empty>','empty',0,'p_empty','lexer.py',1161),
]
