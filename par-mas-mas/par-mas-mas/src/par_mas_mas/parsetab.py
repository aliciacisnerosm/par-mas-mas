
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND CHAR COLON COMMA CTE_CHAR CTE_I DIFFERENT DIVIDE DO DOT ELSE EQUAL EQUALS FLOAT FOR FUNC GREATER_EQUAL GREATER_THAN ID IF INT LEFT_BR LEFT_CURL LEFT_PAR LESS_EQUAL LESS_THAN MAIN MINUS MORE MULTIPLY OR PLUS PROGRAM READ RETURN RIGHT_BR RIGHT_CURL RIGHT_PAR SEMICOLON STR THEN TO VAR VD VOID WHILE WRITE\n\tcte_f : CTE_I DOT CTE_I\n\t\n\t\n\tprogram : PROGRAM ID punto_program COLON main\n\t\t\t\t\t| PROGRAM ID punto_program COLON variables main\n\t\t\t\t\t| PROGRAM ID punto_program COLON variables funciones main\n\t\t\t\t\t| PROGRAM ID punto_program COLON funciones main  \n\t\n\tpunto_program : \n\t\n\tmain : MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL\n\n\t\n\tmain_aux : estatutos_main_multiple\n\t\t\t\t\t | empty\n\t\n\tvariables : VAR punto_variables_1 SEMICOLON\n\t\t\t\t\t\t| VAR punto_variables_1 variables_aux SEMICOLON\n\t\n\tpunto_variables_1 :\n\t\n\tvariables_aux : tipo COLON declaracion_inicial\n\t\t\t\t\t\t\t\t| tipo COLON declaracion_inicial MORE variables_aux\n\t\n\ttipo : INT\n\t\t\t| FLOAT\n\t\t\t| CHAR\n\t\n\tdeclaracion_inicial : dec_varaux punto_dec_var_1 COMMA declaracion_inicial\n\t\t\t\t\t\t\t\t\t\t\t| dec_varaux punto_dec_var_1\n\t\n\tpunto_dec_var_1 :\n\t\n\tdec_varaux : ID \n\t\t\t\t\t\t\t| ID LEFT_BR CTE_I RIGHT_BR \n\t\t\t\t\t\t\t| ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR\n\t\n\tpunto_dec_varaux_1 :\n\n\t\n\tdec_var : dec_varaux COMMA dec_var\n\t\t\t\t\t| dec_varaux\n\t\n\tfunciones : funciones_aux\n\t\t\t\t\t\t| funciones_aux funciones\n\t\n\t\n\t\tfunciones_aux : tipo FUNC ID LEFT_PAR parametros RIGHT_PAR LEFT_CURL variables estatutos RIGHT_CURL\n\t\t\t\t\t\t | tipo FUNC ID LEFT_PAR RIGHT_PAR LEFT_CURL variables estatutos RIGHT_CURL\n\t\t\t\t\t\t | VOID FUNC ID punto_id_func LEFT_PAR RIGHT_PAR count_params LEFT_CURL variables count_vars  estatutos RIGHT_CURL end_func\n\t\t\t\t\t\t | VOID FUNC ID punto_id_func LEFT_PAR parametros RIGHT_PAR count_params LEFT_CURL variables count_vars  estatutos RIGHT_CURL end_func\n\t\n\tpunto_id_func :\n\t\n\tparametros : dec_var_param COMMA parametros\n\t\t\t\t\t\t\t| dec_var_param\n\n\t\n\tdec_var_param : tipo ID punto_push_param\n\t\n\tpunto_push_param :\n\t\n\tcount_params :\n\t\n\tcount_vars :\n\t\n\tend_func :\n\t\n\t\texp_or : t_exp punto_pop_or t_exp_or_aux\n\t\t\t\t\t| t_exp punto_pop_or\n\t\n\t\tpunto_pop_or :\n\t\n\t\n\tt_exp_or_aux : OR punto_push_or exp_or\n\t\n\tpunto_push_or :\n\t\n\tt_exp : g_exp pop_and t_exp_aux\n\t\t\t\t| g_exp pop_and\n\n\t\n\tpop_and :\n\t\n\t\n\tt_exp_aux : AND punto_push_and t_exp\n\n\t\n\tpunto_push_and :\n\t\n\t\tg_exp : m_exp\n\t\t\t\t\t| m_exp relacionales punto_relacionales m_exp punto_pop_relacional\n\t\n\tpunto_relacionales :\n\t\n\tpunto_pop_relacional :\n\t\n\tm_exp : termino punto_mexp_pop\n\t\t\t\t| termino punto_mexp_pop m_exp_aux\n\t\n\tpunto_mexp_pop :\n\t\n\tm_exp_aux : PLUS punto_m_exp_push m_exp\n\t\t\t\t\t\t| MINUS punto_m_exp_push m_exp\n\n\t\n\tpunto_m_exp_push :\n\t\n\ttermino : factor punto_termino_pop\n\t\t\t\t\t| factor punto_termino_pop termino_aux\n\t\n\tpunto_termino_pop :\n\t\n  termino_aux : MULTIPLY punto_termino_aux termino\n              | DIVIDE punto_termino_aux termino\n  \n\tpunto_termino_aux :\n\t\n\tfactor : cte\n\t\t\t\t\t| ID LEFT_PAR dec_var RIGHT_PAR\n\t\t\t\t\t| ID LEFT_PAR RIGHT_PAR\n\t\t\t\t\t| LEFT_PAR exp_or RIGHT_PAR\n\t\n\trelacionales : LESS_THAN\n\t\t\t\t\t\t\t\t\t| GREATER_THAN\n\t\t\t\t\t\t\t\t\t| DIFFERENT\n\t\t\t\t\t\t\t\t\t| EQUAL\n\t\t\t\t\t\t\t\t\t| GREATER_EQUAL\n\t\t\t\t\t\t\t\t\t| LESS_EQUAL\n\t\n\testatutos : estatutos_main_aux \n\t\t\t\t\t\t| retorno SEMICOLON \n\n\t\n\testatutos_main : asignacion SEMICOLON\n\t\t\t\t\t\t\t\t\t| llamada SEMICOLON\n\t\t\t\t\t\t\t\t\t| lectura SEMICOLON\n\t\t\t\t\t\t\t\t\t| escritura SEMICOLON\n\t\t\t\t\t\t\t\t\t| decision SEMICOLON\n\t\t\t\t\t\t\t\t\t| repeticion SEMICOLON\n\t\n\testatutos_main_multiple : estatutos_main estatutos_main_multiple\n\t\t\t\t\t\t\t\t\t\t| estatutos_main\n\t\n\testatutos_main_aux : estatutos_main estatutos\n\t\t\t\t\t\t\t\t\t\t\t| estatutos_main\n\n\t\n\tasignacion : dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion\n\n\t\n\tpunto_asignacion_var : \n\t\n\tpunto_igual :\n\t\n\tpunto_asignacion : \n\n\t\n\t\tllamada : VD ID LEFT_PAR RIGHT_PAR\n\t\t\t\t\t\t| VD ID LEFT_PAR dec_var RIGHT_PAR\n\t\n\t\tretorno : RETURN LEFT_PAR m_exp RIGHT_PAR\n\t\n\tpunto_read_stack : \n\t\n\tlectura : READ LEFT_PAR lectura_var RIGHT_PAR\n\t\n\tlectura_var : punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var\n\t\t\t\t\t| punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand\n\t\n\tpunto_push_dec_var :\n\t\n\t\tpunto_add_read_operand : \n\t\n\tescritura : WRITE LEFT_PAR escritura_aux RIGHT_PAR\n\t\n\tescritura_aux : punto_write_stack STR punto_escritura_push punto_add_write_operand\n\t\t\t\t\t\t\t\t| punto_write_stack m_exp punto_escritura_push punto_add_write_operand\n\t\t\t\t\t\t\t\t| punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux \n\t\t\t\t\t\t\t\t| punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux\n\t\n\tpunto_escritura_push : \n\n\t\n\tpunto_write_stack :\n\t\n\tpunto_add_write_operand : \n\t\n\tdecision : IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if \n\t\t\t\t\t\t| IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if\n\t\n\tpunto_if_exp :\n\t\n\tpunto_else :\n\t\n\tpunto_end_if :\n\t\n\trepeticion : condicional\n\t\t\t\t\t\t\t| no_condicional\n\t\n\tno_condicional : FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for\n\t\n\tpunto_for :\n\t\n\tpunto_exp_for_inf :\n\t\n\tpunto_exp_for_sup :\n\t\n\tpunto_end_for :\n\t\n\tcondicional : WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while\n\t\n\tpunto_while :\n\t\n\tpunto_validar_exp :\n\t\n\tpunto_end_while :\n\t\n\tcte : ID factor_push_operand\n\t\t\t| CTE_I factor_int_push\n\t\t\t| cte_f factor_float_push\n\t\t\t| CTE_CHAR factor_char_push\n\t\n\tfactor_push_operand :\n\t\n\tfactor_float_push :\n\t\n\tfactor_int_push :\n\t\n\tfactor_char_push :\n\t\n\tempty : \n\t'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,17,19,25,64,],[0,-2,-3,-5,-4,-7,]),'ID':([2,14,15,16,23,24,27,32,33,34,40,48,59,66,67,68,69,70,71,75,76,77,79,88,89,92,94,95,107,110,113,117,131,132,133,134,135,136,137,140,149,153,159,167,169,170,172,173,175,176,181,186,187,196,197,199,200,201,202,208,209,211,212,213,214,222,226,232,247,248,],[3,-15,-16,-17,30,31,-10,49,-11,49,49,73,82,-79,-80,-81,-82,-83,-84,-96,-108,103,49,-91,49,49,103,103,103,49,49,103,-53,-71,-72,-73,-74,-75,-76,49,49,49,49,-45,-50,103,-60,-60,-66,-66,103,103,-39,103,103,103,103,103,103,49,-39,-96,-108,-108,49,49,49,103,49,49,]),'COLON':([3,4,14,15,16,29,],[-6,5,-15,-16,-17,34,]),'MAIN':([5,7,8,11,18,22,27,33,183,206,233,238,239,244,],[9,9,9,-27,9,-28,-10,-11,-30,-29,-40,-31,-40,-32,]),'VAR':([5,84,112,155,188,],[10,10,10,10,10,]),'VOID':([5,7,11,27,33,183,206,233,238,239,244,],[13,13,13,-10,-11,-30,-29,-40,-31,-40,-32,]),'INT':([5,7,10,11,21,27,33,35,63,80,85,183,206,233,238,239,244,],[14,14,-12,14,14,-10,-11,14,14,14,14,-30,-29,-40,-31,-40,-32,]),'FLOAT':([5,7,10,11,21,27,33,35,63,80,85,183,206,233,238,239,244,],[15,15,-12,15,15,-10,-11,15,15,15,15,-30,-29,-40,-31,-40,-32,]),'CHAR':([5,7,10,11,21,27,33,35,63,80,85,183,206,233,238,239,244,],[16,16,-12,16,16,-10,-11,16,16,16,16,-30,-29,-40,-31,-40,-32,]),'LEFT_PAR':([9,30,31,36,50,51,52,55,56,73,76,77,78,88,94,95,103,107,117,131,132,133,134,135,136,137,154,167,169,170,172,173,175,176,181,186,196,197,199,200,201,202,212,213,232,],[20,35,-33,63,75,76,77,-123,79,89,-108,95,107,-91,95,95,140,95,95,-53,-71,-72,-73,-74,-75,-76,186,-45,-50,95,-60,-60,-66,-66,95,95,95,95,95,95,95,95,-108,-108,95,]),'SEMICOLON':([10,21,28,41,42,43,44,45,46,49,53,54,57,58,81,100,101,102,103,104,105,106,109,118,121,122,124,138,139,141,142,144,145,148,152,157,158,164,171,174,178,179,189,203,210,218,219,220,221,224,235,236,240,242,251,252,253,254,],[-12,27,33,66,67,68,69,70,71,-21,-115,-116,-13,-20,-19,-57,-63,-67,-130,-132,-131,-133,-14,-93,-22,-97,-102,-55,-61,-126,-127,-128,-129,-18,184,-92,-94,-70,-56,-62,-69,-1,-89,-68,-23,-58,-59,-64,-65,-95,-114,-125,-110,-122,-114,-121,-111,-117,]),'FUNC':([12,13,14,15,16,],[23,24,-15,-16,-17,]),'RIGHT_PAR':([20,35,49,60,62,63,82,87,89,91,93,96,97,98,99,100,101,102,103,104,105,106,111,114,119,120,121,123,125,126,127,129,130,138,139,140,141,142,144,145,146,161,162,163,164,166,168,171,174,177,178,179,190,192,193,194,198,203,207,210,215,216,217,218,219,220,221,227,228,229,237,243,],[26,61,-21,83,-35,86,-37,116,118,122,124,128,-43,-48,-51,-57,-63,-67,-130,-132,-131,-133,-36,-34,158,-26,-22,-100,-107,-107,164,-42,-47,-55,-61,178,-126,-127,-128,-129,180,-101,-109,-109,-70,-41,-46,-56,-62,203,-69,-1,-25,-99,-103,-104,-54,-68,224,-23,-44,-49,-52,-58,-59,-64,-65,-98,-105,-106,-120,246,]),'LEFT_CURL':([26,61,83,86,115,116,156,180,195,204,241,245,246,],[32,84,112,-38,155,-38,188,-124,214,222,-113,247,248,]),'RETURN':([27,33,66,67,68,69,70,71,113,149,153,187,208,209,214,222,226,247,248,],[-10,-11,-79,-80,-81,-82,-83,-84,154,154,154,-39,154,-39,154,154,154,154,154,]),'VD':([27,32,33,40,66,67,68,69,70,71,113,149,153,187,208,209,214,222,226,247,248,],[-10,48,-11,48,-79,-80,-81,-82,-83,-84,48,48,48,-39,48,-39,48,48,48,48,48,]),'READ':([27,32,33,40,66,67,68,69,70,71,113,149,153,187,208,209,214,222,226,247,248,],[-10,50,-11,50,-79,-80,-81,-82,-83,-84,50,50,50,-39,50,-39,50,50,50,50,50,]),'WRITE':([27,32,33,40,66,67,68,69,70,71,113,149,153,187,208,209,214,222,226,247,248,],[-10,51,-11,51,-79,-80,-81,-82,-83,-84,51,51,51,-39,51,-39,51,51,51,51,51,]),'IF':([27,32,33,40,66,67,68,69,70,71,113,149,153,187,208,209,214,222,226,247,248,],[-10,52,-11,52,-79,-80,-81,-82,-83,-84,52,52,52,-39,52,-39,52,52,52,52,52,]),'WHILE':([27,32,33,40,66,67,68,69,70,71,113,149,153,187,208,209,214,222,226,247,248,],[-10,55,-11,55,-79,-80,-81,-82,-83,-84,55,55,55,-39,55,-39,55,55,55,55,55,]),'FOR':([27,32,33,40,66,67,68,69,70,71,113,149,153,187,208,209,214,222,226,247,248,],[-10,56,-11,56,-79,-80,-81,-82,-83,-84,56,56,56,-39,56,-39,56,56,56,56,56,]),'RIGHT_CURL':([32,37,38,39,40,65,66,67,68,69,70,71,150,151,153,182,184,185,225,230,231,234,249,250,],[-134,64,-8,-9,-86,-85,-79,-80,-81,-82,-83,-84,183,-77,-88,206,-78,-87,233,235,236,239,251,252,]),'EQUALS':([47,49,72,108,121,147,210,],[-90,-21,88,-118,-22,181,-23,]),'COMMA':([49,58,62,81,82,100,101,102,103,104,105,106,111,120,121,123,125,126,138,139,141,142,144,145,161,162,163,164,171,174,178,179,192,193,194,203,210,218,219,220,221,],[-21,-20,85,110,-37,-57,-63,-67,-130,-132,-131,-133,-36,159,-22,-100,-107,-107,-55,-61,-126,-127,-128,-129,-101,-109,-109,-70,-56,-62,-69,-1,211,212,213,-68,-23,-58,-59,-64,-65,]),'MORE':([49,57,58,81,121,148,210,],[-21,80,-20,-19,-22,-18,-23,]),'LEFT_BR':([49,121,],[74,160,]),'CTE_I':([74,76,77,88,94,95,107,117,131,132,133,134,135,136,137,143,160,167,169,170,172,173,175,176,181,186,196,197,199,200,201,202,212,213,232,],[90,-108,104,-91,104,104,104,104,-53,-71,-72,-73,-74,-75,-76,179,191,-45,-50,104,-60,-60,-66,-66,104,104,104,104,104,104,104,104,-108,-108,104,]),'STR':([76,94,212,213,],[-108,125,-108,-108,]),'CTE_CHAR':([76,77,88,94,95,107,117,131,132,133,134,135,136,137,167,169,170,172,173,175,176,181,186,196,197,199,200,201,202,212,213,232,],[-108,106,-91,106,106,106,106,-53,-71,-72,-73,-74,-75,-76,-45,-50,106,-60,-60,-66,-66,106,106,106,106,106,106,106,106,-108,-108,106,]),'RIGHT_BR':([90,191,],[121,210,]),'OR':([97,98,99,100,101,102,103,104,105,106,129,130,138,139,141,142,144,145,164,168,171,174,178,179,198,203,216,217,218,219,220,221,],[-43,-48,-51,-57,-63,-67,-130,-132,-131,-133,167,-47,-55,-61,-126,-127,-128,-129,-70,-46,-56,-62,-69,-1,-54,-68,-49,-52,-58,-59,-64,-65,]),'AND':([98,99,100,101,102,103,104,105,106,130,138,139,141,142,144,145,164,171,174,178,179,198,203,217,218,219,220,221,],[-48,-51,-57,-63,-67,-130,-132,-131,-133,169,-55,-61,-126,-127,-128,-129,-70,-56,-62,-69,-1,-54,-68,-52,-58,-59,-64,-65,]),'LESS_THAN':([99,100,101,102,103,104,105,106,138,139,141,142,144,145,164,171,174,178,179,203,218,219,220,221,],[132,-57,-63,-67,-130,-132,-131,-133,-55,-61,-126,-127,-128,-129,-70,-56,-62,-69,-1,-68,-58,-59,-64,-65,]),'GREATER_THAN':([99,100,101,102,103,104,105,106,138,139,141,142,144,145,164,171,174,178,179,203,218,219,220,221,],[133,-57,-63,-67,-130,-132,-131,-133,-55,-61,-126,-127,-128,-129,-70,-56,-62,-69,-1,-68,-58,-59,-64,-65,]),'DIFFERENT':([99,100,101,102,103,104,105,106,138,139,141,142,144,145,164,171,174,178,179,203,218,219,220,221,],[134,-57,-63,-67,-130,-132,-131,-133,-55,-61,-126,-127,-128,-129,-70,-56,-62,-69,-1,-68,-58,-59,-64,-65,]),'EQUAL':([99,100,101,102,103,104,105,106,138,139,141,142,144,145,164,171,174,178,179,203,218,219,220,221,],[135,-57,-63,-67,-130,-132,-131,-133,-55,-61,-126,-127,-128,-129,-70,-56,-62,-69,-1,-68,-58,-59,-64,-65,]),'GREATER_EQUAL':([99,100,101,102,103,104,105,106,138,139,141,142,144,145,164,171,174,178,179,203,218,219,220,221,],[136,-57,-63,-67,-130,-132,-131,-133,-55,-61,-126,-127,-128,-129,-70,-56,-62,-69,-1,-68,-58,-59,-64,-65,]),'LESS_EQUAL':([99,100,101,102,103,104,105,106,138,139,141,142,144,145,164,171,174,178,179,203,218,219,220,221,],[137,-57,-63,-67,-130,-132,-131,-133,-55,-61,-126,-127,-128,-129,-70,-56,-62,-69,-1,-68,-58,-59,-64,-65,]),'PLUS':([100,101,102,103,104,105,106,138,139,141,142,144,145,164,174,178,179,203,220,221,],[-57,-63,-67,-130,-132,-131,-133,172,-61,-126,-127,-128,-129,-70,-62,-69,-1,-68,-64,-65,]),'MINUS':([100,101,102,103,104,105,106,138,139,141,142,144,145,164,174,178,179,203,220,221,],[-57,-63,-67,-130,-132,-131,-133,173,-61,-126,-127,-128,-129,-70,-62,-69,-1,-68,-64,-65,]),'TO':([100,101,102,103,104,105,106,138,139,141,142,144,145,164,171,174,178,179,203,205,218,219,220,221,223,],[-57,-63,-67,-130,-132,-131,-133,-55,-61,-126,-127,-128,-129,-70,-56,-62,-69,-1,-68,-119,-58,-59,-64,-65,232,]),'MULTIPLY':([101,102,103,104,105,106,139,141,142,144,145,164,178,179,203,],[-63,-67,-130,-132,-131,-133,175,-126,-127,-128,-129,-70,-69,-1,-68,]),'DIVIDE':([101,102,103,104,105,106,139,141,142,144,145,164,178,179,203,],[-63,-67,-130,-132,-131,-133,176,-126,-127,-128,-129,-70,-69,-1,-68,]),'DOT':([104,],[143,]),'THEN':([128,165,],[-112,195,]),'ELSE':([235,],[241,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'punto_program':([3,],[4,]),'main':([5,7,8,18,],[6,17,19,25,]),'variables':([5,84,112,155,188,],[7,113,149,187,209,]),'funciones':([5,7,11,],[8,18,22,]),'funciones_aux':([5,7,11,],[11,11,11,]),'tipo':([5,7,11,21,35,63,80,85,],[12,12,12,29,59,59,29,59,]),'punto_variables_1':([10,],[21,]),'variables_aux':([21,80,],[28,109,]),'punto_id_func':([31,],[36,]),'main_aux':([32,],[37,]),'estatutos_main_multiple':([32,40,],[38,65,]),'empty':([32,],[39,]),'estatutos_main':([32,40,113,149,153,208,214,222,226,247,248,],[40,40,153,153,153,153,153,153,153,153,153,]),'asignacion':([32,40,113,149,153,208,214,222,226,247,248,],[41,41,41,41,41,41,41,41,41,41,41,]),'llamada':([32,40,113,149,153,208,214,222,226,247,248,],[42,42,42,42,42,42,42,42,42,42,42,]),'lectura':([32,40,113,149,153,208,214,222,226,247,248,],[43,43,43,43,43,43,43,43,43,43,43,]),'escritura':([32,40,113,149,153,208,214,222,226,247,248,],[44,44,44,44,44,44,44,44,44,44,44,]),'decision':([32,40,113,149,153,208,214,222,226,247,248,],[45,45,45,45,45,45,45,45,45,45,45,]),'repeticion':([32,40,113,149,153,208,214,222,226,247,248,],[46,46,46,46,46,46,46,46,46,46,46,]),'dec_varaux':([32,34,40,79,89,92,110,113,140,149,153,159,208,214,222,226,247,248,],[47,58,47,108,120,123,58,47,120,47,47,120,47,47,47,47,47,47,]),'condicional':([32,40,113,149,153,208,214,222,226,247,248,],[53,53,53,53,53,53,53,53,53,53,53,]),'no_condicional':([32,40,113,149,153,208,214,222,226,247,248,],[54,54,54,54,54,54,54,54,54,54,54,]),'declaracion_inicial':([34,110,],[57,148,]),'parametros':([35,63,85,],[60,87,114,]),'dec_var_param':([35,63,85,],[62,62,62,]),'punto_asignacion_var':([47,],[72,]),'punto_while':([55,],[78,]),'punto_dec_var_1':([58,],[81,]),'lectura_var':([75,211,],[91,227,]),'punto_read_stack':([75,211,],[92,92,]),'escritura_aux':([76,212,213,],[93,228,229,]),'punto_write_stack':([76,212,213,],[94,94,94,]),'exp_or':([77,95,107,196,],[96,127,146,215,]),'t_exp':([77,95,107,196,197,],[97,97,97,97,216,]),'g_exp':([77,95,107,196,197,],[98,98,98,98,98,]),'m_exp':([77,94,95,107,117,170,181,186,196,197,199,200,232,],[99,126,99,99,157,198,205,207,99,99,218,219,237,]),'termino':([77,94,95,107,117,170,181,186,196,197,199,200,201,202,232,],[100,100,100,100,100,100,100,100,100,100,100,100,220,221,100,]),'factor':([77,94,95,107,117,170,181,186,196,197,199,200,201,202,232,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'cte':([77,94,95,107,117,170,181,186,196,197,199,200,201,202,232,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'cte_f':([77,94,95,107,117,170,181,186,196,197,199,200,201,202,232,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'punto_push_param':([82,],[111,]),'count_params':([86,116,],[115,156,]),'punto_igual':([88,],[117,]),'dec_var':([89,140,159,],[119,177,190,]),'punto_pop_or':([97,],[129,]),'pop_and':([98,],[130,]),'relacionales':([99,],[131,]),'punto_mexp_pop':([100,],[138,]),'punto_termino_pop':([101,],[139,]),'factor_push_operand':([103,],[141,]),'factor_int_push':([104,],[142,]),'factor_float_push':([105,],[144,]),'factor_char_push':([106,],[145,]),'punto_for':([108,],[147,]),'estatutos':([113,149,153,208,214,222,226,247,248,],[150,182,185,225,230,231,234,249,250,]),'estatutos_main_aux':([113,149,153,208,214,222,226,247,248,],[151,151,151,151,151,151,151,151,151,]),'retorno':([113,149,153,208,214,222,226,247,248,],[152,152,152,152,152,152,152,152,152,]),'punto_push_dec_var':([123,],[161,]),'punto_escritura_push':([125,126,],[162,163,]),'punto_if_exp':([128,],[165,]),'t_exp_or_aux':([129,],[166,]),'t_exp_aux':([130,],[168,]),'punto_relacionales':([131,],[170,]),'m_exp_aux':([138,],[171,]),'termino_aux':([139,],[174,]),'punto_asignacion':([157,],[189,]),'punto_add_read_operand':([161,],[192,]),'punto_add_write_operand':([162,163,],[193,194,]),'punto_push_or':([167,],[196,]),'punto_push_and':([169,],[197,]),'punto_m_exp_push':([172,173,],[199,200,]),'punto_termino_aux':([175,176,],[201,202,]),'punto_validar_exp':([180,],[204,]),'count_vars':([187,209,],[208,226,]),'punto_pop_relacional':([198,],[217,]),'punto_exp_for_inf':([205,],[223,]),'end_func':([233,239,],[238,244,]),'punto_end_if':([235,251,],[240,253,]),'punto_end_while':([236,],[242,]),'punto_exp_for_sup':([237,],[243,]),'punto_else':([241,],[245,]),'punto_end_for':([252,],[254,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('cte_f -> CTE_I DOT CTE_I','cte_f',3,'p_cte_f','lexer.py',118),
  ('program -> PROGRAM ID punto_program COLON main','program',5,'p_program','lexer.py',130),
  ('program -> PROGRAM ID punto_program COLON variables main','program',6,'p_program','lexer.py',131),
  ('program -> PROGRAM ID punto_program COLON variables funciones main','program',7,'p_program','lexer.py',132),
  ('program -> PROGRAM ID punto_program COLON funciones main','program',6,'p_program','lexer.py',133),
  ('punto_program -> <empty>','punto_program',0,'p_punto_program','lexer.py',138),
  ('main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL','main',6,'p_main','lexer.py',152),
  ('main_aux -> estatutos_main_multiple','main_aux',1,'p_main_aux','lexer.py',158),
  ('main_aux -> empty','main_aux',1,'p_main_aux','lexer.py',159),
  ('variables -> VAR punto_variables_1 SEMICOLON','variables',3,'p_variables','lexer.py',164),
  ('variables -> VAR punto_variables_1 variables_aux SEMICOLON','variables',4,'p_variables','lexer.py',165),
  ('punto_variables_1 -> <empty>','punto_variables_1',0,'p_punto_variables_1','lexer.py',170),
  ('variables_aux -> tipo COLON declaracion_inicial','variables_aux',3,'p_variables_aux','lexer.py',176),
  ('variables_aux -> tipo COLON declaracion_inicial MORE variables_aux','variables_aux',5,'p_variables_aux','lexer.py',177),
  ('tipo -> INT','tipo',1,'p_tipo','lexer.py',182),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lexer.py',183),
  ('tipo -> CHAR','tipo',1,'p_tipo','lexer.py',184),
  ('declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial','declaracion_inicial',4,'p_declaracion_inicial','lexer.py',199),
  ('declaracion_inicial -> dec_varaux punto_dec_var_1','declaracion_inicial',2,'p_declaracion_inicial','lexer.py',200),
  ('punto_dec_var_1 -> <empty>','punto_dec_var_1',0,'p_punto_dec_var_1','lexer.py',205),
  ('dec_varaux -> ID','dec_varaux',1,'p_dec_varaux','lexer.py',215),
  ('dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR','dec_varaux',4,'p_dec_varaux','lexer.py',216),
  ('dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR','dec_varaux',7,'p_dec_varaux','lexer.py',217),
  ('punto_dec_varaux_1 -> <empty>','punto_dec_varaux_1',0,'p_punto_dec_varaux_1','lexer.py',226),
  ('dec_var -> dec_varaux COMMA dec_var','dec_var',3,'p_dec_var','lexer.py',232),
  ('dec_var -> dec_varaux','dec_var',1,'p_dec_var','lexer.py',233),
  ('funciones -> funciones_aux','funciones',1,'p_funciones','lexer.py',238),
  ('funciones -> funciones_aux funciones','funciones',2,'p_funciones','lexer.py',239),
  ('funciones_aux -> tipo FUNC ID LEFT_PAR parametros RIGHT_PAR LEFT_CURL variables estatutos RIGHT_CURL','funciones_aux',10,'p_funciones_aux','lexer.py',246),
  ('funciones_aux -> tipo FUNC ID LEFT_PAR RIGHT_PAR LEFT_CURL variables estatutos RIGHT_CURL','funciones_aux',9,'p_funciones_aux','lexer.py',247),
  ('funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR RIGHT_PAR count_params LEFT_CURL variables count_vars estatutos RIGHT_CURL end_func','funciones_aux',13,'p_funciones_aux','lexer.py',248),
  ('funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR parametros RIGHT_PAR count_params LEFT_CURL variables count_vars estatutos RIGHT_CURL end_func','funciones_aux',14,'p_funciones_aux','lexer.py',249),
  ('punto_id_func -> <empty>','punto_id_func',0,'p_punto_id_func','lexer.py',254),
  ('parametros -> dec_var_param COMMA parametros','parametros',3,'p_parametros','lexer.py',271),
  ('parametros -> dec_var_param','parametros',1,'p_parametros','lexer.py',272),
  ('dec_var_param -> tipo ID punto_push_param','dec_var_param',3,'p_dec_var_param','lexer.py',278),
  ('punto_push_param -> <empty>','punto_push_param',0,'p_punto_push_param','lexer.py',282),
  ('count_params -> <empty>','count_params',0,'p_count_params','lexer.py',302),
  ('count_vars -> <empty>','count_vars',0,'p_count_vars','lexer.py',309),
  ('end_func -> <empty>','end_func',0,'p_end_func','lexer.py',317),
  ('exp_or -> t_exp punto_pop_or t_exp_or_aux','exp_or',3,'p_exp_or','lexer.py',328),
  ('exp_or -> t_exp punto_pop_or','exp_or',2,'p_exp_or','lexer.py',329),
  ('punto_pop_or -> <empty>','punto_pop_or',0,'p_punto_pop_or','lexer.py',333),
  ('t_exp_or_aux -> OR punto_push_or exp_or','t_exp_or_aux',3,'p_t_exp_or_aux','lexer.py',376),
  ('punto_push_or -> <empty>','punto_push_or',0,'p_punto_push_or','lexer.py',381),
  ('t_exp -> g_exp pop_and t_exp_aux','t_exp',3,'p_t_exp','lexer.py',389),
  ('t_exp -> g_exp pop_and','t_exp',2,'p_t_exp','lexer.py',390),
  ('pop_and -> <empty>','pop_and',0,'p_pop_and','lexer.py',395),
  ('t_exp_aux -> AND punto_push_and t_exp','t_exp_aux',3,'p_t_exp_aux','lexer.py',438),
  ('punto_push_and -> <empty>','punto_push_and',0,'p_punto_push_and','lexer.py',443),
  ('g_exp -> m_exp','g_exp',1,'p_g_exp','lexer.py',450),
  ('g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional','g_exp',5,'p_g_exp','lexer.py',451),
  ('punto_relacionales -> <empty>','punto_relacionales',0,'p_punto_relacionales','lexer.py',455),
  ('punto_pop_relacional -> <empty>','punto_pop_relacional',0,'p_punto_pop_relacional','lexer.py',464),
  ('m_exp -> termino punto_mexp_pop','m_exp',2,'p_m_exp','lexer.py',507),
  ('m_exp -> termino punto_mexp_pop m_exp_aux','m_exp',3,'p_m_exp','lexer.py',508),
  ('punto_mexp_pop -> <empty>','punto_mexp_pop',0,'p_punto_mexp_pop','lexer.py',515),
  ('m_exp_aux -> PLUS punto_m_exp_push m_exp','m_exp_aux',3,'p_m_exp_aux','lexer.py',561),
  ('m_exp_aux -> MINUS punto_m_exp_push m_exp','m_exp_aux',3,'p_m_exp_aux','lexer.py',562),
  ('punto_m_exp_push -> <empty>','punto_m_exp_push',0,'p_punto_m_exp_push','lexer.py',567),
  ('termino -> factor punto_termino_pop','termino',2,'p_termino','lexer.py',577),
  ('termino -> factor punto_termino_pop termino_aux','termino',3,'p_termino','lexer.py',578),
  ('punto_termino_pop -> <empty>','punto_termino_pop',0,'p_punto_termino_pop','lexer.py',584),
  ('termino_aux -> MULTIPLY punto_termino_aux termino','termino_aux',3,'p_termino_aux','lexer.py',629),
  ('termino_aux -> DIVIDE punto_termino_aux termino','termino_aux',3,'p_termino_aux','lexer.py',630),
  ('punto_termino_aux -> <empty>','punto_termino_aux',0,'p_punto_termino_aux','lexer.py',635),
  ('factor -> cte','factor',1,'p_factor','lexer.py',644),
  ('factor -> ID LEFT_PAR dec_var RIGHT_PAR','factor',4,'p_factor','lexer.py',645),
  ('factor -> ID LEFT_PAR RIGHT_PAR','factor',3,'p_factor','lexer.py',646),
  ('factor -> LEFT_PAR exp_or RIGHT_PAR','factor',3,'p_factor','lexer.py',647),
  ('relacionales -> LESS_THAN','relacionales',1,'p_relacionales','lexer.py',654),
  ('relacionales -> GREATER_THAN','relacionales',1,'p_relacionales','lexer.py',655),
  ('relacionales -> DIFFERENT','relacionales',1,'p_relacionales','lexer.py',656),
  ('relacionales -> EQUAL','relacionales',1,'p_relacionales','lexer.py',657),
  ('relacionales -> GREATER_EQUAL','relacionales',1,'p_relacionales','lexer.py',658),
  ('relacionales -> LESS_EQUAL','relacionales',1,'p_relacionales','lexer.py',659),
  ('estatutos -> estatutos_main_aux','estatutos',1,'p_estatutos','lexer.py',666),
  ('estatutos -> retorno SEMICOLON','estatutos',2,'p_estatutos','lexer.py',667),
  ('estatutos_main -> asignacion SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',673),
  ('estatutos_main -> llamada SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',674),
  ('estatutos_main -> lectura SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',675),
  ('estatutos_main -> escritura SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',676),
  ('estatutos_main -> decision SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',677),
  ('estatutos_main -> repeticion SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',678),
  ('estatutos_main_multiple -> estatutos_main estatutos_main_multiple','estatutos_main_multiple',2,'p_estatutos_main_multiple','lexer.py',683),
  ('estatutos_main_multiple -> estatutos_main','estatutos_main_multiple',1,'p_estatutos_main_multiple','lexer.py',684),
  ('estatutos_main_aux -> estatutos_main estatutos','estatutos_main_aux',2,'p_estatutos_main_aux','lexer.py',689),
  ('estatutos_main_aux -> estatutos_main','estatutos_main_aux',1,'p_estatutos_main_aux','lexer.py',690),
  ('asignacion -> dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion','asignacion',6,'p_asignacion','lexer.py',696),
  ('punto_asignacion_var -> <empty>','punto_asignacion_var',0,'p_punto_asignacion_var','lexer.py',702),
  ('punto_igual -> <empty>','punto_igual',0,'p_punto_igual','lexer.py',717),
  ('punto_asignacion -> <empty>','punto_asignacion',0,'p_punto_asignacion','lexer.py',724),
  ('llamada -> VD ID LEFT_PAR RIGHT_PAR','llamada',4,'p_llamada','lexer.py',751),
  ('llamada -> VD ID LEFT_PAR dec_var RIGHT_PAR','llamada',5,'p_llamada','lexer.py',752),
  ('retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR','retorno',4,'p_retorno','lexer.py',757),
  ('punto_read_stack -> <empty>','punto_read_stack',0,'p_punto_read_stack','lexer.py',762),
  ('lectura -> READ LEFT_PAR lectura_var RIGHT_PAR','lectura',4,'p_lectura','lexer.py',771),
  ('lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var','lectura_var',6,'p_lectura_var','lexer.py',776),
  ('lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand','lectura_var',4,'p_lectura_var','lexer.py',777),
  ('punto_push_dec_var -> <empty>','punto_push_dec_var',0,'p_punto_push_dec_var','lexer.py',783),
  ('punto_add_read_operand -> <empty>','punto_add_read_operand',0,'p_punto_add_read_operand','lexer.py',800),
  ('escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR','escritura',4,'p_escritura','lexer.py',816),
  ('escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand','escritura_aux',4,'p_escritura_aux','lexer.py',821),
  ('escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand','escritura_aux',4,'p_escritura_aux','lexer.py',822),
  ('escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux','escritura_aux',6,'p_escritura_aux','lexer.py',823),
  ('escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux','escritura_aux',6,'p_escritura_aux','lexer.py',824),
  ('punto_escritura_push -> <empty>','punto_escritura_push',0,'p_punto_escritura_push','lexer.py',828),
  ('punto_write_stack -> <empty>','punto_write_stack',0,'p_punto_write_stack','lexer.py',841),
  ('punto_add_write_operand -> <empty>','punto_add_write_operand',0,'p_punto_add_write_operand','lexer.py',848),
  ('decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if','decision',10,'p_decision','lexer.py',860),
  ('decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if','decision',15,'p_decision','lexer.py',861),
  ('punto_if_exp -> <empty>','punto_if_exp',0,'p_punto_if_exp','lexer.py',865),
  ('punto_else -> <empty>','punto_else',0,'p_punto_else','lexer.py',882),
  ('punto_end_if -> <empty>','punto_end_if',0,'p_punto_end_if','lexer.py',895),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','lexer.py',903),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','lexer.py',904),
  ('no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for','no_condicional',15,'p_no_condicional','lexer.py',909),
  ('punto_for -> <empty>','punto_for',0,'p_punto_for','lexer.py',914),
  ('punto_exp_for_inf -> <empty>','punto_exp_for_inf',0,'p_punto_exp_for_inf','lexer.py',929),
  ('punto_exp_for_sup -> <empty>','punto_exp_for_sup',0,'p_punto_exp_for_sup','lexer.py',949),
  ('punto_end_for -> <empty>','punto_end_for',0,'p_punto_end_for','lexer.py',974),
  ('condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while','condicional',10,'p_condicional','lexer.py',994),
  ('punto_while -> <empty>','punto_while',0,'p_punto_while','lexer.py',999),
  ('punto_validar_exp -> <empty>','punto_validar_exp',0,'p_punto_validar_exp','lexer.py',1007),
  ('punto_end_while -> <empty>','punto_end_while',0,'p_punto_end_while','lexer.py',1024),
  ('cte -> ID factor_push_operand','cte',2,'p_cte','lexer.py',1040),
  ('cte -> CTE_I factor_int_push','cte',2,'p_cte','lexer.py',1041),
  ('cte -> cte_f factor_float_push','cte',2,'p_cte','lexer.py',1042),
  ('cte -> CTE_CHAR factor_char_push','cte',2,'p_cte','lexer.py',1043),
  ('factor_push_operand -> <empty>','factor_push_operand',0,'p_factor_push_operand','lexer.py',1049),
  ('factor_float_push -> <empty>','factor_float_push',0,'p_factor_float_push','lexer.py',1068),
  ('factor_int_push -> <empty>','factor_int_push',0,'p_factor_int_push','lexer.py',1081),
  ('factor_char_push -> <empty>','factor_char_push',0,'p_factor_char_push','lexer.py',1096),
  ('empty -> <empty>','empty',0,'p_empty','lexer.py',1115),
]
