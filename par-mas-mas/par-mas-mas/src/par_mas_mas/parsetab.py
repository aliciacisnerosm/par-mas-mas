
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND CHAR COLON COMMA CTE_CHAR CTE_I DIFFERENT DIVIDE DO DOT ELSE EQUAL EQUALS FLOAT FOR FUNC GREATER_EQUAL GREATER_THAN ID IF INT LEFT_BR LEFT_CURL LEFT_PAR LESS_EQUAL LESS_THAN MAIN MINUS MORE MULTIPLY OR PLUS PROGRAM READ RETURN RIGHT_BR RIGHT_CURL RIGHT_PAR SEMICOLON STR THEN TO VAR VD VOID WHILE WRITE\n\tcte_f : CTE_I DOT CTE_I\n\t\n\t\n\tprogram : PROGRAM ID punto_program COLON main\n\t\t\t\t\t| PROGRAM ID punto_program COLON variables main\n\t\t\t\t\t| PROGRAM ID punto_program COLON variables funciones main\n\t\t\t\t\t| PROGRAM ID punto_program COLON funciones main  \n\t\n\tpunto_program : \n\t\n\tmain : MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL\n\n\t\n\tpunto_goto_main :\n\t\n\tmain_aux : estatutos_main_multiple\n\t\t\t\t\t | empty\n\t\n\tvariables : VAR punto_variables_1 SEMICOLON\n\t\t\t\t\t\t| VAR punto_variables_1 variables_aux SEMICOLON\n\t\n\tpunto_variables_1 :\n\t\n\tvariables_aux : tipo COLON declaracion_inicial\n\t\t\t\t\t\t\t\t| tipo COLON declaracion_inicial MORE variables_aux\n\t\n\ttipo : INT\n\t\t\t| FLOAT\n\t\t\t| CHAR\n\t\n\tdeclaracion_inicial : dec_varaux punto_dec_var_1 COMMA declaracion_inicial\n\t\t\t\t\t\t\t\t\t\t\t| dec_varaux punto_dec_var_1\n\t\n\tpunto_dec_var_1 :\n\t\n\tdec_varaux : ID \n\t\t\t\t\t\t\t| ID LEFT_BR CTE_I RIGHT_BR \n\t\t\t\t\t\t\t| ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR\n\t\n\tpunto_dec_varaux_1 :\n\n\t\n\tdec_var : dec_varaux COMMA dec_var\n\t\t\t\t\t| dec_varaux\n\t\n\tdec_var_llamada : m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada\n\t\t\t\t\t| m_exp punto_verify_dec_param\n\t\n\tpunto_mas_k :\n\n\t\n\tpunto_verify_dec_param : \n\t\n\tfunciones : funciones_aux\n\t\t\t\t\t\t| funciones_aux funciones\n\t\n\t\n\t\tfunciones_aux : tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return\n\t\t\t\t\t\t\t\t | VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func\n\t\n\tpunto_return_value :\n\n\t\n\tnot_variables : variables count_vars\n\t\t\t\t\t\t\t\t| empty\n\t\n\tnot_params : parametros count_params\n\t\t\t\t\t\t | empty\n\t\n\t\tpunto_end_function_return :\n\t\n\tpunto_id_func :\n\t\n\tparametros : dec_var_param COMMA parametros\n\t\t\t\t\t\t\t| dec_var_param\n\n\t\n\tdec_var_param : tipo ID punto_push_param\n\t\n\tpunto_push_param :\n\t\n\tcount_params :\n\t\n\tcount_vars :\n\t\n\tend_func :\n\t\n\t\texp_or : t_exp punto_pop_or t_exp_or_aux\n\t\t\t\t\t| t_exp punto_pop_or\n\t\n\t\tpunto_pop_or :\n\t\n\t\n\tt_exp_or_aux : OR punto_push_or exp_or\n\t\n\tpunto_push_or :\n\t\n\tt_exp : g_exp pop_and t_exp_aux\n\t\t\t\t| g_exp pop_and\n\n\t\n\tpop_and :\n\t\n\t\n\tt_exp_aux : AND punto_push_and t_exp\n\n\t\n\tpunto_push_and :\n\t\n\t\tg_exp : m_exp\n\t\t\t\t\t| m_exp relacionales punto_relacionales m_exp punto_pop_relacional\n\t\n\tpunto_relacionales :\n\t\n\tpunto_pop_relacional :\n\t\n\tm_exp : termino punto_mexp_pop\n\t\t\t\t| termino punto_mexp_pop m_exp_aux\n\t\n\tpunto_mexp_pop :\n\t\n\tm_exp_aux : PLUS punto_m_exp_push m_exp\n\t\t\t\t\t\t| MINUS punto_m_exp_push m_exp\n\n\t\n\tpunto_m_exp_push :\n\t\n\ttermino : factor punto_termino_pop\n\t\t\t\t\t| factor punto_termino_pop termino_aux\n\t\n\tpunto_termino_pop :\n\t\n  termino_aux : MULTIPLY punto_termino_aux termino\n              | DIVIDE punto_termino_aux termino\n  \n\tpunto_termino_aux :\n\t\n\tfactor : cte\n\t\t\t\t\t| ID LEFT_PAR dec_var RIGHT_PAR\n\t\t\t\t\t| ID LEFT_PAR RIGHT_PAR\n\t\t\t\t\t| LEFT_PAR exp_or RIGHT_PAR\n\t\n\trelacionales : LESS_THAN\n\t\t\t\t\t\t\t\t\t| GREATER_THAN\n\t\t\t\t\t\t\t\t\t| DIFFERENT\n\t\t\t\t\t\t\t\t\t| EQUAL\n\t\t\t\t\t\t\t\t\t| GREATER_EQUAL\n\t\t\t\t\t\t\t\t\t| LESS_EQUAL\n\t\n\testatutos : estatutos_main_aux \n\t\t\t\t\t\t| retorno SEMICOLON \n\n\t\n\testatutos_main : asignacion SEMICOLON\n\t\t\t\t\t\t\t\t\t| llamada SEMICOLON\n\t\t\t\t\t\t\t\t\t| lectura SEMICOLON\n\t\t\t\t\t\t\t\t\t| escritura SEMICOLON\n\t\t\t\t\t\t\t\t\t| decision SEMICOLON\n\t\t\t\t\t\t\t\t\t| repeticion SEMICOLON\n\t\n\testatutos_main_multiple : estatutos_main estatutos_main_multiple\n\t\t\t\t\t\t\t\t\t\t| estatutos_main\n\t\n\testatutos_main_aux : estatutos_main estatutos\n\t\t\t\t\t\t\t\t\t\t\t| estatutos_main\n\n\t\n\tasignacion : dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion\n\n\t\n\tpunto_asignacion_var : \n\t\n\tpunto_igual :\n\t\n\tpunto_asignacion : \n\n\t\n\t\tllamada : ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada\n\t\t\t\t\t\t| ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada\n\t\t\t\t\t\t\n\t\n\tpunto_verify_id :\n\t\n\tpunto_verify_total_params :\n\t\n\tpunto_end_llamada :\n\t\n\tpunto_era :\n\t\n\t\tretorno : RETURN LEFT_PAR m_exp RIGHT_PAR punto_return\n\t\n\tpunto_return :\n\t\n\t\n\tpunto_read_stack : \n\t\n\tlectura : READ LEFT_PAR lectura_var RIGHT_PAR\n\t\n\tlectura_var : punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var\n\t\t\t\t\t| punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand\n\t\n\tpunto_push_dec_var :\n\t\n\t\tpunto_add_read_operand : \n\t\n\tescritura : WRITE LEFT_PAR escritura_aux RIGHT_PAR\n\t\n\tescritura_aux : punto_write_stack STR punto_escritura_push punto_add_write_operand\n\t\t\t\t\t\t\t\t| punto_write_stack m_exp punto_escritura_push punto_add_write_operand\n\t\t\t\t\t\t\t\t| punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux \n\t\t\t\t\t\t\t\t| punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux\n\t\n\tpunto_escritura_push : \n\n\t\n\tpunto_write_stack :\n\t\n\tpunto_add_write_operand : \n\t\n\tdecision : IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if \n\t\t\t\t\t\t| IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if\n\t\n\tpunto_if_exp :\n\t\n\tpunto_else :\n\t\n\tpunto_end_if :\n\t\n\trepeticion : condicional\n\t\t\t\t\t\t\t| no_condicional\n\t\n\tno_condicional : FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for\n\t\n\tpunto_for :\n\t\n\tpunto_exp_for_inf :\n\t\n\tpunto_exp_for_sup :\n\t\n\tpunto_end_for :\n\t\n\tcondicional : WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while\n\t\n\tpunto_while :\n\t\n\tpunto_validar_exp :\n\t\n\tpunto_end_while :\n\t\n\tcte : ID factor_push_operand\n\t\t\t| CTE_I factor_int_push\n\t\t\t| cte_f factor_float_push\n\t\t\t| CTE_CHAR factor_char_push\n\t\n\tfactor_push_operand :\n\t\n\tfactor_float_push :\n\t\n\tfactor_int_push :\n\t\n\tfactor_char_push :\n\t\n\tempty : \n\t'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,17,19,25,71,],[0,-2,-3,-5,-4,-7,]),'ID':([2,14,15,16,23,24,27,32,33,34,37,46,70,73,74,75,76,77,78,81,82,83,85,87,94,95,97,99,100,112,117,120,121,131,132,133,134,135,136,137,140,149,150,151,152,163,165,166,168,169,171,172,178,180,181,182,191,192,194,195,196,197,199,206,210,211,212,213,214,223,228,231,237,253,254,],[3,-16,-17,-18,30,31,-11,-8,-12,40,54,54,93,-88,-89,-90,-91,-92,-93,-110,-122,108,40,40,-100,-107,40,108,108,108,-148,108,108,-62,-80,-81,-82,-83,-84,-85,40,-148,-48,-48,-38,-54,-59,108,-69,-69,-75,-75,108,54,54,-37,108,108,108,108,108,108,40,54,-30,-110,-122,-122,54,54,108,108,108,54,54,]),'COLON':([3,4,14,15,16,29,],[-6,5,-16,-17,-18,34,]),'MAIN':([5,7,8,11,18,22,27,33,225,229,238,240,],[9,9,9,-32,9,-33,-11,-12,-41,-49,-34,-35,]),'VAR':([5,117,149,],[10,10,10,]),'VOID':([5,7,11,27,33,225,229,238,240,],[13,13,13,-11,-12,-41,-49,-34,-35,]),'INT':([5,7,10,11,21,27,33,42,62,65,92,225,229,238,240,],[14,14,-13,14,14,-11,-12,14,14,14,14,-41,-49,-34,-35,]),'FLOAT':([5,7,10,11,21,27,33,42,62,65,92,225,229,238,240,],[15,15,-13,15,15,-11,-12,15,15,15,15,-41,-49,-34,-35,]),'CHAR':([5,7,10,11,21,27,33,42,62,65,92,225,229,238,240,],[16,16,-13,16,16,-11,-12,16,16,16,16,-41,-49,-34,-35,]),'LEFT_PAR':([9,30,31,35,36,41,54,55,56,57,60,61,80,82,83,84,94,95,99,100,108,112,120,121,131,132,133,134,135,136,137,163,165,166,168,169,171,172,178,191,192,194,195,196,197,207,210,212,213,228,231,237,],[20,-42,-42,-36,42,65,-104,81,82,83,-137,85,95,-122,100,112,-100,-107,100,100,140,100,100,100,-62,-80,-81,-82,-83,-84,-85,-54,-59,100,-69,-69,-75,-75,100,100,100,100,100,100,100,228,-30,-122,-122,100,100,100,]),'SEMICOLON':([10,21,28,38,39,40,47,48,49,50,51,52,58,59,63,86,105,106,107,108,109,110,111,114,115,122,124,138,139,141,142,144,145,153,154,160,167,170,174,176,183,184,185,198,202,205,209,218,219,220,221,230,242,243,245,246,248,250,257,258,259,260,],[-13,27,33,-14,-21,-22,73,74,75,76,77,78,-129,-130,-20,-15,-66,-72,-76,-144,-146,-145,-147,-19,-23,-111,-116,-64,-70,-140,-141,-142,-143,-101,-106,-79,-65,-71,-78,-1,-98,-102,-105,-77,-24,226,-106,-67,-68,-73,-74,-103,-128,-139,-109,-124,-136,-108,-128,-135,-125,-131,]),'FUNC':([12,13,14,15,16,],[23,24,-16,-17,-18,]),'RIGHT_PAR':([20,40,42,65,66,67,68,69,89,91,93,95,96,98,101,102,103,104,105,106,107,108,109,110,111,115,118,119,121,123,125,126,127,129,130,138,139,140,141,142,144,145,146,155,156,157,158,159,160,162,164,167,170,173,174,175,176,186,187,188,189,193,198,202,215,216,217,218,219,220,221,222,232,233,234,239,241,244,249,],[26,-22,-148,-148,90,-47,-40,-44,116,-39,-46,-107,122,124,128,-52,-57,-60,-66,-72,-76,-144,-146,-145,-147,-23,-43,-45,154,-114,-121,-121,160,-51,-56,-64,-70,174,-140,-141,-142,-143,177,185,-31,-115,-123,-123,-79,-50,-55,-65,-71,198,-78,-27,-1,-29,-113,-117,-118,-63,-77,-24,-53,-58,-61,-67,-68,-73,-74,-26,-112,-119,-120,245,-28,-134,252,]),'LEFT_CURL':([26,90,116,177,190,200,247,251,252,],[32,117,149,-138,214,223,-127,253,254,]),'RETURN':([27,33,73,74,75,76,77,78,117,149,150,151,152,180,181,182,206,214,223,253,254,],[-11,-12,-88,-89,-90,-91,-92,-93,-148,-148,-48,-48,-38,207,207,-37,207,207,207,207,207,]),'READ':([27,32,33,37,46,73,74,75,76,77,78,117,149,150,151,152,180,181,182,206,214,223,253,254,],[-11,-8,-12,55,55,-88,-89,-90,-91,-92,-93,-148,-148,-48,-48,-38,55,55,-37,55,55,55,55,55,]),'WRITE':([27,32,33,37,46,73,74,75,76,77,78,117,149,150,151,152,180,181,182,206,214,223,253,254,],[-11,-8,-12,56,56,-88,-89,-90,-91,-92,-93,-148,-148,-48,-48,-38,56,56,-37,56,56,56,56,56,]),'IF':([27,32,33,37,46,73,74,75,76,77,78,117,149,150,151,152,180,181,182,206,214,223,253,254,],[-11,-8,-12,57,57,-88,-89,-90,-91,-92,-93,-148,-148,-48,-48,-38,57,57,-37,57,57,57,57,57,]),'WHILE':([27,32,33,37,46,73,74,75,76,77,78,117,149,150,151,152,180,181,182,206,214,223,253,254,],[-11,-8,-12,60,60,-88,-89,-90,-91,-92,-93,-148,-148,-48,-48,-38,60,60,-37,60,60,60,60,60,]),'FOR':([27,32,33,37,46,73,74,75,76,77,78,117,149,150,151,152,180,181,182,206,214,223,253,254,],[-11,-8,-12,61,61,-88,-89,-90,-91,-92,-93,-148,-148,-48,-48,-38,61,61,-37,61,61,61,61,61,]),'RIGHT_CURL':([32,37,43,44,45,46,72,73,74,75,76,77,78,203,204,206,208,226,227,235,236,255,256,],[-8,-148,71,-9,-10,-95,-94,-88,-89,-90,-91,-92,-93,225,-86,-97,229,-87,-96,242,243,257,258,]),'MORE':([38,39,40,63,114,115,202,],[62,-21,-22,-20,-19,-23,-24,]),'COMMA':([39,40,63,69,93,105,106,107,108,109,110,111,115,119,123,125,126,138,139,141,142,144,145,156,157,158,159,160,167,170,174,175,176,186,187,188,189,198,202,218,219,220,221,],[-21,-22,87,92,-46,-66,-72,-76,-144,-146,-145,-147,-23,-45,-114,-121,-121,-64,-70,-140,-141,-142,-143,-31,-115,-123,-123,-79,-65,-71,-78,199,-1,210,211,212,213,-77,-24,-67,-68,-73,-74,]),'EQUALS':([40,53,54,79,113,115,147,202,],[-22,-99,-22,94,-132,-23,178,-24,]),'LEFT_BR':([40,54,115,],[64,64,148,]),'CTE_I':([64,82,83,94,95,99,100,112,120,121,131,132,133,134,135,136,137,143,148,163,165,166,168,169,171,172,178,191,192,194,195,196,197,210,212,213,228,231,237,],[88,-122,109,-100,-107,109,109,109,109,109,-62,-80,-81,-82,-83,-84,-85,176,179,-54,-59,109,-69,-69,-75,-75,109,109,109,109,109,109,109,-30,-122,-122,109,109,109,]),'STR':([82,99,212,213,],[-122,125,-122,-122,]),'CTE_CHAR':([82,83,94,95,99,100,112,120,121,131,132,133,134,135,136,137,163,165,166,168,169,171,172,178,191,192,194,195,196,197,210,212,213,228,231,237,],[-122,111,-100,-107,111,111,111,111,111,-62,-80,-81,-82,-83,-84,-85,-54,-59,111,-69,-69,-75,-75,111,111,111,111,111,111,111,-30,-122,-122,111,111,111,]),'RIGHT_BR':([88,179,],[115,202,]),'OR':([102,103,104,105,106,107,108,109,110,111,129,130,138,139,141,142,144,145,160,164,167,170,174,176,193,198,216,217,218,219,220,221,],[-52,-57,-60,-66,-72,-76,-144,-146,-145,-147,163,-56,-64,-70,-140,-141,-142,-143,-79,-55,-65,-71,-78,-1,-63,-77,-58,-61,-67,-68,-73,-74,]),'AND':([103,104,105,106,107,108,109,110,111,130,138,139,141,142,144,145,160,167,170,174,176,193,198,217,218,219,220,221,],[-57,-60,-66,-72,-76,-144,-146,-145,-147,165,-64,-70,-140,-141,-142,-143,-79,-65,-71,-78,-1,-63,-77,-61,-67,-68,-73,-74,]),'LESS_THAN':([104,105,106,107,108,109,110,111,138,139,141,142,144,145,160,167,170,174,176,198,218,219,220,221,],[132,-66,-72,-76,-144,-146,-145,-147,-64,-70,-140,-141,-142,-143,-79,-65,-71,-78,-1,-77,-67,-68,-73,-74,]),'GREATER_THAN':([104,105,106,107,108,109,110,111,138,139,141,142,144,145,160,167,170,174,176,198,218,219,220,221,],[133,-66,-72,-76,-144,-146,-145,-147,-64,-70,-140,-141,-142,-143,-79,-65,-71,-78,-1,-77,-67,-68,-73,-74,]),'DIFFERENT':([104,105,106,107,108,109,110,111,138,139,141,142,144,145,160,167,170,174,176,198,218,219,220,221,],[134,-66,-72,-76,-144,-146,-145,-147,-64,-70,-140,-141,-142,-143,-79,-65,-71,-78,-1,-77,-67,-68,-73,-74,]),'EQUAL':([104,105,106,107,108,109,110,111,138,139,141,142,144,145,160,167,170,174,176,198,218,219,220,221,],[135,-66,-72,-76,-144,-146,-145,-147,-64,-70,-140,-141,-142,-143,-79,-65,-71,-78,-1,-77,-67,-68,-73,-74,]),'GREATER_EQUAL':([104,105,106,107,108,109,110,111,138,139,141,142,144,145,160,167,170,174,176,198,218,219,220,221,],[136,-66,-72,-76,-144,-146,-145,-147,-64,-70,-140,-141,-142,-143,-79,-65,-71,-78,-1,-77,-67,-68,-73,-74,]),'LESS_EQUAL':([104,105,106,107,108,109,110,111,138,139,141,142,144,145,160,167,170,174,176,198,218,219,220,221,],[137,-66,-72,-76,-144,-146,-145,-147,-64,-70,-140,-141,-142,-143,-79,-65,-71,-78,-1,-77,-67,-68,-73,-74,]),'PLUS':([105,106,107,108,109,110,111,138,139,141,142,144,145,160,170,174,176,198,220,221,],[-66,-72,-76,-144,-146,-145,-147,168,-70,-140,-141,-142,-143,-79,-71,-78,-1,-77,-73,-74,]),'MINUS':([105,106,107,108,109,110,111,138,139,141,142,144,145,160,170,174,176,198,220,221,],[-66,-72,-76,-144,-146,-145,-147,169,-70,-140,-141,-142,-143,-79,-71,-78,-1,-77,-73,-74,]),'TO':([105,106,107,108,109,110,111,138,139,141,142,144,145,160,167,170,174,176,198,201,218,219,220,221,224,],[-66,-72,-76,-144,-146,-145,-147,-64,-70,-140,-141,-142,-143,-79,-65,-71,-78,-1,-77,-133,-67,-68,-73,-74,237,]),'MULTIPLY':([106,107,108,109,110,111,139,141,142,144,145,160,174,176,198,],[-72,-76,-144,-146,-145,-147,171,-140,-141,-142,-143,-79,-78,-1,-77,]),'DIVIDE':([106,107,108,109,110,111,139,141,142,144,145,160,174,176,198,],[-72,-76,-144,-146,-145,-147,172,-140,-141,-142,-143,-79,-78,-1,-77,]),'DOT':([109,],[143,]),'THEN':([128,161,],[-126,190,]),'ELSE':([242,],[247,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'punto_program':([3,],[4,]),'main':([5,7,8,18,],[6,17,19,25,]),'variables':([5,117,149,],[7,151,151,]),'funciones':([5,7,11,],[8,18,22,]),'funciones_aux':([5,7,11,],[11,11,11,]),'tipo':([5,7,11,21,42,62,65,92,],[12,12,12,29,70,29,70,70,]),'punto_variables_1':([10,],[21,]),'variables_aux':([21,62,],[28,86,]),'punto_id_func':([30,31,],[35,36,]),'punto_goto_main':([32,],[37,]),'declaracion_inicial':([34,87,],[38,114,]),'dec_varaux':([34,37,46,85,87,97,140,180,181,199,206,214,223,253,254,],[39,53,53,113,39,123,175,53,53,175,53,53,53,53,53,]),'punto_return_value':([35,],[41,]),'main_aux':([37,],[43,]),'estatutos_main_multiple':([37,46,],[44,72,]),'empty':([37,42,65,117,149,],[45,68,68,152,152,]),'estatutos_main':([37,46,180,181,206,214,223,253,254,],[46,46,206,206,206,206,206,206,206,]),'asignacion':([37,46,180,181,206,214,223,253,254,],[47,47,47,47,47,47,47,47,47,]),'llamada':([37,46,180,181,206,214,223,253,254,],[48,48,48,48,48,48,48,48,48,]),'lectura':([37,46,180,181,206,214,223,253,254,],[49,49,49,49,49,49,49,49,49,]),'escritura':([37,46,180,181,206,214,223,253,254,],[50,50,50,50,50,50,50,50,50,]),'decision':([37,46,180,181,206,214,223,253,254,],[51,51,51,51,51,51,51,51,51,]),'repeticion':([37,46,180,181,206,214,223,253,254,],[52,52,52,52,52,52,52,52,52,]),'condicional':([37,46,180,181,206,214,223,253,254,],[58,58,58,58,58,58,58,58,58,]),'no_condicional':([37,46,180,181,206,214,223,253,254,],[59,59,59,59,59,59,59,59,59,]),'punto_dec_var_1':([39,],[63,]),'not_params':([42,65,],[66,89,]),'parametros':([42,65,92,],[67,67,118,]),'dec_var_param':([42,65,92,],[69,69,69,]),'punto_asignacion_var':([53,],[79,]),'punto_verify_id':([54,],[80,]),'punto_while':([60,],[84,]),'count_params':([67,],[91,]),'lectura_var':([81,211,],[96,232,]),'punto_read_stack':([81,211,],[97,97,]),'escritura_aux':([82,212,213,],[98,233,234,]),'punto_write_stack':([82,212,213,],[99,99,99,]),'exp_or':([83,100,112,191,],[101,127,146,215,]),'t_exp':([83,100,112,191,192,],[102,102,102,102,216,]),'g_exp':([83,100,112,191,192,],[103,103,103,103,103,]),'m_exp':([83,99,100,112,120,121,166,178,191,192,194,195,228,231,237,],[104,126,104,104,153,156,193,201,104,104,218,219,239,156,244,]),'termino':([83,99,100,112,120,121,166,178,191,192,194,195,196,197,228,231,237,],[105,105,105,105,105,105,105,105,105,105,105,105,220,221,105,105,105,]),'factor':([83,99,100,112,120,121,166,178,191,192,194,195,196,197,228,231,237,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'cte':([83,99,100,112,120,121,166,178,191,192,194,195,196,197,228,231,237,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'cte_f':([83,99,100,112,120,121,166,178,191,192,194,195,196,197,228,231,237,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'punto_push_param':([93,],[119,]),'punto_igual':([94,],[120,]),'punto_era':([95,],[121,]),'punto_pop_or':([102,],[129,]),'pop_and':([103,],[130,]),'relacionales':([104,],[131,]),'punto_mexp_pop':([105,],[138,]),'punto_termino_pop':([106,],[139,]),'factor_push_operand':([108,],[141,]),'factor_int_push':([109,],[142,]),'factor_float_push':([110,],[144,]),'factor_char_push':([111,],[145,]),'punto_for':([113,],[147,]),'not_variables':([117,149,],[150,180,]),'dec_var_llamada':([121,231,],[155,241,]),'punto_push_dec_var':([123,],[157,]),'punto_escritura_push':([125,126,],[158,159,]),'punto_if_exp':([128,],[161,]),'t_exp_or_aux':([129,],[162,]),'t_exp_aux':([130,],[164,]),'punto_relacionales':([131,],[166,]),'m_exp_aux':([138,],[167,]),'termino_aux':([139,],[170,]),'dec_var':([140,199,],[173,222,]),'count_vars':([150,151,],[181,182,]),'punto_asignacion':([153,],[183,]),'punto_end_llamada':([154,209,],[184,230,]),'punto_verify_dec_param':([156,],[186,]),'punto_add_read_operand':([157,],[187,]),'punto_add_write_operand':([158,159,],[188,189,]),'punto_push_or':([163,],[191,]),'punto_push_and':([165,],[192,]),'punto_m_exp_push':([168,169,],[194,195,]),'punto_termino_aux':([171,172,],[196,197,]),'punto_validar_exp':([177,],[200,]),'estatutos':([180,181,206,214,223,253,254,],[203,208,227,235,236,255,256,]),'estatutos_main_aux':([180,181,206,214,223,253,254,],[204,204,204,204,204,204,204,]),'retorno':([180,181,206,214,223,253,254,],[205,205,205,205,205,205,205,]),'punto_verify_total_params':([185,],[209,]),'punto_pop_relacional':([193,],[217,]),'punto_exp_for_inf':([201,],[224,]),'punto_mas_k':([210,],[231,]),'punto_end_function_return':([225,],[238,]),'end_func':([229,],[240,]),'punto_end_if':([242,257,],[246,259,]),'punto_end_while':([243,],[248,]),'punto_exp_for_sup':([244,],[249,]),'punto_return':([245,],[250,]),'punto_else':([247,],[251,]),'punto_end_for':([258,],[260,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('cte_f -> CTE_I DOT CTE_I','cte_f',3,'p_cte_f','lexer.py',120),
  ('program -> PROGRAM ID punto_program COLON main','program',5,'p_program','lexer.py',132),
  ('program -> PROGRAM ID punto_program COLON variables main','program',6,'p_program','lexer.py',133),
  ('program -> PROGRAM ID punto_program COLON variables funciones main','program',7,'p_program','lexer.py',134),
  ('program -> PROGRAM ID punto_program COLON funciones main','program',6,'p_program','lexer.py',135),
  ('punto_program -> <empty>','punto_program',0,'p_punto_program','lexer.py',140),
  ('main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL','main',7,'p_main','lexer.py',155),
  ('punto_goto_main -> <empty>','punto_goto_main',0,'p_punto_goto_main','lexer.py',160),
  ('main_aux -> estatutos_main_multiple','main_aux',1,'p_main_aux','lexer.py',167),
  ('main_aux -> empty','main_aux',1,'p_main_aux','lexer.py',168),
  ('variables -> VAR punto_variables_1 SEMICOLON','variables',3,'p_variables','lexer.py',173),
  ('variables -> VAR punto_variables_1 variables_aux SEMICOLON','variables',4,'p_variables','lexer.py',174),
  ('punto_variables_1 -> <empty>','punto_variables_1',0,'p_punto_variables_1','lexer.py',179),
  ('variables_aux -> tipo COLON declaracion_inicial','variables_aux',3,'p_variables_aux','lexer.py',185),
  ('variables_aux -> tipo COLON declaracion_inicial MORE variables_aux','variables_aux',5,'p_variables_aux','lexer.py',186),
  ('tipo -> INT','tipo',1,'p_tipo','lexer.py',191),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lexer.py',192),
  ('tipo -> CHAR','tipo',1,'p_tipo','lexer.py',193),
  ('declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial','declaracion_inicial',4,'p_declaracion_inicial','lexer.py',208),
  ('declaracion_inicial -> dec_varaux punto_dec_var_1','declaracion_inicial',2,'p_declaracion_inicial','lexer.py',209),
  ('punto_dec_var_1 -> <empty>','punto_dec_var_1',0,'p_punto_dec_var_1','lexer.py',214),
  ('dec_varaux -> ID','dec_varaux',1,'p_dec_varaux','lexer.py',224),
  ('dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR','dec_varaux',4,'p_dec_varaux','lexer.py',225),
  ('dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR','dec_varaux',7,'p_dec_varaux','lexer.py',226),
  ('punto_dec_varaux_1 -> <empty>','punto_dec_varaux_1',0,'p_punto_dec_varaux_1','lexer.py',235),
  ('dec_var -> dec_varaux COMMA dec_var','dec_var',3,'p_dec_var','lexer.py',241),
  ('dec_var -> dec_varaux','dec_var',1,'p_dec_var','lexer.py',242),
  ('dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada','dec_var_llamada',5,'p_dec_var_llamada','lexer.py',247),
  ('dec_var_llamada -> m_exp punto_verify_dec_param','dec_var_llamada',2,'p_dec_var_llamada','lexer.py',248),
  ('punto_mas_k -> <empty>','punto_mas_k',0,'p_punto_mas_k','lexer.py',252),
  ('punto_verify_dec_param -> <empty>','punto_verify_dec_param',0,'p_punto_verify_dec_param','lexer.py',260),
  ('funciones -> funciones_aux','funciones',1,'p_funciones','lexer.py',274),
  ('funciones -> funciones_aux funciones','funciones',2,'p_funciones','lexer.py',275),
  ('funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return','funciones_aux',13,'p_funciones_aux','lexer.py',282),
  ('funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func','funciones_aux',13,'p_funciones_aux','lexer.py',283),
  ('punto_return_value -> <empty>','punto_return_value',0,'p_punto_return_value','lexer.py',287),
  ('not_variables -> variables count_vars','not_variables',2,'p_not_variables','lexer.py',295),
  ('not_variables -> empty','not_variables',1,'p_not_variables','lexer.py',296),
  ('not_params -> parametros count_params','not_params',2,'p_not_params','lexer.py',301),
  ('not_params -> empty','not_params',1,'p_not_params','lexer.py',302),
  ('punto_end_function_return -> <empty>','punto_end_function_return',0,'p_punto_end_function_return','lexer.py',307),
  ('punto_id_func -> <empty>','punto_id_func',0,'p_punto_id_func','lexer.py',325),
  ('parametros -> dec_var_param COMMA parametros','parametros',3,'p_parametros','lexer.py',342),
  ('parametros -> dec_var_param','parametros',1,'p_parametros','lexer.py',343),
  ('dec_var_param -> tipo ID punto_push_param','dec_var_param',3,'p_dec_var_param','lexer.py',349),
  ('punto_push_param -> <empty>','punto_push_param',0,'p_punto_push_param','lexer.py',354),
  ('count_params -> <empty>','count_params',0,'p_count_params','lexer.py',374),
  ('count_vars -> <empty>','count_vars',0,'p_count_vars','lexer.py',381),
  ('end_func -> <empty>','end_func',0,'p_end_func','lexer.py',389),
  ('exp_or -> t_exp punto_pop_or t_exp_or_aux','exp_or',3,'p_exp_or','lexer.py',402),
  ('exp_or -> t_exp punto_pop_or','exp_or',2,'p_exp_or','lexer.py',403),
  ('punto_pop_or -> <empty>','punto_pop_or',0,'p_punto_pop_or','lexer.py',407),
  ('t_exp_or_aux -> OR punto_push_or exp_or','t_exp_or_aux',3,'p_t_exp_or_aux','lexer.py',450),
  ('punto_push_or -> <empty>','punto_push_or',0,'p_punto_push_or','lexer.py',455),
  ('t_exp -> g_exp pop_and t_exp_aux','t_exp',3,'p_t_exp','lexer.py',463),
  ('t_exp -> g_exp pop_and','t_exp',2,'p_t_exp','lexer.py',464),
  ('pop_and -> <empty>','pop_and',0,'p_pop_and','lexer.py',469),
  ('t_exp_aux -> AND punto_push_and t_exp','t_exp_aux',3,'p_t_exp_aux','lexer.py',512),
  ('punto_push_and -> <empty>','punto_push_and',0,'p_punto_push_and','lexer.py',517),
  ('g_exp -> m_exp','g_exp',1,'p_g_exp','lexer.py',524),
  ('g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional','g_exp',5,'p_g_exp','lexer.py',525),
  ('punto_relacionales -> <empty>','punto_relacionales',0,'p_punto_relacionales','lexer.py',529),
  ('punto_pop_relacional -> <empty>','punto_pop_relacional',0,'p_punto_pop_relacional','lexer.py',538),
  ('m_exp -> termino punto_mexp_pop','m_exp',2,'p_m_exp','lexer.py',581),
  ('m_exp -> termino punto_mexp_pop m_exp_aux','m_exp',3,'p_m_exp','lexer.py',582),
  ('punto_mexp_pop -> <empty>','punto_mexp_pop',0,'p_punto_mexp_pop','lexer.py',589),
  ('m_exp_aux -> PLUS punto_m_exp_push m_exp','m_exp_aux',3,'p_m_exp_aux','lexer.py',635),
  ('m_exp_aux -> MINUS punto_m_exp_push m_exp','m_exp_aux',3,'p_m_exp_aux','lexer.py',636),
  ('punto_m_exp_push -> <empty>','punto_m_exp_push',0,'p_punto_m_exp_push','lexer.py',641),
  ('termino -> factor punto_termino_pop','termino',2,'p_termino','lexer.py',651),
  ('termino -> factor punto_termino_pop termino_aux','termino',3,'p_termino','lexer.py',652),
  ('punto_termino_pop -> <empty>','punto_termino_pop',0,'p_punto_termino_pop','lexer.py',658),
  ('termino_aux -> MULTIPLY punto_termino_aux termino','termino_aux',3,'p_termino_aux','lexer.py',703),
  ('termino_aux -> DIVIDE punto_termino_aux termino','termino_aux',3,'p_termino_aux','lexer.py',704),
  ('punto_termino_aux -> <empty>','punto_termino_aux',0,'p_punto_termino_aux','lexer.py',709),
  ('factor -> cte','factor',1,'p_factor','lexer.py',718),
  ('factor -> ID LEFT_PAR dec_var RIGHT_PAR','factor',4,'p_factor','lexer.py',719),
  ('factor -> ID LEFT_PAR RIGHT_PAR','factor',3,'p_factor','lexer.py',720),
  ('factor -> LEFT_PAR exp_or RIGHT_PAR','factor',3,'p_factor','lexer.py',721),
  ('relacionales -> LESS_THAN','relacionales',1,'p_relacionales','lexer.py',728),
  ('relacionales -> GREATER_THAN','relacionales',1,'p_relacionales','lexer.py',729),
  ('relacionales -> DIFFERENT','relacionales',1,'p_relacionales','lexer.py',730),
  ('relacionales -> EQUAL','relacionales',1,'p_relacionales','lexer.py',731),
  ('relacionales -> GREATER_EQUAL','relacionales',1,'p_relacionales','lexer.py',732),
  ('relacionales -> LESS_EQUAL','relacionales',1,'p_relacionales','lexer.py',733),
  ('estatutos -> estatutos_main_aux','estatutos',1,'p_estatutos','lexer.py',740),
  ('estatutos -> retorno SEMICOLON','estatutos',2,'p_estatutos','lexer.py',741),
  ('estatutos_main -> asignacion SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',747),
  ('estatutos_main -> llamada SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',748),
  ('estatutos_main -> lectura SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',749),
  ('estatutos_main -> escritura SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',750),
  ('estatutos_main -> decision SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',751),
  ('estatutos_main -> repeticion SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',752),
  ('estatutos_main_multiple -> estatutos_main estatutos_main_multiple','estatutos_main_multiple',2,'p_estatutos_main_multiple','lexer.py',757),
  ('estatutos_main_multiple -> estatutos_main','estatutos_main_multiple',1,'p_estatutos_main_multiple','lexer.py',758),
  ('estatutos_main_aux -> estatutos_main estatutos','estatutos_main_aux',2,'p_estatutos_main_aux','lexer.py',763),
  ('estatutos_main_aux -> estatutos_main','estatutos_main_aux',1,'p_estatutos_main_aux','lexer.py',764),
  ('asignacion -> dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion','asignacion',6,'p_asignacion','lexer.py',770),
  ('punto_asignacion_var -> <empty>','punto_asignacion_var',0,'p_punto_asignacion_var','lexer.py',776),
  ('punto_igual -> <empty>','punto_igual',0,'p_punto_igual','lexer.py',791),
  ('punto_asignacion -> <empty>','punto_asignacion',0,'p_punto_asignacion','lexer.py',798),
  ('llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada','llamada',6,'p_llamada','lexer.py',825),
  ('llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada','llamada',8,'p_llamada','lexer.py',826),
  ('punto_verify_id -> <empty>','punto_verify_id',0,'p_punto_verify_id','lexer.py',831),
  ('punto_verify_total_params -> <empty>','punto_verify_total_params',0,'p_punto_verify_total_params','lexer.py',839),
  ('punto_end_llamada -> <empty>','punto_end_llamada',0,'p_punto_end_llamada','lexer.py',848),
  ('punto_era -> <empty>','punto_era',0,'p_punto_era','lexer.py',856),
  ('retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR punto_return','retorno',5,'p_retorno','lexer.py',867),
  ('punto_return -> <empty>','punto_return',0,'p_punto_return','lexer.py',871),
  ('punto_read_stack -> <empty>','punto_read_stack',0,'p_punto_read_stack','lexer.py',883),
  ('lectura -> READ LEFT_PAR lectura_var RIGHT_PAR','lectura',4,'p_lectura','lexer.py',892),
  ('lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var','lectura_var',6,'p_lectura_var','lexer.py',897),
  ('lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand','lectura_var',4,'p_lectura_var','lexer.py',898),
  ('punto_push_dec_var -> <empty>','punto_push_dec_var',0,'p_punto_push_dec_var','lexer.py',904),
  ('punto_add_read_operand -> <empty>','punto_add_read_operand',0,'p_punto_add_read_operand','lexer.py',921),
  ('escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR','escritura',4,'p_escritura','lexer.py',937),
  ('escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand','escritura_aux',4,'p_escritura_aux','lexer.py',942),
  ('escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand','escritura_aux',4,'p_escritura_aux','lexer.py',943),
  ('escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux','escritura_aux',6,'p_escritura_aux','lexer.py',944),
  ('escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux','escritura_aux',6,'p_escritura_aux','lexer.py',945),
  ('punto_escritura_push -> <empty>','punto_escritura_push',0,'p_punto_escritura_push','lexer.py',949),
  ('punto_write_stack -> <empty>','punto_write_stack',0,'p_punto_write_stack','lexer.py',962),
  ('punto_add_write_operand -> <empty>','punto_add_write_operand',0,'p_punto_add_write_operand','lexer.py',969),
  ('decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if','decision',10,'p_decision','lexer.py',981),
  ('decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if','decision',15,'p_decision','lexer.py',982),
  ('punto_if_exp -> <empty>','punto_if_exp',0,'p_punto_if_exp','lexer.py',986),
  ('punto_else -> <empty>','punto_else',0,'p_punto_else','lexer.py',1003),
  ('punto_end_if -> <empty>','punto_end_if',0,'p_punto_end_if','lexer.py',1016),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','lexer.py',1024),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','lexer.py',1025),
  ('no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for','no_condicional',15,'p_no_condicional','lexer.py',1030),
  ('punto_for -> <empty>','punto_for',0,'p_punto_for','lexer.py',1035),
  ('punto_exp_for_inf -> <empty>','punto_exp_for_inf',0,'p_punto_exp_for_inf','lexer.py',1050),
  ('punto_exp_for_sup -> <empty>','punto_exp_for_sup',0,'p_punto_exp_for_sup','lexer.py',1070),
  ('punto_end_for -> <empty>','punto_end_for',0,'p_punto_end_for','lexer.py',1095),
  ('condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while','condicional',10,'p_condicional','lexer.py',1115),
  ('punto_while -> <empty>','punto_while',0,'p_punto_while','lexer.py',1120),
  ('punto_validar_exp -> <empty>','punto_validar_exp',0,'p_punto_validar_exp','lexer.py',1128),
  ('punto_end_while -> <empty>','punto_end_while',0,'p_punto_end_while','lexer.py',1145),
  ('cte -> ID factor_push_operand','cte',2,'p_cte','lexer.py',1161),
  ('cte -> CTE_I factor_int_push','cte',2,'p_cte','lexer.py',1162),
  ('cte -> cte_f factor_float_push','cte',2,'p_cte','lexer.py',1163),
  ('cte -> CTE_CHAR factor_char_push','cte',2,'p_cte','lexer.py',1164),
  ('factor_push_operand -> <empty>','factor_push_operand',0,'p_factor_push_operand','lexer.py',1170),
  ('factor_float_push -> <empty>','factor_float_push',0,'p_factor_float_push','lexer.py',1189),
  ('factor_int_push -> <empty>','factor_int_push',0,'p_factor_int_push','lexer.py',1202),
  ('factor_char_push -> <empty>','factor_char_push',0,'p_factor_char_push','lexer.py',1217),
  ('empty -> <empty>','empty',0,'p_empty','lexer.py',1236),
]
