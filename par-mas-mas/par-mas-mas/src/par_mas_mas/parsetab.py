
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND CHAR COLON COMMA CTE_CHAR CTE_I DIFFERENT DIVIDE DO DOT ELSE EQUAL EQUALS FLOAT FOR FUNC GREATER_EQUAL GREATER_THAN ID IF INT LEFT_BR LEFT_CURL LEFT_PAR LESS_EQUAL LESS_THAN MAIN MINUS MORE MULTIPLY OR PLUS PROGRAM READ RETURN RIGHT_BR RIGHT_CURL RIGHT_PAR SEMICOLON STR THEN TO VAR VD VOID WHILE WRITE\n\tcte_f : CTE_I DOT CTE_I\n\t\n\t\n\tprogram : PROGRAM ID punto_program COLON main\n\t\t\t\t\t| PROGRAM ID punto_program COLON variables main\n\t\t\t\t\t| PROGRAM ID punto_program COLON variables funciones main\n\t\t\t\t\t| PROGRAM ID punto_program COLON funciones main  \n\t\n\tpunto_program : \n\t\n\tmain : MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL\n\n\t\n\tmain_aux : estatutos_main_multiple\n\t\t\t\t\t | empty\n\t\n\tvariables : VAR punto_variables_1 SEMICOLON\n\t\t\t\t\t\t| VAR punto_variables_1 variables_aux SEMICOLON\n\t\n\tpunto_variables_1 :\n\t\n\tvariables_aux : tipo COLON declaracion_inicial\n\t\t\t\t\t\t\t\t| tipo COLON declaracion_inicial MORE variables_aux\n\t\n\ttipo : INT\n\t\t\t| FLOAT\n\t\t\t| CHAR\n\t\n\tdeclaracion_inicial : dec_varaux punto_dec_var_1 COMMA declaracion_inicial\n\t\t\t\t\t\t\t\t\t\t\t| dec_varaux punto_dec_var_1\n\t\n\tpunto_dec_var_1 :\n\t\n\tdec_varaux : ID \n\t\t\t\t\t\t\t| ID LEFT_BR CTE_I RIGHT_BR \n\t\t\t\t\t\t\t| ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR\n\t\n\tpunto_dec_varaux_1 :\n\n\t\n\tdec_var : dec_varaux COMMA dec_var\n\t\t\t\t\t| dec_varaux\n\t\n\tfunciones : funciones_aux\n\t\t\t\t\t\t| funciones_aux funciones\n\t\n\t\n\t\tfunciones_aux : tipo FUNC ID LEFT_PAR parametros RIGHT_PAR LEFT_CURL variables estatutos RIGHT_CURL\n\t\t\t\t\t\t | tipo FUNC ID LEFT_PAR RIGHT_PAR LEFT_CURL variables estatutos RIGHT_CURL\n\t\t\t\t\t\t | VOID FUNC ID LEFT_PAR RIGHT_PAR LEFT_CURL variables estatutos RIGHT_CURL\n\t\t\t\t\t\t | VOID FUNC ID LEFT_PAR parametros RIGHT_PAR LEFT_CURL variables estatutos RIGHT_CURL\n\t\n\tparametros : dec_var_param COMMA parametros\n\t\t\t\t\t\t\t| dec_var_param\n\n\t\n\tdec_var_param : tipo ID\n\t\n\t\texp_or : t_exp punto_pop_or t_exp_or_aux\n\t\t\t\t\t| t_exp punto_pop_or\n\t\n\t\tpunto_pop_or :\n\t\n\t\n\tt_exp_or_aux : OR punto_push_or exp_or\n\t\n\tpunto_push_or :\n\t\n\tt_exp : g_exp pop_and t_exp_aux\n\t\t\t\t| g_exp pop_and\n\n\t\n\tpop_and :\n\t\n\t\n\tt_exp_aux : AND punto_push_and t_exp\n\n\t\n\tpunto_push_and :\n\t\n\t\tg_exp : m_exp\n\t\t\t\t\t| m_exp relacionales punto_relacionales m_exp punto_pop_relacional\n\t\n\tpunto_relacionales :\n\t\n\tpunto_pop_relacional :\n\t\n\tm_exp : termino punto_mexp_pop\n\t\t\t\t| termino punto_mexp_pop m_exp_aux\n\t\n\tpunto_mexp_pop :\n\t\n\tm_exp_aux : PLUS punto_m_exp_push m_exp\n\t\t\t\t\t\t| MINUS punto_m_exp_push m_exp\n\n\t\n\tpunto_m_exp_push :\n\t\n\ttermino : factor punto_termino_pop\n\t\t\t\t\t| factor punto_termino_pop termino_aux\n\t\n\tpunto_termino_pop :\n\t\n  termino_aux : MULTIPLY punto_termino_aux termino\n              | DIVIDE punto_termino_aux termino\n  \n\tpunto_termino_aux :\n\t\n\tfactor : cte\n\t\t\t\t\t| ID LEFT_PAR dec_var RIGHT_PAR\n\t\t\t\t\t| ID LEFT_PAR RIGHT_PAR\n\t\t\t\t\t| LEFT_PAR exp_or RIGHT_PAR\n\t\n\trelacionales : LESS_THAN\n\t\t\t\t\t\t\t\t\t| GREATER_THAN\n\t\t\t\t\t\t\t\t\t| DIFFERENT\n\t\t\t\t\t\t\t\t\t| EQUAL\n\t\t\t\t\t\t\t\t\t| GREATER_EQUAL\n\t\t\t\t\t\t\t\t\t| LESS_EQUAL\n\t\n\testatutos : estatutos_main_aux \n\t\t\t\t\t\t| retorno SEMICOLON \n\n\t\n\testatutos_main : asignacion SEMICOLON\n\t\t\t\t\t\t\t\t\t| llamada SEMICOLON\n\t\t\t\t\t\t\t\t\t| lectura SEMICOLON\n\t\t\t\t\t\t\t\t\t| escritura SEMICOLON\n\t\t\t\t\t\t\t\t\t| decision SEMICOLON\n\t\t\t\t\t\t\t\t\t| repeticion SEMICOLON\n\t\n\testatutos_main_multiple : estatutos_main estatutos_main_multiple\n\t\t\t\t\t\t\t\t\t\t| estatutos_main\n\t\n\testatutos_main_aux : estatutos_main estatutos\n\t\t\t\t\t\t\t\t\t\t\t| estatutos_main\n\n\t\n\tasignacion : dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion\n\t\n\tpunto_asignacion_var : \n\t\n\tpunto_igual :\n\t\n\tpunto_asignacion : \n\n\t\n\t\tllamada : VD ID LEFT_PAR RIGHT_PAR\n\t\t\t\t\t\t| VD ID LEFT_PAR dec_var RIGHT_PAR\n\t\n\t\tretorno : RETURN LEFT_PAR m_exp RIGHT_PAR\n\t\n\tpunto_read_stack : \n\t\n\tlectura : READ LEFT_PAR lectura_var RIGHT_PAR\n\t\n\tlectura_var : punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var\n\t\t\t\t\t| punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand\n\t\n\tpunto_push_dec_var :\n\t\n\t\tpunto_add_read_operand : \n\t\n\tescritura : WRITE LEFT_PAR escritura_aux RIGHT_PAR\n\t\n\tescritura_aux : punto_write_stack STR punto_escritura_push punto_add_write_operand\n\t\t\t\t\t\t\t\t| punto_write_stack m_exp punto_escritura_push punto_add_write_operand\n\t\t\t\t\t\t\t\t| punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux \n\t\t\t\t\t\t\t\t| punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux\n\t\n\tpunto_escritura_push : \n\n\t\n\tpunto_write_stack :\n\t\n\tpunto_add_write_operand : \n\t\n\tdecision : IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if \n\t\t\t\t\t\t| IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if\n\t\n\tpunto_if_exp :\n\t\n\tpunto_else :\n\t\n\tpunto_end_if :\n\t\n\trepeticion : condicional\n\t\t\t\t\t\t\t| no_condicional\n\t\n\tno_condicional : FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR DO LEFT_CURL estatutos RIGHT_CURL punto_end_for\n\t\n\tpunto_for :\n\t\n\tpunto_exp_for_inf :\n\t\n\tpunto_exp_for_sup :\n\t\n\tpunto_end_for :\n\t\n\tcondicional : WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while\n\t\n\tpunto_while :\n\t\n\tpunto_validar_exp :\n\t\n\tpunto_end_while :\n\t\n\tcte : ID factor_push_operand\n\t\t\t| CTE_I factor_int_push\n\t\t\t| cte_f factor_float_push\n\t\t\t| CTE_CHAR factor_char_push\n\t\n\tfactor_push_operand :\n\t\n\tfactor_float_push :\n\t\n\tfactor_int_push :\n\t\n\tfactor_char_push :\n\t\n\tempty : \n\t'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,17,19,25,65,],[0,-2,-3,-5,-4,-7,]),'ID':([2,14,15,16,23,24,27,32,33,34,40,48,59,67,68,69,70,71,72,76,77,78,80,89,90,93,95,96,108,111,113,115,117,131,132,133,134,135,136,137,140,149,153,156,159,167,169,170,172,173,175,176,181,186,196,197,199,200,201,202,210,211,212,213,221,229,239,242,],[3,-15,-16,-17,30,31,-10,49,-11,49,49,74,83,-74,-75,-76,-77,-78,-79,-91,-103,104,49,-86,49,49,104,104,104,49,49,49,104,-48,-66,-67,-68,-69,-70,-71,49,49,49,49,49,-40,-45,104,-55,-55,-61,-61,104,104,104,104,104,104,104,104,-91,-103,-103,49,49,104,49,49,]),'COLON':([3,4,14,15,16,29,],[-6,5,-15,-16,-17,34,]),'MAIN':([5,7,8,11,18,22,27,33,183,187,206,208,],[9,9,9,-27,9,-28,-10,-11,-30,-31,-29,-32,]),'VAR':([5,85,87,112,116,],[10,10,10,10,10,]),'VOID':([5,7,11,27,33,183,187,206,208,],[13,13,13,-10,-11,-30,-31,-29,-32,]),'INT':([5,7,10,11,21,27,33,35,36,81,86,183,187,206,208,],[14,14,-12,14,14,-10,-11,14,14,14,14,-30,-31,-29,-32,]),'FLOAT':([5,7,10,11,21,27,33,35,36,81,86,183,187,206,208,],[15,15,-12,15,15,-10,-11,15,15,15,15,-30,-31,-29,-32,]),'CHAR':([5,7,10,11,21,27,33,35,36,81,86,183,187,206,208,],[16,16,-12,16,16,-10,-11,16,16,16,16,-30,-31,-29,-32,]),'LEFT_PAR':([9,30,31,50,51,52,55,56,74,77,78,79,89,95,96,104,108,117,131,132,133,134,135,136,137,154,167,169,170,172,173,175,176,181,186,196,197,199,200,201,202,211,212,229,],[20,35,36,76,77,78,-118,80,90,-103,96,108,-86,96,96,140,96,96,-48,-66,-67,-68,-69,-70,-71,186,-40,-45,96,-55,-55,-61,-61,96,96,96,96,96,96,96,96,-103,-103,96,]),'SEMICOLON':([10,21,28,41,42,43,44,45,46,49,53,54,57,58,82,101,102,103,104,105,106,107,110,118,121,122,124,138,139,141,142,144,145,148,152,157,158,164,171,174,178,179,189,203,209,217,218,219,220,223,230,231,233,235,243,245,246,247,],[-12,27,33,67,68,69,70,71,72,-21,-110,-111,-13,-20,-19,-52,-58,-62,-125,-127,-126,-128,-14,-88,-22,-92,-97,-50,-56,-121,-122,-123,-124,-18,184,-87,-89,-65,-51,-57,-64,-1,-84,-63,-23,-53,-54,-59,-60,-90,-109,-120,-105,-117,-109,-106,-116,-112,]),'FUNC':([12,13,14,15,16,],[23,24,-15,-16,-17,]),'RIGHT_PAR':([20,35,36,49,60,62,64,83,90,92,94,97,98,99,100,101,102,103,104,105,106,107,114,119,120,121,123,125,126,127,129,130,138,139,140,141,142,144,145,146,161,162,163,164,166,168,171,174,177,178,179,190,192,193,194,198,203,207,209,214,215,216,217,218,219,220,224,225,226,232,236,],[26,61,63,-21,84,-34,88,-35,118,122,124,128,-38,-43,-46,-52,-58,-62,-125,-127,-126,-128,-33,158,-26,-22,-95,-102,-102,164,-37,-42,-50,-56,178,-121,-122,-123,-124,180,-96,-104,-104,-65,-36,-41,-51,-57,203,-64,-1,-25,-94,-98,-99,-49,-63,223,-23,-39,-44,-47,-53,-54,-59,-60,-93,-100,-101,-115,238,]),'LEFT_CURL':([26,61,63,84,88,180,195,204,234,237,240,],[32,85,87,112,116,-119,213,221,-108,239,242,]),'RETURN':([27,33,67,68,69,70,71,72,113,115,149,153,156,213,221,239,242,],[-10,-11,-74,-75,-76,-77,-78,-79,154,154,154,154,154,154,154,154,154,]),'VD':([27,32,33,40,67,68,69,70,71,72,113,115,149,153,156,213,221,239,242,],[-10,48,-11,48,-74,-75,-76,-77,-78,-79,48,48,48,48,48,48,48,48,48,]),'READ':([27,32,33,40,67,68,69,70,71,72,113,115,149,153,156,213,221,239,242,],[-10,50,-11,50,-74,-75,-76,-77,-78,-79,50,50,50,50,50,50,50,50,50,]),'WRITE':([27,32,33,40,67,68,69,70,71,72,113,115,149,153,156,213,221,239,242,],[-10,51,-11,51,-74,-75,-76,-77,-78,-79,51,51,51,51,51,51,51,51,51,]),'IF':([27,32,33,40,67,68,69,70,71,72,113,115,149,153,156,213,221,239,242,],[-10,52,-11,52,-74,-75,-76,-77,-78,-79,52,52,52,52,52,52,52,52,52,]),'WHILE':([27,32,33,40,67,68,69,70,71,72,113,115,149,153,156,213,221,239,242,],[-10,55,-11,55,-74,-75,-76,-77,-78,-79,55,55,55,55,55,55,55,55,55,]),'FOR':([27,32,33,40,67,68,69,70,71,72,113,115,149,153,156,213,221,239,242,],[-10,56,-11,56,-74,-75,-76,-77,-78,-79,56,56,56,56,56,56,56,56,56,]),'RIGHT_CURL':([32,37,38,39,40,66,67,68,69,70,71,72,150,151,153,155,182,184,185,188,227,228,241,244,],[-129,65,-8,-9,-81,-80,-74,-75,-76,-77,-78,-79,183,-72,-83,187,206,-73,-82,208,230,231,243,246,]),'EQUALS':([47,49,73,109,121,147,209,],[-85,-21,89,-113,-22,181,-23,]),'COMMA':([49,58,62,82,83,101,102,103,104,105,106,107,120,121,123,125,126,138,139,141,142,144,145,161,162,163,164,171,174,178,179,192,193,194,203,209,217,218,219,220,],[-21,-20,86,111,-35,-52,-58,-62,-125,-127,-126,-128,159,-22,-95,-102,-102,-50,-56,-121,-122,-123,-124,-96,-104,-104,-65,-51,-57,-64,-1,210,211,212,-63,-23,-53,-54,-59,-60,]),'MORE':([49,57,58,82,121,148,209,],[-21,81,-20,-19,-22,-18,-23,]),'LEFT_BR':([49,121,],[75,160,]),'CTE_I':([75,77,78,89,95,96,108,117,131,132,133,134,135,136,137,143,160,167,169,170,172,173,175,176,181,186,196,197,199,200,201,202,211,212,229,],[91,-103,105,-86,105,105,105,105,-48,-66,-67,-68,-69,-70,-71,179,191,-40,-45,105,-55,-55,-61,-61,105,105,105,105,105,105,105,105,-103,-103,105,]),'STR':([77,95,211,212,],[-103,125,-103,-103,]),'CTE_CHAR':([77,78,89,95,96,108,117,131,132,133,134,135,136,137,167,169,170,172,173,175,176,181,186,196,197,199,200,201,202,211,212,229,],[-103,107,-86,107,107,107,107,-48,-66,-67,-68,-69,-70,-71,-40,-45,107,-55,-55,-61,-61,107,107,107,107,107,107,107,107,-103,-103,107,]),'RIGHT_BR':([91,191,],[121,209,]),'OR':([98,99,100,101,102,103,104,105,106,107,129,130,138,139,141,142,144,145,164,168,171,174,178,179,198,203,215,216,217,218,219,220,],[-38,-43,-46,-52,-58,-62,-125,-127,-126,-128,167,-42,-50,-56,-121,-122,-123,-124,-65,-41,-51,-57,-64,-1,-49,-63,-44,-47,-53,-54,-59,-60,]),'AND':([99,100,101,102,103,104,105,106,107,130,138,139,141,142,144,145,164,171,174,178,179,198,203,216,217,218,219,220,],[-43,-46,-52,-58,-62,-125,-127,-126,-128,169,-50,-56,-121,-122,-123,-124,-65,-51,-57,-64,-1,-49,-63,-47,-53,-54,-59,-60,]),'LESS_THAN':([100,101,102,103,104,105,106,107,138,139,141,142,144,145,164,171,174,178,179,203,217,218,219,220,],[132,-52,-58,-62,-125,-127,-126,-128,-50,-56,-121,-122,-123,-124,-65,-51,-57,-64,-1,-63,-53,-54,-59,-60,]),'GREATER_THAN':([100,101,102,103,104,105,106,107,138,139,141,142,144,145,164,171,174,178,179,203,217,218,219,220,],[133,-52,-58,-62,-125,-127,-126,-128,-50,-56,-121,-122,-123,-124,-65,-51,-57,-64,-1,-63,-53,-54,-59,-60,]),'DIFFERENT':([100,101,102,103,104,105,106,107,138,139,141,142,144,145,164,171,174,178,179,203,217,218,219,220,],[134,-52,-58,-62,-125,-127,-126,-128,-50,-56,-121,-122,-123,-124,-65,-51,-57,-64,-1,-63,-53,-54,-59,-60,]),'EQUAL':([100,101,102,103,104,105,106,107,138,139,141,142,144,145,164,171,174,178,179,203,217,218,219,220,],[135,-52,-58,-62,-125,-127,-126,-128,-50,-56,-121,-122,-123,-124,-65,-51,-57,-64,-1,-63,-53,-54,-59,-60,]),'GREATER_EQUAL':([100,101,102,103,104,105,106,107,138,139,141,142,144,145,164,171,174,178,179,203,217,218,219,220,],[136,-52,-58,-62,-125,-127,-126,-128,-50,-56,-121,-122,-123,-124,-65,-51,-57,-64,-1,-63,-53,-54,-59,-60,]),'LESS_EQUAL':([100,101,102,103,104,105,106,107,138,139,141,142,144,145,164,171,174,178,179,203,217,218,219,220,],[137,-52,-58,-62,-125,-127,-126,-128,-50,-56,-121,-122,-123,-124,-65,-51,-57,-64,-1,-63,-53,-54,-59,-60,]),'PLUS':([101,102,103,104,105,106,107,138,139,141,142,144,145,164,174,178,179,203,219,220,],[-52,-58,-62,-125,-127,-126,-128,172,-56,-121,-122,-123,-124,-65,-57,-64,-1,-63,-59,-60,]),'MINUS':([101,102,103,104,105,106,107,138,139,141,142,144,145,164,174,178,179,203,219,220,],[-52,-58,-62,-125,-127,-126,-128,173,-56,-121,-122,-123,-124,-65,-57,-64,-1,-63,-59,-60,]),'TO':([101,102,103,104,105,106,107,138,139,141,142,144,145,164,171,174,178,179,203,205,217,218,219,220,222,],[-52,-58,-62,-125,-127,-126,-128,-50,-56,-121,-122,-123,-124,-65,-51,-57,-64,-1,-63,-114,-53,-54,-59,-60,229,]),'MULTIPLY':([102,103,104,105,106,107,139,141,142,144,145,164,178,179,203,],[-58,-62,-125,-127,-126,-128,175,-121,-122,-123,-124,-65,-64,-1,-63,]),'DIVIDE':([102,103,104,105,106,107,139,141,142,144,145,164,178,179,203,],[-58,-62,-125,-127,-126,-128,176,-121,-122,-123,-124,-65,-64,-1,-63,]),'DOT':([105,],[143,]),'THEN':([128,165,],[-107,195,]),'ELSE':([230,],[234,]),'DO':([238,],[240,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'punto_program':([3,],[4,]),'main':([5,7,8,18,],[6,17,19,25,]),'variables':([5,85,87,112,116,],[7,113,115,149,156,]),'funciones':([5,7,11,],[8,18,22,]),'funciones_aux':([5,7,11,],[11,11,11,]),'tipo':([5,7,11,21,35,36,81,86,],[12,12,12,29,59,59,29,59,]),'punto_variables_1':([10,],[21,]),'variables_aux':([21,81,],[28,110,]),'main_aux':([32,],[37,]),'estatutos_main_multiple':([32,40,],[38,66,]),'empty':([32,],[39,]),'estatutos_main':([32,40,113,115,149,153,156,213,221,239,242,],[40,40,153,153,153,153,153,153,153,153,153,]),'asignacion':([32,40,113,115,149,153,156,213,221,239,242,],[41,41,41,41,41,41,41,41,41,41,41,]),'llamada':([32,40,113,115,149,153,156,213,221,239,242,],[42,42,42,42,42,42,42,42,42,42,42,]),'lectura':([32,40,113,115,149,153,156,213,221,239,242,],[43,43,43,43,43,43,43,43,43,43,43,]),'escritura':([32,40,113,115,149,153,156,213,221,239,242,],[44,44,44,44,44,44,44,44,44,44,44,]),'decision':([32,40,113,115,149,153,156,213,221,239,242,],[45,45,45,45,45,45,45,45,45,45,45,]),'repeticion':([32,40,113,115,149,153,156,213,221,239,242,],[46,46,46,46,46,46,46,46,46,46,46,]),'dec_varaux':([32,34,40,80,90,93,111,113,115,140,149,153,156,159,213,221,239,242,],[47,58,47,109,120,123,58,47,47,120,47,47,47,120,47,47,47,47,]),'condicional':([32,40,113,115,149,153,156,213,221,239,242,],[53,53,53,53,53,53,53,53,53,53,53,]),'no_condicional':([32,40,113,115,149,153,156,213,221,239,242,],[54,54,54,54,54,54,54,54,54,54,54,]),'declaracion_inicial':([34,111,],[57,148,]),'parametros':([35,36,86,],[60,64,114,]),'dec_var_param':([35,36,86,],[62,62,62,]),'punto_asignacion_var':([47,],[73,]),'punto_while':([55,],[79,]),'punto_dec_var_1':([58,],[82,]),'lectura_var':([76,210,],[92,224,]),'punto_read_stack':([76,210,],[93,93,]),'escritura_aux':([77,211,212,],[94,225,226,]),'punto_write_stack':([77,211,212,],[95,95,95,]),'exp_or':([78,96,108,196,],[97,127,146,214,]),'t_exp':([78,96,108,196,197,],[98,98,98,98,215,]),'g_exp':([78,96,108,196,197,],[99,99,99,99,99,]),'m_exp':([78,95,96,108,117,170,181,186,196,197,199,200,229,],[100,126,100,100,157,198,205,207,100,100,217,218,232,]),'termino':([78,95,96,108,117,170,181,186,196,197,199,200,201,202,229,],[101,101,101,101,101,101,101,101,101,101,101,101,219,220,101,]),'factor':([78,95,96,108,117,170,181,186,196,197,199,200,201,202,229,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'cte':([78,95,96,108,117,170,181,186,196,197,199,200,201,202,229,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'cte_f':([78,95,96,108,117,170,181,186,196,197,199,200,201,202,229,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'punto_igual':([89,],[117,]),'dec_var':([90,140,159,],[119,177,190,]),'punto_pop_or':([98,],[129,]),'pop_and':([99,],[130,]),'relacionales':([100,],[131,]),'punto_mexp_pop':([101,],[138,]),'punto_termino_pop':([102,],[139,]),'factor_push_operand':([104,],[141,]),'factor_int_push':([105,],[142,]),'factor_float_push':([106,],[144,]),'factor_char_push':([107,],[145,]),'punto_for':([109,],[147,]),'estatutos':([113,115,149,153,156,213,221,239,242,],[150,155,182,185,188,227,228,241,244,]),'estatutos_main_aux':([113,115,149,153,156,213,221,239,242,],[151,151,151,151,151,151,151,151,151,]),'retorno':([113,115,149,153,156,213,221,239,242,],[152,152,152,152,152,152,152,152,152,]),'punto_push_dec_var':([123,],[161,]),'punto_escritura_push':([125,126,],[162,163,]),'punto_if_exp':([128,],[165,]),'t_exp_or_aux':([129,],[166,]),'t_exp_aux':([130,],[168,]),'punto_relacionales':([131,],[170,]),'m_exp_aux':([138,],[171,]),'termino_aux':([139,],[174,]),'punto_asignacion':([157,],[189,]),'punto_add_read_operand':([161,],[192,]),'punto_add_write_operand':([162,163,],[193,194,]),'punto_push_or':([167,],[196,]),'punto_push_and':([169,],[197,]),'punto_m_exp_push':([172,173,],[199,200,]),'punto_termino_aux':([175,176,],[201,202,]),'punto_validar_exp':([180,],[204,]),'punto_pop_relacional':([198,],[216,]),'punto_exp_for_inf':([205,],[222,]),'punto_end_if':([230,243,],[233,245,]),'punto_end_while':([231,],[235,]),'punto_exp_for_sup':([232,],[236,]),'punto_else':([234,],[237,]),'punto_end_for':([246,],[247,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('cte_f -> CTE_I DOT CTE_I','cte_f',3,'p_cte_f','lexer.py',117),
  ('program -> PROGRAM ID punto_program COLON main','program',5,'p_program','lexer.py',129),
  ('program -> PROGRAM ID punto_program COLON variables main','program',6,'p_program','lexer.py',130),
  ('program -> PROGRAM ID punto_program COLON variables funciones main','program',7,'p_program','lexer.py',131),
  ('program -> PROGRAM ID punto_program COLON funciones main','program',6,'p_program','lexer.py',132),
  ('punto_program -> <empty>','punto_program',0,'p_punto_program','lexer.py',137),
  ('main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL main_aux RIGHT_CURL','main',6,'p_main','lexer.py',151),
  ('main_aux -> estatutos_main_multiple','main_aux',1,'p_main_aux','lexer.py',157),
  ('main_aux -> empty','main_aux',1,'p_main_aux','lexer.py',158),
  ('variables -> VAR punto_variables_1 SEMICOLON','variables',3,'p_variables','lexer.py',163),
  ('variables -> VAR punto_variables_1 variables_aux SEMICOLON','variables',4,'p_variables','lexer.py',164),
  ('punto_variables_1 -> <empty>','punto_variables_1',0,'p_punto_variables_1','lexer.py',169),
  ('variables_aux -> tipo COLON declaracion_inicial','variables_aux',3,'p_variables_aux','lexer.py',175),
  ('variables_aux -> tipo COLON declaracion_inicial MORE variables_aux','variables_aux',5,'p_variables_aux','lexer.py',176),
  ('tipo -> INT','tipo',1,'p_tipo','lexer.py',181),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lexer.py',182),
  ('tipo -> CHAR','tipo',1,'p_tipo','lexer.py',183),
  ('declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial','declaracion_inicial',4,'p_declaracion_inicial','lexer.py',198),
  ('declaracion_inicial -> dec_varaux punto_dec_var_1','declaracion_inicial',2,'p_declaracion_inicial','lexer.py',199),
  ('punto_dec_var_1 -> <empty>','punto_dec_var_1',0,'p_punto_dec_var_1','lexer.py',204),
  ('dec_varaux -> ID','dec_varaux',1,'p_dec_varaux','lexer.py',214),
  ('dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR','dec_varaux',4,'p_dec_varaux','lexer.py',215),
  ('dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR','dec_varaux',7,'p_dec_varaux','lexer.py',216),
  ('punto_dec_varaux_1 -> <empty>','punto_dec_varaux_1',0,'p_punto_dec_varaux_1','lexer.py',225),
  ('dec_var -> dec_varaux COMMA dec_var','dec_var',3,'p_dec_var','lexer.py',231),
  ('dec_var -> dec_varaux','dec_var',1,'p_dec_var','lexer.py',232),
  ('funciones -> funciones_aux','funciones',1,'p_funciones','lexer.py',237),
  ('funciones -> funciones_aux funciones','funciones',2,'p_funciones','lexer.py',238),
  ('funciones_aux -> tipo FUNC ID LEFT_PAR parametros RIGHT_PAR LEFT_CURL variables estatutos RIGHT_CURL','funciones_aux',10,'p_funciones_aux','lexer.py',245),
  ('funciones_aux -> tipo FUNC ID LEFT_PAR RIGHT_PAR LEFT_CURL variables estatutos RIGHT_CURL','funciones_aux',9,'p_funciones_aux','lexer.py',246),
  ('funciones_aux -> VOID FUNC ID LEFT_PAR RIGHT_PAR LEFT_CURL variables estatutos RIGHT_CURL','funciones_aux',9,'p_funciones_aux','lexer.py',247),
  ('funciones_aux -> VOID FUNC ID LEFT_PAR parametros RIGHT_PAR LEFT_CURL variables estatutos RIGHT_CURL','funciones_aux',10,'p_funciones_aux','lexer.py',248),
  ('parametros -> dec_var_param COMMA parametros','parametros',3,'p_parametros','lexer.py',253),
  ('parametros -> dec_var_param','parametros',1,'p_parametros','lexer.py',254),
  ('dec_var_param -> tipo ID','dec_var_param',2,'p_dec_var_param','lexer.py',260),
  ('exp_or -> t_exp punto_pop_or t_exp_or_aux','exp_or',3,'p_exp_or','lexer.py',265),
  ('exp_or -> t_exp punto_pop_or','exp_or',2,'p_exp_or','lexer.py',266),
  ('punto_pop_or -> <empty>','punto_pop_or',0,'p_punto_pop_or','lexer.py',270),
  ('t_exp_or_aux -> OR punto_push_or exp_or','t_exp_or_aux',3,'p_t_exp_or_aux','lexer.py',310),
  ('punto_push_or -> <empty>','punto_push_or',0,'p_punto_push_or','lexer.py',315),
  ('t_exp -> g_exp pop_and t_exp_aux','t_exp',3,'p_t_exp','lexer.py',323),
  ('t_exp -> g_exp pop_and','t_exp',2,'p_t_exp','lexer.py',324),
  ('pop_and -> <empty>','pop_and',0,'p_pop_and','lexer.py',329),
  ('t_exp_aux -> AND punto_push_and t_exp','t_exp_aux',3,'p_t_exp_aux','lexer.py',367),
  ('punto_push_and -> <empty>','punto_push_and',0,'p_punto_push_and','lexer.py',372),
  ('g_exp -> m_exp','g_exp',1,'p_g_exp','lexer.py',379),
  ('g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional','g_exp',5,'p_g_exp','lexer.py',380),
  ('punto_relacionales -> <empty>','punto_relacionales',0,'p_punto_relacionales','lexer.py',384),
  ('punto_pop_relacional -> <empty>','punto_pop_relacional',0,'p_punto_pop_relacional','lexer.py',393),
  ('m_exp -> termino punto_mexp_pop','m_exp',2,'p_m_exp','lexer.py',433),
  ('m_exp -> termino punto_mexp_pop m_exp_aux','m_exp',3,'p_m_exp','lexer.py',434),
  ('punto_mexp_pop -> <empty>','punto_mexp_pop',0,'p_punto_mexp_pop','lexer.py',441),
  ('m_exp_aux -> PLUS punto_m_exp_push m_exp','m_exp_aux',3,'p_m_exp_aux','lexer.py',487),
  ('m_exp_aux -> MINUS punto_m_exp_push m_exp','m_exp_aux',3,'p_m_exp_aux','lexer.py',488),
  ('punto_m_exp_push -> <empty>','punto_m_exp_push',0,'p_punto_m_exp_push','lexer.py',493),
  ('termino -> factor punto_termino_pop','termino',2,'p_termino','lexer.py',503),
  ('termino -> factor punto_termino_pop termino_aux','termino',3,'p_termino','lexer.py',504),
  ('punto_termino_pop -> <empty>','punto_termino_pop',0,'p_punto_termino_pop','lexer.py',510),
  ('termino_aux -> MULTIPLY punto_termino_aux termino','termino_aux',3,'p_termino_aux','lexer.py',556),
  ('termino_aux -> DIVIDE punto_termino_aux termino','termino_aux',3,'p_termino_aux','lexer.py',557),
  ('punto_termino_aux -> <empty>','punto_termino_aux',0,'p_punto_termino_aux','lexer.py',562),
  ('factor -> cte','factor',1,'p_factor','lexer.py',571),
  ('factor -> ID LEFT_PAR dec_var RIGHT_PAR','factor',4,'p_factor','lexer.py',572),
  ('factor -> ID LEFT_PAR RIGHT_PAR','factor',3,'p_factor','lexer.py',573),
  ('factor -> LEFT_PAR exp_or RIGHT_PAR','factor',3,'p_factor','lexer.py',574),
  ('relacionales -> LESS_THAN','relacionales',1,'p_relacionales','lexer.py',581),
  ('relacionales -> GREATER_THAN','relacionales',1,'p_relacionales','lexer.py',582),
  ('relacionales -> DIFFERENT','relacionales',1,'p_relacionales','lexer.py',583),
  ('relacionales -> EQUAL','relacionales',1,'p_relacionales','lexer.py',584),
  ('relacionales -> GREATER_EQUAL','relacionales',1,'p_relacionales','lexer.py',585),
  ('relacionales -> LESS_EQUAL','relacionales',1,'p_relacionales','lexer.py',586),
  ('estatutos -> estatutos_main_aux','estatutos',1,'p_estatutos','lexer.py',591),
  ('estatutos -> retorno SEMICOLON','estatutos',2,'p_estatutos','lexer.py',592),
  ('estatutos_main -> asignacion SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',598),
  ('estatutos_main -> llamada SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',599),
  ('estatutos_main -> lectura SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',600),
  ('estatutos_main -> escritura SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',601),
  ('estatutos_main -> decision SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',602),
  ('estatutos_main -> repeticion SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',603),
  ('estatutos_main_multiple -> estatutos_main estatutos_main_multiple','estatutos_main_multiple',2,'p_estatutos_main_multiple','lexer.py',608),
  ('estatutos_main_multiple -> estatutos_main','estatutos_main_multiple',1,'p_estatutos_main_multiple','lexer.py',609),
  ('estatutos_main_aux -> estatutos_main estatutos','estatutos_main_aux',2,'p_estatutos_main_aux','lexer.py',614),
  ('estatutos_main_aux -> estatutos_main','estatutos_main_aux',1,'p_estatutos_main_aux','lexer.py',615),
  ('asignacion -> dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion','asignacion',6,'p_asignacion','lexer.py',621),
  ('punto_asignacion_var -> <empty>','punto_asignacion_var',0,'p_punto_asignacion_var','lexer.py',625),
  ('punto_igual -> <empty>','punto_igual',0,'p_punto_igual','lexer.py',637),
  ('punto_asignacion -> <empty>','punto_asignacion',0,'p_punto_asignacion','lexer.py',644),
  ('llamada -> VD ID LEFT_PAR RIGHT_PAR','llamada',4,'p_llamada','lexer.py',668),
  ('llamada -> VD ID LEFT_PAR dec_var RIGHT_PAR','llamada',5,'p_llamada','lexer.py',669),
  ('retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR','retorno',4,'p_retorno','lexer.py',674),
  ('punto_read_stack -> <empty>','punto_read_stack',0,'p_punto_read_stack','lexer.py',679),
  ('lectura -> READ LEFT_PAR lectura_var RIGHT_PAR','lectura',4,'p_lectura','lexer.py',688),
  ('lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var','lectura_var',6,'p_lectura_var','lexer.py',693),
  ('lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand','lectura_var',4,'p_lectura_var','lexer.py',694),
  ('punto_push_dec_var -> <empty>','punto_push_dec_var',0,'p_punto_push_dec_var','lexer.py',700),
  ('punto_add_read_operand -> <empty>','punto_add_read_operand',0,'p_punto_add_read_operand','lexer.py',715),
  ('escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR','escritura',4,'p_escritura','lexer.py',731),
  ('escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand','escritura_aux',4,'p_escritura_aux','lexer.py',736),
  ('escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand','escritura_aux',4,'p_escritura_aux','lexer.py',737),
  ('escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux','escritura_aux',6,'p_escritura_aux','lexer.py',738),
  ('escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux','escritura_aux',6,'p_escritura_aux','lexer.py',739),
  ('punto_escritura_push -> <empty>','punto_escritura_push',0,'p_punto_escritura_push','lexer.py',743),
  ('punto_write_stack -> <empty>','punto_write_stack',0,'p_punto_write_stack','lexer.py',757),
  ('punto_add_write_operand -> <empty>','punto_add_write_operand',0,'p_punto_add_write_operand','lexer.py',764),
  ('decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if','decision',10,'p_decision','lexer.py',778),
  ('decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if','decision',15,'p_decision','lexer.py',779),
  ('punto_if_exp -> <empty>','punto_if_exp',0,'p_punto_if_exp','lexer.py',784),
  ('punto_else -> <empty>','punto_else',0,'p_punto_else','lexer.py',800),
  ('punto_end_if -> <empty>','punto_end_if',0,'p_punto_end_if','lexer.py',813),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','lexer.py',821),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','lexer.py',822),
  ('no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR DO LEFT_CURL estatutos RIGHT_CURL punto_end_for','no_condicional',16,'p_no_condicional','lexer.py',827),
  ('punto_for -> <empty>','punto_for',0,'p_punto_for','lexer.py',832),
  ('punto_exp_for_inf -> <empty>','punto_exp_for_inf',0,'p_punto_exp_for_inf','lexer.py',846),
  ('punto_exp_for_sup -> <empty>','punto_exp_for_sup',0,'p_punto_exp_for_sup','lexer.py',866),
  ('punto_end_for -> <empty>','punto_end_for',0,'p_punto_end_for','lexer.py',887),
  ('condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while','condicional',10,'p_condicional','lexer.py',894),
  ('punto_while -> <empty>','punto_while',0,'p_punto_while','lexer.py',899),
  ('punto_validar_exp -> <empty>','punto_validar_exp',0,'p_punto_validar_exp','lexer.py',907),
  ('punto_end_while -> <empty>','punto_end_while',0,'p_punto_end_while','lexer.py',923),
  ('cte -> ID factor_push_operand','cte',2,'p_cte','lexer.py',941),
  ('cte -> CTE_I factor_int_push','cte',2,'p_cte','lexer.py',942),
  ('cte -> cte_f factor_float_push','cte',2,'p_cte','lexer.py',943),
  ('cte -> CTE_CHAR factor_char_push','cte',2,'p_cte','lexer.py',944),
  ('factor_push_operand -> <empty>','factor_push_operand',0,'p_factor_push_operand','lexer.py',950),
  ('factor_float_push -> <empty>','factor_float_push',0,'p_factor_float_push','lexer.py',968),
  ('factor_int_push -> <empty>','factor_int_push',0,'p_factor_int_push','lexer.py',980),
  ('factor_char_push -> <empty>','factor_char_push',0,'p_factor_char_push','lexer.py',992),
  ('empty -> <empty>','empty',0,'p_empty','lexer.py',1009),
]
