
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND CHAR COLON COMMA CTE_CHAR CTE_I DIFFERENT DIVIDE DO DOT ELSE EQUAL EQUALS FLOAT FOR FUNC GREATER_EQUAL GREATER_THAN ID IF INT LEFT_BR LEFT_CURL LEFT_PAR LESS_EQUAL LESS_THAN MAIN MINUS MORE MULTIPLY OR PLUS PROGRAM READ RETURN RIGHT_BR RIGHT_CURL RIGHT_PAR SEMICOLON STR THEN TO VAR VD VOID WHILE WRITE\n\tcte_f : CTE_I DOT CTE_I\n\t\n\t\n\tprogram : PROGRAM ID punto_program COLON main\n\t\t\t\t\t| PROGRAM ID punto_program COLON variables main\n\t\t\t\t\t| PROGRAM ID punto_program COLON variables funciones main\n\t\t\t\t\t| PROGRAM ID punto_program COLON funciones main  \n\t\n\tpunto_program : \n\t\n\tmain : MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator\n\n\t\n\tpunto_generator :\n\t\n\tpunto_goto_main :\n\t\n\tmain_aux : estatutos_main_multiple\n\t\t\t\t\t | empty\n\t\n\tvariables : VAR punto_variables_1 SEMICOLON\n\t\t\t\t\t\t| VAR punto_variables_1 variables_aux SEMICOLON\n\t\n\tpunto_variables_1 :\n\t\n\tvariables_aux : tipo COLON declaracion_inicial\n\t\t\t\t\t\t\t\t| tipo COLON declaracion_inicial MORE variables_aux\n\t\n\ttipo : INT\n\t\t\t| FLOAT\n\t\t\t| CHAR\n\t\n\tdeclaracion_inicial : dec_varaux punto_dec_var_1 COMMA declaracion_inicial\n\t\t\t\t\t\t\t\t\t\t\t| dec_varaux punto_dec_var_1\n\t\n\tpunto_dec_var_1 :\n\t\n\tdec_varaux : ID \n\t\t\t\t\t\t\t| ID LEFT_BR CTE_I RIGHT_BR \n\t\t\t\t\t\t\t| ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR\n\t\n\tpunto_dec_varaux_1 :\n\n\t\n\tdec_var : dec_varaux COMMA dec_var\n\t\t\t\t\t| dec_varaux\n\t\n\tdec_var_llamada : m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada\n\t\t\t\t\t| m_exp punto_verify_dec_param\n\t\n\tpunto_mas_k :\n\n\t\n\tpunto_verify_dec_param : \n\t\n\tfunciones : funciones_aux\n\t\t\t\t\t\t| funciones_aux funciones\n\t\n\t\n\t\tfunciones_aux : tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return\n\t\t\t\t\t\t\t\t | VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func\n\t\n\tpunto_return_value :\n\n\t\n\tnot_variables : variables count_vars\n\t\t\t\t\t\t\t\t| empty\n\t\n\tnot_params : parametros count_params\n\t\t\t\t\t\t | empty\n\t\n\t\tpunto_end_function_return :\n\t\n\tpunto_id_func :\n\t\n\tparametros : dec_var_param COMMA parametros\n\t\t\t\t\t\t\t| dec_var_param\n\n\t\n\tdec_var_param : tipo ID punto_push_param\n\t\n\tpunto_push_param :\n\t\n\tcount_params :\n\t\n\tcount_vars :\n\t\n\tend_func :\n\t\n\t\texp_or : t_exp punto_pop_or t_exp_or_aux\n\t\t\t\t\t| t_exp punto_pop_or\n\t\n\t\tpunto_pop_or :\n\t\n\t\n\tt_exp_or_aux : OR punto_push_or exp_or\n\t\n\tpunto_push_or :\n\t\n\tt_exp : g_exp pop_and t_exp_aux\n\t\t\t\t| g_exp pop_and\n\n\t\n\tpop_and :\n\t\n\t\n\tt_exp_aux : AND punto_push_and t_exp\n\n\t\n\tpunto_push_and :\n\t\n\t\tg_exp : m_exp\n\t\t\t\t\t| m_exp relacionales punto_relacionales m_exp punto_pop_relacional\n\t\n\tpunto_relacionales :\n\t\n\tpunto_pop_relacional :\n\t\n\tm_exp : termino punto_mexp_pop\n\t\t\t\t| termino punto_mexp_pop m_exp_aux\n\t\n\tpunto_mexp_pop :\n\t\n\tm_exp_aux : PLUS punto_m_exp_push m_exp\n\t\t\t\t\t\t| MINUS punto_m_exp_push m_exp\n\n\t\n\tpunto_m_exp_push :\n\t\n\ttermino : factor punto_termino_pop\n\t\t\t\t\t| factor punto_termino_pop termino_aux\n\t\n\tpunto_termino_pop :\n\t\n  termino_aux : MULTIPLY punto_termino_aux termino\n              | DIVIDE punto_termino_aux termino\n  \n\tpunto_termino_aux :\n\t\n\tfactor : cte\n\t\t\t\t\t| ID LEFT_PAR dec_var RIGHT_PAR\n\t\t\t\t\t| ID LEFT_PAR RIGHT_PAR\n\t\t\t\t\t| LEFT_PAR exp_or RIGHT_PAR\n\t\n\trelacionales : LESS_THAN\n\t\t\t\t\t\t\t\t\t| GREATER_THAN\n\t\t\t\t\t\t\t\t\t| DIFFERENT\n\t\t\t\t\t\t\t\t\t| EQUAL\n\t\t\t\t\t\t\t\t\t| GREATER_EQUAL\n\t\t\t\t\t\t\t\t\t| LESS_EQUAL\n\t\n\testatutos : estatutos_main_aux \n\t\t\t\t\t\t| retorno SEMICOLON \n\n\t\n\testatutos_main : asignacion SEMICOLON\n\t\t\t\t\t\t\t\t\t| llamada SEMICOLON\n\t\t\t\t\t\t\t\t\t| lectura SEMICOLON\n\t\t\t\t\t\t\t\t\t| escritura SEMICOLON\n\t\t\t\t\t\t\t\t\t| decision SEMICOLON\n\t\t\t\t\t\t\t\t\t| repeticion SEMICOLON\n\t\n\testatutos_main_multiple : estatutos_main estatutos_main_multiple\n\t\t\t\t\t\t\t\t\t\t| estatutos_main\n\t\n\testatutos_main_aux : estatutos_main estatutos\n\t\t\t\t\t\t\t\t\t\t\t| estatutos_main\n\n\t\n\tasignacion : dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion\n\n\t\n\tpunto_asignacion_var : \n\t\n\tpunto_igual :\n\t\n\tpunto_asignacion : \n\n\t\n\t\tllamada : ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada\n\t\t\t\t\t\t| ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada\n\t\t\t\t\t\t\n\t\n\tpunto_verify_id :\n\t\n\tpunto_verify_total_params :\n\t\n\tpunto_end_llamada :\n\t\n\tpunto_era :\n\t\n\t\tretorno : RETURN LEFT_PAR m_exp RIGHT_PAR punto_return\n\t\n\tpunto_return :\n\t\n\t\n\tpunto_read_stack : \n\t\n\tlectura : READ LEFT_PAR lectura_var RIGHT_PAR\n\t\n\tlectura_var : punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var\n\t\t\t\t\t| punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand\n\t\n\tpunto_push_dec_var :\n\t\n\t\tpunto_add_read_operand : \n\t\n\tescritura : WRITE LEFT_PAR escritura_aux RIGHT_PAR\n\t\n\tescritura_aux : punto_write_stack STR punto_escritura_push punto_add_write_operand\n\t\t\t\t\t\t\t\t| punto_write_stack m_exp punto_escritura_push punto_add_write_operand\n\t\t\t\t\t\t\t\t| punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux \n\t\t\t\t\t\t\t\t| punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux\n\t\n\tpunto_escritura_push : \n\n\t\n\tpunto_write_stack :\n\t\n\tpunto_add_write_operand : \n\t\n\tdecision : IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if \n\t\t\t\t\t\t| IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if\n\t\n\tpunto_if_exp :\n\t\n\tpunto_else :\n\t\n\tpunto_end_if :\n\t\n\trepeticion : condicional\n\t\t\t\t\t\t\t| no_condicional\n\t\n\tno_condicional : FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for\n\t\n\tpunto_for :\n\t\n\tpunto_exp_for_inf :\n\t\n\tpunto_exp_for_sup :\n\t\n\tpunto_end_for :\n\t\n\tcondicional : WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while\n\t\n\tpunto_while :\n\t\n\tpunto_validar_exp :\n\t\n\tpunto_end_while :\n\t\n\tcte : ID factor_push_operand\n\t\t\t| CTE_I factor_int_push\n\t\t\t| cte_f factor_float_push\n\t\t\t| CTE_CHAR factor_char_push\n\t\n\tfactor_push_operand :\n\t\n\tfactor_float_push :\n\t\n\tfactor_int_push :\n\t\n\tfactor_char_push :\n\t\n\tempty : \n\t'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,17,19,25,71,94,],[0,-2,-3,-5,-4,-8,-7,]),'ID':([2,14,15,16,23,24,27,32,33,34,37,46,70,73,74,75,76,77,78,81,82,83,85,87,95,96,98,100,101,113,118,121,122,132,133,134,135,136,137,138,141,150,151,152,153,164,166,167,169,170,172,173,179,181,182,183,192,193,195,196,197,198,200,207,211,212,213,214,215,224,229,232,238,254,255,],[3,-17,-18,-19,30,31,-12,-9,-13,40,54,54,93,-89,-90,-91,-92,-93,-94,-111,-123,109,40,40,-101,-108,40,109,109,109,-149,109,109,-63,-81,-82,-83,-84,-85,-86,40,-149,-49,-49,-39,-55,-60,109,-70,-70,-76,-76,109,54,54,-38,109,109,109,109,109,109,40,54,-31,-111,-123,-123,54,54,109,109,109,54,54,]),'COLON':([3,4,14,15,16,29,],[-6,5,-17,-18,-19,34,]),'MAIN':([5,7,8,11,18,22,27,33,226,230,239,241,],[9,9,9,-33,9,-34,-12,-13,-42,-50,-35,-36,]),'VAR':([5,118,150,],[10,10,10,]),'VOID':([5,7,11,27,33,226,230,239,241,],[13,13,13,-12,-13,-42,-50,-35,-36,]),'INT':([5,7,10,11,21,27,33,42,62,65,92,226,230,239,241,],[14,14,-14,14,14,-12,-13,14,14,14,14,-42,-50,-35,-36,]),'FLOAT':([5,7,10,11,21,27,33,42,62,65,92,226,230,239,241,],[15,15,-14,15,15,-12,-13,15,15,15,15,-42,-50,-35,-36,]),'CHAR':([5,7,10,11,21,27,33,42,62,65,92,226,230,239,241,],[16,16,-14,16,16,-12,-13,16,16,16,16,-42,-50,-35,-36,]),'LEFT_PAR':([9,30,31,35,36,41,54,55,56,57,60,61,80,82,83,84,95,96,100,101,109,113,121,122,132,133,134,135,136,137,138,164,166,167,169,170,172,173,179,192,193,195,196,197,198,208,211,213,214,229,232,238,],[20,-43,-43,-37,42,65,-105,81,82,83,-138,85,96,-123,101,113,-101,-108,101,101,141,101,101,101,-63,-81,-82,-83,-84,-85,-86,-55,-60,101,-70,-70,-76,-76,101,101,101,101,101,101,101,229,-31,-123,-123,101,101,101,]),'SEMICOLON':([10,21,28,38,39,40,47,48,49,50,51,52,58,59,63,86,106,107,108,109,110,111,112,115,116,123,125,139,140,142,143,145,146,154,155,161,168,171,175,177,184,185,186,199,203,206,210,219,220,221,222,231,243,244,246,247,249,251,258,259,260,261,],[-14,27,33,-15,-22,-23,73,74,75,76,77,78,-130,-131,-21,-16,-67,-73,-77,-145,-147,-146,-148,-20,-24,-112,-117,-65,-71,-141,-142,-143,-144,-102,-107,-80,-66,-72,-79,-1,-99,-103,-106,-78,-25,227,-107,-68,-69,-74,-75,-104,-129,-140,-110,-125,-137,-109,-129,-136,-126,-132,]),'FUNC':([12,13,14,15,16,],[23,24,-17,-18,-19,]),'RIGHT_PAR':([20,40,42,65,66,67,68,69,89,91,93,96,97,99,102,103,104,105,106,107,108,109,110,111,112,116,119,120,122,124,126,127,128,130,131,139,140,141,142,143,145,146,147,156,157,158,159,160,161,163,165,168,171,174,175,176,177,187,188,189,190,194,199,203,216,217,218,219,220,221,222,223,233,234,235,240,242,245,250,],[26,-23,-149,-149,90,-48,-41,-45,117,-40,-47,-108,123,125,129,-53,-58,-61,-67,-73,-77,-145,-147,-146,-148,-24,-44,-46,155,-115,-122,-122,161,-52,-57,-65,-71,175,-141,-142,-143,-144,178,186,-32,-116,-124,-124,-80,-51,-56,-66,-72,199,-79,-28,-1,-30,-114,-118,-119,-64,-78,-25,-54,-59,-62,-68,-69,-74,-75,-27,-113,-120,-121,246,-29,-135,253,]),'LEFT_CURL':([26,90,117,178,191,201,248,252,253,],[32,118,150,-139,215,224,-128,254,255,]),'RETURN':([27,33,73,74,75,76,77,78,118,150,151,152,153,181,182,183,207,215,224,254,255,],[-12,-13,-89,-90,-91,-92,-93,-94,-149,-149,-49,-49,-39,208,208,-38,208,208,208,208,208,]),'READ':([27,32,33,37,46,73,74,75,76,77,78,118,150,151,152,153,181,182,183,207,215,224,254,255,],[-12,-9,-13,55,55,-89,-90,-91,-92,-93,-94,-149,-149,-49,-49,-39,55,55,-38,55,55,55,55,55,]),'WRITE':([27,32,33,37,46,73,74,75,76,77,78,118,150,151,152,153,181,182,183,207,215,224,254,255,],[-12,-9,-13,56,56,-89,-90,-91,-92,-93,-94,-149,-149,-49,-49,-39,56,56,-38,56,56,56,56,56,]),'IF':([27,32,33,37,46,73,74,75,76,77,78,118,150,151,152,153,181,182,183,207,215,224,254,255,],[-12,-9,-13,57,57,-89,-90,-91,-92,-93,-94,-149,-149,-49,-49,-39,57,57,-38,57,57,57,57,57,]),'WHILE':([27,32,33,37,46,73,74,75,76,77,78,118,150,151,152,153,181,182,183,207,215,224,254,255,],[-12,-9,-13,60,60,-89,-90,-91,-92,-93,-94,-149,-149,-49,-49,-39,60,60,-38,60,60,60,60,60,]),'FOR':([27,32,33,37,46,73,74,75,76,77,78,118,150,151,152,153,181,182,183,207,215,224,254,255,],[-12,-9,-13,61,61,-89,-90,-91,-92,-93,-94,-149,-149,-49,-49,-39,61,61,-38,61,61,61,61,61,]),'RIGHT_CURL':([32,37,43,44,45,46,72,73,74,75,76,77,78,204,205,207,209,227,228,236,237,256,257,],[-9,-149,71,-10,-11,-96,-95,-89,-90,-91,-92,-93,-94,226,-87,-98,230,-88,-97,243,244,258,259,]),'MORE':([38,39,40,63,115,116,203,],[62,-22,-23,-21,-20,-24,-25,]),'COMMA':([39,40,63,69,93,106,107,108,109,110,111,112,116,120,124,126,127,139,140,142,143,145,146,157,158,159,160,161,168,171,175,176,177,187,188,189,190,199,203,219,220,221,222,],[-22,-23,87,92,-47,-67,-73,-77,-145,-147,-146,-148,-24,-46,-115,-122,-122,-65,-71,-141,-142,-143,-144,-32,-116,-124,-124,-80,-66,-72,-79,200,-1,211,212,213,214,-78,-25,-68,-69,-74,-75,]),'EQUALS':([40,53,54,79,114,116,148,203,],[-23,-100,-23,95,-133,-24,179,-25,]),'LEFT_BR':([40,54,116,],[64,64,149,]),'CTE_I':([64,82,83,95,96,100,101,113,121,122,132,133,134,135,136,137,138,144,149,164,166,167,169,170,172,173,179,192,193,195,196,197,198,211,213,214,229,232,238,],[88,-123,110,-101,-108,110,110,110,110,110,-63,-81,-82,-83,-84,-85,-86,177,180,-55,-60,110,-70,-70,-76,-76,110,110,110,110,110,110,110,-31,-123,-123,110,110,110,]),'STR':([82,100,213,214,],[-123,126,-123,-123,]),'CTE_CHAR':([82,83,95,96,100,101,113,121,122,132,133,134,135,136,137,138,164,166,167,169,170,172,173,179,192,193,195,196,197,198,211,213,214,229,232,238,],[-123,112,-101,-108,112,112,112,112,112,-63,-81,-82,-83,-84,-85,-86,-55,-60,112,-70,-70,-76,-76,112,112,112,112,112,112,112,-31,-123,-123,112,112,112,]),'RIGHT_BR':([88,180,],[116,203,]),'OR':([103,104,105,106,107,108,109,110,111,112,130,131,139,140,142,143,145,146,161,165,168,171,175,177,194,199,217,218,219,220,221,222,],[-53,-58,-61,-67,-73,-77,-145,-147,-146,-148,164,-57,-65,-71,-141,-142,-143,-144,-80,-56,-66,-72,-79,-1,-64,-78,-59,-62,-68,-69,-74,-75,]),'AND':([104,105,106,107,108,109,110,111,112,131,139,140,142,143,145,146,161,168,171,175,177,194,199,218,219,220,221,222,],[-58,-61,-67,-73,-77,-145,-147,-146,-148,166,-65,-71,-141,-142,-143,-144,-80,-66,-72,-79,-1,-64,-78,-62,-68,-69,-74,-75,]),'LESS_THAN':([105,106,107,108,109,110,111,112,139,140,142,143,145,146,161,168,171,175,177,199,219,220,221,222,],[133,-67,-73,-77,-145,-147,-146,-148,-65,-71,-141,-142,-143,-144,-80,-66,-72,-79,-1,-78,-68,-69,-74,-75,]),'GREATER_THAN':([105,106,107,108,109,110,111,112,139,140,142,143,145,146,161,168,171,175,177,199,219,220,221,222,],[134,-67,-73,-77,-145,-147,-146,-148,-65,-71,-141,-142,-143,-144,-80,-66,-72,-79,-1,-78,-68,-69,-74,-75,]),'DIFFERENT':([105,106,107,108,109,110,111,112,139,140,142,143,145,146,161,168,171,175,177,199,219,220,221,222,],[135,-67,-73,-77,-145,-147,-146,-148,-65,-71,-141,-142,-143,-144,-80,-66,-72,-79,-1,-78,-68,-69,-74,-75,]),'EQUAL':([105,106,107,108,109,110,111,112,139,140,142,143,145,146,161,168,171,175,177,199,219,220,221,222,],[136,-67,-73,-77,-145,-147,-146,-148,-65,-71,-141,-142,-143,-144,-80,-66,-72,-79,-1,-78,-68,-69,-74,-75,]),'GREATER_EQUAL':([105,106,107,108,109,110,111,112,139,140,142,143,145,146,161,168,171,175,177,199,219,220,221,222,],[137,-67,-73,-77,-145,-147,-146,-148,-65,-71,-141,-142,-143,-144,-80,-66,-72,-79,-1,-78,-68,-69,-74,-75,]),'LESS_EQUAL':([105,106,107,108,109,110,111,112,139,140,142,143,145,146,161,168,171,175,177,199,219,220,221,222,],[138,-67,-73,-77,-145,-147,-146,-148,-65,-71,-141,-142,-143,-144,-80,-66,-72,-79,-1,-78,-68,-69,-74,-75,]),'PLUS':([106,107,108,109,110,111,112,139,140,142,143,145,146,161,171,175,177,199,221,222,],[-67,-73,-77,-145,-147,-146,-148,169,-71,-141,-142,-143,-144,-80,-72,-79,-1,-78,-74,-75,]),'MINUS':([106,107,108,109,110,111,112,139,140,142,143,145,146,161,171,175,177,199,221,222,],[-67,-73,-77,-145,-147,-146,-148,170,-71,-141,-142,-143,-144,-80,-72,-79,-1,-78,-74,-75,]),'TO':([106,107,108,109,110,111,112,139,140,142,143,145,146,161,168,171,175,177,199,202,219,220,221,222,225,],[-67,-73,-77,-145,-147,-146,-148,-65,-71,-141,-142,-143,-144,-80,-66,-72,-79,-1,-78,-134,-68,-69,-74,-75,238,]),'MULTIPLY':([107,108,109,110,111,112,140,142,143,145,146,161,175,177,199,],[-73,-77,-145,-147,-146,-148,172,-141,-142,-143,-144,-80,-79,-1,-78,]),'DIVIDE':([107,108,109,110,111,112,140,142,143,145,146,161,175,177,199,],[-73,-77,-145,-147,-146,-148,173,-141,-142,-143,-144,-80,-79,-1,-78,]),'DOT':([110,],[144,]),'THEN':([129,162,],[-127,191,]),'ELSE':([243,],[248,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'punto_program':([3,],[4,]),'main':([5,7,8,18,],[6,17,19,25,]),'variables':([5,118,150,],[7,152,152,]),'funciones':([5,7,11,],[8,18,22,]),'funciones_aux':([5,7,11,],[11,11,11,]),'tipo':([5,7,11,21,42,62,65,92,],[12,12,12,29,70,29,70,70,]),'punto_variables_1':([10,],[21,]),'variables_aux':([21,62,],[28,86,]),'punto_id_func':([30,31,],[35,36,]),'punto_goto_main':([32,],[37,]),'declaracion_inicial':([34,87,],[38,115,]),'dec_varaux':([34,37,46,85,87,98,141,181,182,200,207,215,224,254,255,],[39,53,53,114,39,124,176,53,53,176,53,53,53,53,53,]),'punto_return_value':([35,],[41,]),'main_aux':([37,],[43,]),'estatutos_main_multiple':([37,46,],[44,72,]),'empty':([37,42,65,118,150,],[45,68,68,153,153,]),'estatutos_main':([37,46,181,182,207,215,224,254,255,],[46,46,207,207,207,207,207,207,207,]),'asignacion':([37,46,181,182,207,215,224,254,255,],[47,47,47,47,47,47,47,47,47,]),'llamada':([37,46,181,182,207,215,224,254,255,],[48,48,48,48,48,48,48,48,48,]),'lectura':([37,46,181,182,207,215,224,254,255,],[49,49,49,49,49,49,49,49,49,]),'escritura':([37,46,181,182,207,215,224,254,255,],[50,50,50,50,50,50,50,50,50,]),'decision':([37,46,181,182,207,215,224,254,255,],[51,51,51,51,51,51,51,51,51,]),'repeticion':([37,46,181,182,207,215,224,254,255,],[52,52,52,52,52,52,52,52,52,]),'condicional':([37,46,181,182,207,215,224,254,255,],[58,58,58,58,58,58,58,58,58,]),'no_condicional':([37,46,181,182,207,215,224,254,255,],[59,59,59,59,59,59,59,59,59,]),'punto_dec_var_1':([39,],[63,]),'not_params':([42,65,],[66,89,]),'parametros':([42,65,92,],[67,67,119,]),'dec_var_param':([42,65,92,],[69,69,69,]),'punto_asignacion_var':([53,],[79,]),'punto_verify_id':([54,],[80,]),'punto_while':([60,],[84,]),'count_params':([67,],[91,]),'punto_generator':([71,],[94,]),'lectura_var':([81,212,],[97,233,]),'punto_read_stack':([81,212,],[98,98,]),'escritura_aux':([82,213,214,],[99,234,235,]),'punto_write_stack':([82,213,214,],[100,100,100,]),'exp_or':([83,101,113,192,],[102,128,147,216,]),'t_exp':([83,101,113,192,193,],[103,103,103,103,217,]),'g_exp':([83,101,113,192,193,],[104,104,104,104,104,]),'m_exp':([83,100,101,113,121,122,167,179,192,193,195,196,229,232,238,],[105,127,105,105,154,157,194,202,105,105,219,220,240,157,245,]),'termino':([83,100,101,113,121,122,167,179,192,193,195,196,197,198,229,232,238,],[106,106,106,106,106,106,106,106,106,106,106,106,221,222,106,106,106,]),'factor':([83,100,101,113,121,122,167,179,192,193,195,196,197,198,229,232,238,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'cte':([83,100,101,113,121,122,167,179,192,193,195,196,197,198,229,232,238,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'cte_f':([83,100,101,113,121,122,167,179,192,193,195,196,197,198,229,232,238,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'punto_push_param':([93,],[120,]),'punto_igual':([95,],[121,]),'punto_era':([96,],[122,]),'punto_pop_or':([103,],[130,]),'pop_and':([104,],[131,]),'relacionales':([105,],[132,]),'punto_mexp_pop':([106,],[139,]),'punto_termino_pop':([107,],[140,]),'factor_push_operand':([109,],[142,]),'factor_int_push':([110,],[143,]),'factor_float_push':([111,],[145,]),'factor_char_push':([112,],[146,]),'punto_for':([114,],[148,]),'not_variables':([118,150,],[151,181,]),'dec_var_llamada':([122,232,],[156,242,]),'punto_push_dec_var':([124,],[158,]),'punto_escritura_push':([126,127,],[159,160,]),'punto_if_exp':([129,],[162,]),'t_exp_or_aux':([130,],[163,]),'t_exp_aux':([131,],[165,]),'punto_relacionales':([132,],[167,]),'m_exp_aux':([139,],[168,]),'termino_aux':([140,],[171,]),'dec_var':([141,200,],[174,223,]),'count_vars':([151,152,],[182,183,]),'punto_asignacion':([154,],[184,]),'punto_end_llamada':([155,210,],[185,231,]),'punto_verify_dec_param':([157,],[187,]),'punto_add_read_operand':([158,],[188,]),'punto_add_write_operand':([159,160,],[189,190,]),'punto_push_or':([164,],[192,]),'punto_push_and':([166,],[193,]),'punto_m_exp_push':([169,170,],[195,196,]),'punto_termino_aux':([172,173,],[197,198,]),'punto_validar_exp':([178,],[201,]),'estatutos':([181,182,207,215,224,254,255,],[204,209,228,236,237,256,257,]),'estatutos_main_aux':([181,182,207,215,224,254,255,],[205,205,205,205,205,205,205,]),'retorno':([181,182,207,215,224,254,255,],[206,206,206,206,206,206,206,]),'punto_verify_total_params':([186,],[210,]),'punto_pop_relacional':([194,],[218,]),'punto_exp_for_inf':([202,],[225,]),'punto_mas_k':([211,],[232,]),'punto_end_function_return':([226,],[239,]),'end_func':([230,],[241,]),'punto_end_if':([243,258,],[247,260,]),'punto_end_while':([244,],[249,]),'punto_exp_for_sup':([245,],[250,]),'punto_return':([246,],[251,]),'punto_else':([248,],[252,]),'punto_end_for':([259,],[261,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('cte_f -> CTE_I DOT CTE_I','cte_f',3,'p_cte_f','lexer.py',122),
  ('program -> PROGRAM ID punto_program COLON main','program',5,'p_program','lexer.py',134),
  ('program -> PROGRAM ID punto_program COLON variables main','program',6,'p_program','lexer.py',135),
  ('program -> PROGRAM ID punto_program COLON variables funciones main','program',7,'p_program','lexer.py',136),
  ('program -> PROGRAM ID punto_program COLON funciones main','program',6,'p_program','lexer.py',137),
  ('punto_program -> <empty>','punto_program',0,'p_punto_program','lexer.py',142),
  ('main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator','main',8,'p_main','lexer.py',157),
  ('punto_generator -> <empty>','punto_generator',0,'p_punto_generator','lexer.py',162),
  ('punto_goto_main -> <empty>','punto_goto_main',0,'p_punto_goto_main','lexer.py',168),
  ('main_aux -> estatutos_main_multiple','main_aux',1,'p_main_aux','lexer.py',175),
  ('main_aux -> empty','main_aux',1,'p_main_aux','lexer.py',176),
  ('variables -> VAR punto_variables_1 SEMICOLON','variables',3,'p_variables','lexer.py',181),
  ('variables -> VAR punto_variables_1 variables_aux SEMICOLON','variables',4,'p_variables','lexer.py',182),
  ('punto_variables_1 -> <empty>','punto_variables_1',0,'p_punto_variables_1','lexer.py',187),
  ('variables_aux -> tipo COLON declaracion_inicial','variables_aux',3,'p_variables_aux','lexer.py',193),
  ('variables_aux -> tipo COLON declaracion_inicial MORE variables_aux','variables_aux',5,'p_variables_aux','lexer.py',194),
  ('tipo -> INT','tipo',1,'p_tipo','lexer.py',199),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lexer.py',200),
  ('tipo -> CHAR','tipo',1,'p_tipo','lexer.py',201),
  ('declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial','declaracion_inicial',4,'p_declaracion_inicial','lexer.py',216),
  ('declaracion_inicial -> dec_varaux punto_dec_var_1','declaracion_inicial',2,'p_declaracion_inicial','lexer.py',217),
  ('punto_dec_var_1 -> <empty>','punto_dec_var_1',0,'p_punto_dec_var_1','lexer.py',222),
  ('dec_varaux -> ID','dec_varaux',1,'p_dec_varaux','lexer.py',232),
  ('dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR','dec_varaux',4,'p_dec_varaux','lexer.py',233),
  ('dec_varaux -> ID LEFT_BR CTE_I RIGHT_BR LEFT_BR CTE_I RIGHT_BR','dec_varaux',7,'p_dec_varaux','lexer.py',234),
  ('punto_dec_varaux_1 -> <empty>','punto_dec_varaux_1',0,'p_punto_dec_varaux_1','lexer.py',243),
  ('dec_var -> dec_varaux COMMA dec_var','dec_var',3,'p_dec_var','lexer.py',249),
  ('dec_var -> dec_varaux','dec_var',1,'p_dec_var','lexer.py',250),
  ('dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada','dec_var_llamada',5,'p_dec_var_llamada','lexer.py',255),
  ('dec_var_llamada -> m_exp punto_verify_dec_param','dec_var_llamada',2,'p_dec_var_llamada','lexer.py',256),
  ('punto_mas_k -> <empty>','punto_mas_k',0,'p_punto_mas_k','lexer.py',260),
  ('punto_verify_dec_param -> <empty>','punto_verify_dec_param',0,'p_punto_verify_dec_param','lexer.py',268),
  ('funciones -> funciones_aux','funciones',1,'p_funciones','lexer.py',282),
  ('funciones -> funciones_aux funciones','funciones',2,'p_funciones','lexer.py',283),
  ('funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return','funciones_aux',13,'p_funciones_aux','lexer.py',290),
  ('funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func','funciones_aux',13,'p_funciones_aux','lexer.py',291),
  ('punto_return_value -> <empty>','punto_return_value',0,'p_punto_return_value','lexer.py',295),
  ('not_variables -> variables count_vars','not_variables',2,'p_not_variables','lexer.py',303),
  ('not_variables -> empty','not_variables',1,'p_not_variables','lexer.py',304),
  ('not_params -> parametros count_params','not_params',2,'p_not_params','lexer.py',309),
  ('not_params -> empty','not_params',1,'p_not_params','lexer.py',310),
  ('punto_end_function_return -> <empty>','punto_end_function_return',0,'p_punto_end_function_return','lexer.py',315),
  ('punto_id_func -> <empty>','punto_id_func',0,'p_punto_id_func','lexer.py',333),
  ('parametros -> dec_var_param COMMA parametros','parametros',3,'p_parametros','lexer.py',350),
  ('parametros -> dec_var_param','parametros',1,'p_parametros','lexer.py',351),
  ('dec_var_param -> tipo ID punto_push_param','dec_var_param',3,'p_dec_var_param','lexer.py',357),
  ('punto_push_param -> <empty>','punto_push_param',0,'p_punto_push_param','lexer.py',362),
  ('count_params -> <empty>','count_params',0,'p_count_params','lexer.py',382),
  ('count_vars -> <empty>','count_vars',0,'p_count_vars','lexer.py',389),
  ('end_func -> <empty>','end_func',0,'p_end_func','lexer.py',397),
  ('exp_or -> t_exp punto_pop_or t_exp_or_aux','exp_or',3,'p_exp_or','lexer.py',409),
  ('exp_or -> t_exp punto_pop_or','exp_or',2,'p_exp_or','lexer.py',410),
  ('punto_pop_or -> <empty>','punto_pop_or',0,'p_punto_pop_or','lexer.py',414),
  ('t_exp_or_aux -> OR punto_push_or exp_or','t_exp_or_aux',3,'p_t_exp_or_aux','lexer.py',457),
  ('punto_push_or -> <empty>','punto_push_or',0,'p_punto_push_or','lexer.py',462),
  ('t_exp -> g_exp pop_and t_exp_aux','t_exp',3,'p_t_exp','lexer.py',470),
  ('t_exp -> g_exp pop_and','t_exp',2,'p_t_exp','lexer.py',471),
  ('pop_and -> <empty>','pop_and',0,'p_pop_and','lexer.py',476),
  ('t_exp_aux -> AND punto_push_and t_exp','t_exp_aux',3,'p_t_exp_aux','lexer.py',519),
  ('punto_push_and -> <empty>','punto_push_and',0,'p_punto_push_and','lexer.py',524),
  ('g_exp -> m_exp','g_exp',1,'p_g_exp','lexer.py',531),
  ('g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional','g_exp',5,'p_g_exp','lexer.py',532),
  ('punto_relacionales -> <empty>','punto_relacionales',0,'p_punto_relacionales','lexer.py',536),
  ('punto_pop_relacional -> <empty>','punto_pop_relacional',0,'p_punto_pop_relacional','lexer.py',545),
  ('m_exp -> termino punto_mexp_pop','m_exp',2,'p_m_exp','lexer.py',588),
  ('m_exp -> termino punto_mexp_pop m_exp_aux','m_exp',3,'p_m_exp','lexer.py',589),
  ('punto_mexp_pop -> <empty>','punto_mexp_pop',0,'p_punto_mexp_pop','lexer.py',596),
  ('m_exp_aux -> PLUS punto_m_exp_push m_exp','m_exp_aux',3,'p_m_exp_aux','lexer.py',642),
  ('m_exp_aux -> MINUS punto_m_exp_push m_exp','m_exp_aux',3,'p_m_exp_aux','lexer.py',643),
  ('punto_m_exp_push -> <empty>','punto_m_exp_push',0,'p_punto_m_exp_push','lexer.py',648),
  ('termino -> factor punto_termino_pop','termino',2,'p_termino','lexer.py',658),
  ('termino -> factor punto_termino_pop termino_aux','termino',3,'p_termino','lexer.py',659),
  ('punto_termino_pop -> <empty>','punto_termino_pop',0,'p_punto_termino_pop','lexer.py',665),
  ('termino_aux -> MULTIPLY punto_termino_aux termino','termino_aux',3,'p_termino_aux','lexer.py',710),
  ('termino_aux -> DIVIDE punto_termino_aux termino','termino_aux',3,'p_termino_aux','lexer.py',711),
  ('punto_termino_aux -> <empty>','punto_termino_aux',0,'p_punto_termino_aux','lexer.py',716),
  ('factor -> cte','factor',1,'p_factor','lexer.py',724),
  ('factor -> ID LEFT_PAR dec_var RIGHT_PAR','factor',4,'p_factor','lexer.py',725),
  ('factor -> ID LEFT_PAR RIGHT_PAR','factor',3,'p_factor','lexer.py',726),
  ('factor -> LEFT_PAR exp_or RIGHT_PAR','factor',3,'p_factor','lexer.py',727),
  ('relacionales -> LESS_THAN','relacionales',1,'p_relacionales','lexer.py',734),
  ('relacionales -> GREATER_THAN','relacionales',1,'p_relacionales','lexer.py',735),
  ('relacionales -> DIFFERENT','relacionales',1,'p_relacionales','lexer.py',736),
  ('relacionales -> EQUAL','relacionales',1,'p_relacionales','lexer.py',737),
  ('relacionales -> GREATER_EQUAL','relacionales',1,'p_relacionales','lexer.py',738),
  ('relacionales -> LESS_EQUAL','relacionales',1,'p_relacionales','lexer.py',739),
  ('estatutos -> estatutos_main_aux','estatutos',1,'p_estatutos','lexer.py',746),
  ('estatutos -> retorno SEMICOLON','estatutos',2,'p_estatutos','lexer.py',747),
  ('estatutos_main -> asignacion SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',753),
  ('estatutos_main -> llamada SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',754),
  ('estatutos_main -> lectura SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',755),
  ('estatutos_main -> escritura SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',756),
  ('estatutos_main -> decision SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',757),
  ('estatutos_main -> repeticion SEMICOLON','estatutos_main',2,'p_estatutos_main','lexer.py',758),
  ('estatutos_main_multiple -> estatutos_main estatutos_main_multiple','estatutos_main_multiple',2,'p_estatutos_main_multiple','lexer.py',763),
  ('estatutos_main_multiple -> estatutos_main','estatutos_main_multiple',1,'p_estatutos_main_multiple','lexer.py',764),
  ('estatutos_main_aux -> estatutos_main estatutos','estatutos_main_aux',2,'p_estatutos_main_aux','lexer.py',769),
  ('estatutos_main_aux -> estatutos_main','estatutos_main_aux',1,'p_estatutos_main_aux','lexer.py',770),
  ('asignacion -> dec_varaux punto_asignacion_var EQUALS punto_igual m_exp punto_asignacion','asignacion',6,'p_asignacion','lexer.py',776),
  ('punto_asignacion_var -> <empty>','punto_asignacion_var',0,'p_punto_asignacion_var','lexer.py',782),
  ('punto_igual -> <empty>','punto_igual',0,'p_punto_igual','lexer.py',796),
  ('punto_asignacion -> <empty>','punto_asignacion',0,'p_punto_asignacion','lexer.py',803),
  ('llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada','llamada',6,'p_llamada','lexer.py',829),
  ('llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada','llamada',8,'p_llamada','lexer.py',830),
  ('punto_verify_id -> <empty>','punto_verify_id',0,'p_punto_verify_id','lexer.py',835),
  ('punto_verify_total_params -> <empty>','punto_verify_total_params',0,'p_punto_verify_total_params','lexer.py',843),
  ('punto_end_llamada -> <empty>','punto_end_llamada',0,'p_punto_end_llamada','lexer.py',852),
  ('punto_era -> <empty>','punto_era',0,'p_punto_era','lexer.py',860),
  ('retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR punto_return','retorno',5,'p_retorno','lexer.py',871),
  ('punto_return -> <empty>','punto_return',0,'p_punto_return','lexer.py',875),
  ('punto_read_stack -> <empty>','punto_read_stack',0,'p_punto_read_stack','lexer.py',887),
  ('lectura -> READ LEFT_PAR lectura_var RIGHT_PAR','lectura',4,'p_lectura','lexer.py',896),
  ('lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand COMMA lectura_var','lectura_var',6,'p_lectura_var','lexer.py',901),
  ('lectura_var -> punto_read_stack dec_varaux punto_push_dec_var punto_add_read_operand','lectura_var',4,'p_lectura_var','lexer.py',902),
  ('punto_push_dec_var -> <empty>','punto_push_dec_var',0,'p_punto_push_dec_var','lexer.py',908),
  ('punto_add_read_operand -> <empty>','punto_add_read_operand',0,'p_punto_add_read_operand','lexer.py',925),
  ('escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR','escritura',4,'p_escritura','lexer.py',941),
  ('escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand','escritura_aux',4,'p_escritura_aux','lexer.py',946),
  ('escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand','escritura_aux',4,'p_escritura_aux','lexer.py',947),
  ('escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux','escritura_aux',6,'p_escritura_aux','lexer.py',948),
  ('escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux','escritura_aux',6,'p_escritura_aux','lexer.py',949),
  ('punto_escritura_push -> <empty>','punto_escritura_push',0,'p_punto_escritura_push','lexer.py',953),
  ('punto_write_stack -> <empty>','punto_write_stack',0,'p_punto_write_stack','lexer.py',966),
  ('punto_add_write_operand -> <empty>','punto_add_write_operand',0,'p_punto_add_write_operand','lexer.py',973),
  ('decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL punto_end_if','decision',10,'p_decision','lexer.py',985),
  ('decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp THEN LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if','decision',15,'p_decision','lexer.py',986),
  ('punto_if_exp -> <empty>','punto_if_exp',0,'p_punto_if_exp','lexer.py',990),
  ('punto_else -> <empty>','punto_else',0,'p_punto_else','lexer.py',1004),
  ('punto_end_if -> <empty>','punto_end_if',0,'p_punto_end_if','lexer.py',1015),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','lexer.py',1023),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','lexer.py',1024),
  ('no_condicional -> FOR LEFT_PAR dec_varaux punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for','no_condicional',15,'p_no_condicional','lexer.py',1029),
  ('punto_for -> <empty>','punto_for',0,'p_punto_for','lexer.py',1034),
  ('punto_exp_for_inf -> <empty>','punto_exp_for_inf',0,'p_punto_exp_for_inf','lexer.py',1048),
  ('punto_exp_for_sup -> <empty>','punto_exp_for_sup',0,'p_punto_exp_for_sup','lexer.py',1068),
  ('punto_end_for -> <empty>','punto_end_for',0,'p_punto_end_for','lexer.py',1093),
  ('condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while','condicional',10,'p_condicional','lexer.py',1113),
  ('punto_while -> <empty>','punto_while',0,'p_punto_while','lexer.py',1118),
  ('punto_validar_exp -> <empty>','punto_validar_exp',0,'p_punto_validar_exp','lexer.py',1126),
  ('punto_end_while -> <empty>','punto_end_while',0,'p_punto_end_while','lexer.py',1142),
  ('cte -> ID factor_push_operand','cte',2,'p_cte','lexer.py',1158),
  ('cte -> CTE_I factor_int_push','cte',2,'p_cte','lexer.py',1159),
  ('cte -> cte_f factor_float_push','cte',2,'p_cte','lexer.py',1160),
  ('cte -> CTE_CHAR factor_char_push','cte',2,'p_cte','lexer.py',1161),
  ('factor_push_operand -> <empty>','factor_push_operand',0,'p_factor_push_operand','lexer.py',1167),
  ('factor_float_push -> <empty>','factor_float_push',0,'p_factor_float_push','lexer.py',1184),
  ('factor_int_push -> <empty>','factor_int_push',0,'p_factor_int_push','lexer.py',1195),
  ('factor_char_push -> <empty>','factor_char_push',0,'p_factor_char_push','lexer.py',1207),
  ('empty -> <empty>','empty',0,'p_empty','lexer.py',1223),
]
